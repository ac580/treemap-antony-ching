{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/antonyching/Desktop/project/new-builder-demo/src/views/TestForm.vue?vue&type=template&id=7ac293b0&","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/src/views/TestForm.vue","mtime":1581580682000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}