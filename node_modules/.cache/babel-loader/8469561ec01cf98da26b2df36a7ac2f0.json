{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/fontfamily/fontfamilyui.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/fontfamily/fontfamilyui.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGZvbnQvZm9udGZhbWlseS9mb250ZmFtaWx5dWkKICovCmltcG9ydCBQbHVnaW4gZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS1jb3JlL3NyYy9wbHVnaW4nOwppbXBvcnQgTW9kZWwgZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS11aS9zcmMvbW9kZWwnOwppbXBvcnQgQ29sbGVjdGlvbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9jb2xsZWN0aW9uJzsKaW1wb3J0IHsgY3JlYXRlRHJvcGRvd24sIGFkZExpc3RUb0Ryb3Bkb3duIH0gZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS11aS9zcmMvZHJvcGRvd24vdXRpbHMnOwppbXBvcnQgeyBub3JtYWxpemVPcHRpb25zIH0gZnJvbSAnLi91dGlscyc7CmltcG9ydCB7IEZPTlRfRkFNSUxZIH0gZnJvbSAnLi4vdXRpbHMnOwppbXBvcnQgZm9udEZhbWlseUljb24gZnJvbSAnLi4vLi4vdGhlbWUvaWNvbnMvZm9udC1mYW1pbHkuc3ZnJzsKLyoqCiAqIFRoZSBmb250IGZhbWlseSBVSSBwbHVnaW4uIEl0IGludHJvZHVjZXMgdGhlIGAnZm9udEZhbWlseSdgIGRyb3Bkb3duLgogKgogKiBAZXh0ZW5kcyBtb2R1bGU6Y29yZS9wbHVnaW5+UGx1Z2luCiAqLwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9udEZhbWlseVVJIGV4dGVuZHMgUGx1Z2luIHsKICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwogIGluaXQoKSB7CiAgICBjb25zdCBlZGl0b3IgPSB0aGlzLmVkaXRvcjsKICAgIGNvbnN0IHQgPSBlZGl0b3IudDsKCiAgICBjb25zdCBvcHRpb25zID0gdGhpcy5fZ2V0TG9jYWxpemVkT3B0aW9ucygpOwoKICAgIGNvbnN0IGNvbW1hbmQgPSBlZGl0b3IuY29tbWFuZHMuZ2V0KEZPTlRfRkFNSUxZKTsgLy8gUmVnaXN0ZXIgVUkgY29tcG9uZW50LgoKICAgIGVkaXRvci51aS5jb21wb25lbnRGYWN0b3J5LmFkZChGT05UX0ZBTUlMWSwgbG9jYWxlID0+IHsKICAgICAgY29uc3QgZHJvcGRvd25WaWV3ID0gY3JlYXRlRHJvcGRvd24obG9jYWxlKTsKICAgICAgYWRkTGlzdFRvRHJvcGRvd24oZHJvcGRvd25WaWV3LCBfcHJlcGFyZUxpc3RPcHRpb25zKG9wdGlvbnMsIGNvbW1hbmQpKTsKICAgICAgZHJvcGRvd25WaWV3LmJ1dHRvblZpZXcuc2V0KHsKICAgICAgICBsYWJlbDogdCgnRm9udCBGYW1pbHknKSwKICAgICAgICBpY29uOiBmb250RmFtaWx5SWNvbiwKICAgICAgICB0b29sdGlwOiB0cnVlCiAgICAgIH0pOwogICAgICBkcm9wZG93blZpZXcuZXh0ZW5kVGVtcGxhdGUoewogICAgICAgIGF0dHJpYnV0ZXM6IHsKICAgICAgICAgIGNsYXNzOiAnY2stZm9udC1mYW1pbHktZHJvcGRvd24nCiAgICAgICAgfQogICAgICB9KTsKICAgICAgZHJvcGRvd25WaWV3LmJpbmQoJ2lzRW5hYmxlZCcpLnRvKGNvbW1hbmQpOyAvLyBFeGVjdXRlIGNvbW1hbmQgd2hlbiBhbiBpdGVtIGZyb20gdGhlIGRyb3Bkb3duIGlzIHNlbGVjdGVkLgoKICAgICAgdGhpcy5saXN0ZW5Ubyhkcm9wZG93blZpZXcsICdleGVjdXRlJywgZXZ0ID0+IHsKICAgICAgICBlZGl0b3IuZXhlY3V0ZShldnQuc291cmNlLmNvbW1hbmROYW1lLCB7CiAgICAgICAgICB2YWx1ZTogZXZ0LnNvdXJjZS5jb21tYW5kUGFyYW0KICAgICAgICB9KTsKICAgICAgICBlZGl0b3IuZWRpdGluZy52aWV3LmZvY3VzKCk7CiAgICAgIH0pOwogICAgICByZXR1cm4gZHJvcGRvd25WaWV3OwogICAgfSk7CiAgfQogIC8qKgogICAqIFJldHVybnMgb3B0aW9ucyBhcyBkZWZpbmVkIGluIGBjb25maWcuZm9udEZhbWlseS5vcHRpb25zYCBidXQgcHJvY2Vzc2VkIHRvIGFjY291bnQgZm9yCiAgICogZWRpdG9yIGxvY2FsaXphdGlvbiwgaS5lLiB0byBkaXNwbGF5IHtAbGluayBtb2R1bGU6Zm9udC9mb250ZmFtaWx5fkZvbnRGYW1pbHlPcHRpb259CiAgICogaW4gdGhlIGNvcnJlY3QgbGFuZ3VhZ2UuCiAgICoKICAgKiBOb3RlOiBUaGUgcmVhc29uIGJlaGluZCB0aGlzIG1ldGhvZCBpcyB0aGF0IHRoZXJlIGlzIG5vIHdheSB0byB1c2Uge0BsaW5rIG1vZHVsZTp1dGlscy9sb2NhbGV+TG9jYWxlI3R9CiAgICogd2hlbiB0aGUgdXNlciBjb25maWd1cmF0aW9uIGlzIGRlZmluZWQgYmVjYXVzZSB0aGUgZWRpdG9yIGRvZXMgbm90IGV4aXN0IHlldC4KICAgKgogICAqIEBwcml2YXRlCiAgICogQHJldHVybnMge0FycmF5Ljxtb2R1bGU6Zm9udC9mb250ZmFtaWx5fkZvbnRGYW1pbHlPcHRpb24+fS4KICAgKi8KCgogIF9nZXRMb2NhbGl6ZWRPcHRpb25zKCkgewogICAgY29uc3QgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICBjb25zdCB0ID0gZWRpdG9yLnQ7CiAgICBjb25zdCBvcHRpb25zID0gbm9ybWFsaXplT3B0aW9ucyhlZGl0b3IuY29uZmlnLmdldChGT05UX0ZBTUlMWSkub3B0aW9ucyk7CiAgICByZXR1cm4gb3B0aW9ucy5tYXAob3B0aW9uID0+IHsKICAgICAgLy8gVGhlIG9ubHkgdGl0bGUgdG8gbG9jYWxpemUgaXMgIkRlZmF1bHQiIG90aGVycyBhcmUgZm9udCBuYW1lcy4KICAgICAgaWYgKG9wdGlvbi50aXRsZSA9PT0gJ0RlZmF1bHQnKSB7CiAgICAgICAgb3B0aW9uLnRpdGxlID0gdCgnRGVmYXVsdCcpOwogICAgICB9CgogICAgICByZXR1cm4gb3B0aW9uOwogICAgfSk7CiAgfQoKfSAvLyBQcmVwYXJlcyBGb250RmFtaWx5IGRyb3Bkb3duIGl0ZW1zLgovLyBAcHJpdmF0ZQovLyBAcGFyYW0ge0FycmF5Ljxtb2R1bGU6Zm9udC9mb250c2l6ZX5Gb250U2l6ZU9wdGlvbj59IG9wdGlvbnMKLy8gQHBhcmFtIHttb2R1bGU6Zm9udC9mb250c2l6ZS9mb250c2l6ZWNvbW1hbmR+Rm9udFNpemVDb21tYW5kfSBjb21tYW5kCgpmdW5jdGlvbiBfcHJlcGFyZUxpc3RPcHRpb25zKG9wdGlvbnMsIGNvbW1hbmQpIHsKICBjb25zdCBpdGVtRGVmaW5pdGlvbnMgPSBuZXcgQ29sbGVjdGlvbigpOyAvLyBDcmVhdGUgZHJvcGRvd24gaXRlbXMuCgogIGZvciAoY29uc3Qgb3B0aW9uIG9mIG9wdGlvbnMpIHsKICAgIGNvbnN0IGRlZiA9IHsKICAgICAgdHlwZTogJ2J1dHRvbicsCiAgICAgIG1vZGVsOiBuZXcgTW9kZWwoewogICAgICAgIGNvbW1hbmROYW1lOiBGT05UX0ZBTUlMWSwKICAgICAgICBjb21tYW5kUGFyYW06IG9wdGlvbi5tb2RlbCwKICAgICAgICBsYWJlbDogb3B0aW9uLnRpdGxlLAogICAgICAgIHdpdGhUZXh0OiB0cnVlCiAgICAgIH0pCiAgICB9OwogICAgZGVmLm1vZGVsLmJpbmQoJ2lzT24nKS50byhjb21tYW5kLCAndmFsdWUnLCB2YWx1ZSA9PiB2YWx1ZSA9PT0gb3B0aW9uLm1vZGVsKTsgLy8gVHJ5IHRvIHNldCBhIGRyb3Bkb3duIGxpc3QgaXRlbSBzdHlsZS4KCiAgICBpZiAob3B0aW9uLnZpZXcgJiYgb3B0aW9uLnZpZXcuc3R5bGVzKSB7CiAgICAgIGRlZi5tb2RlbC5zZXQoJ2xhYmVsU3R5bGUnLCBgZm9udC1mYW1pbHk6ICR7b3B0aW9uLnZpZXcuc3R5bGVzWydmb250LWZhbWlseSddfWApOwogICAgfQoKICAgIGl0ZW1EZWZpbml0aW9ucy5hZGQoZGVmKTsKICB9CgogIHJldHVybiBpdGVtRGVmaW5pdGlvbnM7Cn0="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/fontfamily/fontfamilyui.js"],"names":["Plugin","Model","Collection","createDropdown","addListToDropdown","normalizeOptions","FONT_FAMILY","fontFamilyIcon","FontFamilyUI","init","editor","t","options","_getLocalizedOptions","command","commands","get","ui","componentFactory","add","locale","dropdownView","_prepareListOptions","buttonView","set","label","icon","tooltip","extendTemplate","attributes","class","bind","to","listenTo","evt","execute","source","commandName","value","commandParam","editing","view","focus","config","map","option","title","itemDefinitions","def","type","model","withText","styles"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontfamily/fontfamilyui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\nimport { createDropdown, addListToDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { normalizeOptions } from './utils';\nimport { FONT_FAMILY } from '../utils';\nimport fontFamilyIcon from '../../theme/icons/font-family.svg';\n\n/**\n * The font family UI plugin. It introduces the `'fontFamily'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontFamilyUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst options = this._getLocalizedOptions();\n\n\t\tconst command = editor.commands.get( FONT_FAMILY );\n\n\t\t// Register UI component.\n\t\teditor.ui.componentFactory.add( FONT_FAMILY, locale => {\n\t\t\tconst dropdownView = createDropdown( locale );\n\t\t\taddListToDropdown( dropdownView, _prepareListOptions( options, command ) );\n\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\tlabel: t( 'Font Family' ),\n\t\t\t\ticon: fontFamilyIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tdropdownView.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: 'ck-font-family-dropdown'\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdropdownView.bind( 'isEnabled' ).to( command );\n\n\t\t\t// Execute command when an item from the dropdown is selected.\n\t\t\tthis.listenTo( dropdownView, 'execute', evt => {\n\t\t\t\teditor.execute( evt.source.commandName, { value: evt.source.commandParam } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n\n\t/**\n\t * Returns options as defined in `config.fontFamily.options` but processed to account for\n\t * editor localization, i.e. to display {@link module:font/fontfamily~FontFamilyOption}\n\t * in the correct language.\n\t *\n\t * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n\t * when the user configuration is defined because the editor does not exist yet.\n\t *\n\t * @private\n\t * @returns {Array.<module:font/fontfamily~FontFamilyOption>}.\n\t */\n\t_getLocalizedOptions() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst options = normalizeOptions( editor.config.get( FONT_FAMILY ).options );\n\n\t\treturn options.map( option => {\n\t\t\t// The only title to localize is \"Default\" others are font names.\n\t\t\tif ( option.title === 'Default' ) {\n\t\t\t\toption.title = t( 'Default' );\n\t\t\t}\n\n\t\t\treturn option;\n\t\t} );\n\t}\n}\n\n// Prepares FontFamily dropdown items.\n// @private\n// @param {Array.<module:font/fontsize~FontSizeOption>} options\n// @param {module:font/fontsize/fontsizecommand~FontSizeCommand} command\nfunction _prepareListOptions( options, command ) {\n\tconst itemDefinitions = new Collection();\n\n\t// Create dropdown items.\n\tfor ( const option of options ) {\n\t\tconst def = {\n\t\t\ttype: 'button',\n\t\t\tmodel: new Model( {\n\t\t\t\tcommandName: FONT_FAMILY,\n\t\t\t\tcommandParam: option.model,\n\t\t\t\tlabel: option.title,\n\t\t\t\twithText: true\n\t\t\t} )\n\t\t};\n\n\t\tdef.model.bind( 'isOn' ).to( command, 'value', value => value === option.model );\n\n\t\t// Try to set a dropdown list item style.\n\t\tif ( option.view && option.view.styles ) {\n\t\t\tdef.model.set( 'labelStyle', `font-family: ${ option.view.styles[ 'font-family' ] }` );\n\t\t}\n\n\t\titemDefinitions.add( def );\n\t}\n\treturn itemDefinitions;\n}\n"]}]}