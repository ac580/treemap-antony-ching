{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/fontfamily.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/fontfamily.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGZvbnQvZm9udGZhbWlseQogKi8KaW1wb3J0IFBsdWdpbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LWNvcmUvc3JjL3BsdWdpbic7CmltcG9ydCBGb250RmFtaWx5RWRpdGluZyBmcm9tICcuL2ZvbnRmYW1pbHkvZm9udGZhbWlseWVkaXRpbmcnOwppbXBvcnQgRm9udEZhbWlseVVJIGZyb20gJy4vZm9udGZhbWlseS9mb250ZmFtaWx5dWknOwovKioKICogVGhlIGZvbnQgZmFtaWx5IHBsdWdpbi4KICoKICogRm9yIGEgZGV0YWlsZWQgb3ZlcnZpZXcsIGNoZWNrIHRoZSB7QGdsaW5rIGZlYXR1cmVzL2ZvbnQgZm9udCBmZWF0dXJlfSBkb2N1bWVudGF0aW9tCiAqIGFuZCB0aGUge0BnbGluayBhcGkvZm9udCBwYWNrYWdlIHBhZ2V9LgogKgogKiBUaGlzIGlzIGEgImdsdWUiIHBsdWdpbiB3aGljaCBsb2FkcyB0aGUge0BsaW5rIG1vZHVsZTpmb250L2ZvbnRmYW1pbHkvZm9udGZhbWlseWVkaXRpbmd+Rm9udEZhbWlseUVkaXRpbmd9IGFuZAogKiB7QGxpbmsgbW9kdWxlOmZvbnQvZm9udGZhbWlseS9mb250ZmFtaWx5dWl+Rm9udEZhbWlseVVJfSBmZWF0dXJlcyBpbiB0aGUgZWRpdG9yLgogKgogKiBAZXh0ZW5kcyBtb2R1bGU6Y29yZS9wbHVnaW5+UGx1Z2luCiAqLwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9udEZhbWlseSBleHRlbmRzIFBsdWdpbiB7CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KICBzdGF0aWMgZ2V0IHJlcXVpcmVzKCkgewogICAgcmV0dXJuIFtGb250RmFtaWx5RWRpdGluZywgRm9udEZhbWlseVVJXTsKICB9CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KCgogIHN0YXRpYyBnZXQgcGx1Z2luTmFtZSgpIHsKICAgIHJldHVybiAnRm9udEZhbWlseSc7CiAgfQoKfQovKioKICogVGhlIGZvbnQgZmFtaWx5IG9wdGlvbiBkZXNjcmlwdG9yLgogKgogKiBAdHlwZWRlZiB7T2JqZWN0fSBtb2R1bGU6Zm9udC9mb250ZmFtaWx5fkZvbnRGYW1pbHlPcHRpb24KICoKICogQHByb3BlcnR5IHtTdHJpbmd9IHRpdGxlIFRoZSB1c2VyLXJlYWRhYmxlIHRpdGxlIG9mIHRoZSBvcHRpb24uCiAqIEBwcm9wZXJ0eSB7U3RyaW5nfSBtb2RlbCBUaGUgYXR0cmlidXRlJ3MgdW5pcXVlIHZhbHVlIGluIHRoZSBtb2RlbC4KICogQHByb3BlcnR5IHttb2R1bGU6ZW5naW5lL3ZpZXcvZWxlbWVudGRlZmluaXRpb25+RWxlbWVudERlZmluaXRpb259IHZpZXcgVmlldyBlbGVtZW50IGNvbmZpZ3VyYXRpb24uCiAqIEBwcm9wZXJ0eSB7QXJyYXkuPG1vZHVsZTplbmdpbmUvdmlldy9lbGVtZW50ZGVmaW5pdGlvbn5FbGVtZW50RGVmaW5pdGlvbj59IFt1cGNhc3RBbHNvXSBBbiBhcnJheSB3aXRoIGFsbCBtYXRjaGVkIGVsZW1lbnRzIHRoYXQKICogdGhlIHZpZXctdG8tbW9kZWwgY29udmVyc2lvbiBzaG91bGQgYWxzbyBhY2NlcHQuCiAqLwoKLyoqCiAqIFRoZSBjb25maWd1cmF0aW9uIG9mIHRoZSBmb250IGZhbWlseSBmZWF0dXJlLgogKiBJdCBpcyBpbnRyb2R1Y2VkIGJ5IHRoZSB7QGxpbmsgbW9kdWxlOmZvbnQvZm9udGZhbWlseS9mb250ZmFtaWx5ZWRpdGluZ35Gb250RmFtaWx5RWRpdGluZ30gZmVhdHVyZS4KICoKICogUmVhZCBtb3JlIGluIHtAbGluayBtb2R1bGU6Zm9udC9mb250ZmFtaWx5fkZvbnRGYW1pbHlDb25maWd9LgogKgogKiBAbWVtYmVyIHttb2R1bGU6Zm9udC9mb250ZmFtaWx5fkZvbnRGYW1pbHlDb25maWd9IG1vZHVsZTpjb3JlL2VkaXRvci9lZGl0b3Jjb25maWd+RWRpdG9yQ29uZmlnI2ZvbnRGYW1pbHkKICovCgovKioKICogVGhlIGNvbmZpZ3VyYXRpb24gb2YgdGhlIGZvbnQgZmFtaWx5IGZlYXR1cmUuCiAqIFRoaXMgb3B0aW9uIGlzIHVzZWQgYnkgdGhlIHtAbGluayBtb2R1bGU6Zm9udC9mb250ZmFtaWx5L2ZvbnRmYW1pbHllZGl0aW5nfkZvbnRGYW1pbHlFZGl0aW5nfSBmZWF0dXJlLgogKgogKgkJQ2xhc3NpY0VkaXRvcgogKgkJCS5jcmVhdGUoIHsKICogCQkJCWZvbnRGYW1pbHk6IC4uLiAvLyBGb250IGZhbWlseSBmZWF0dXJlIGNvbmZpZ3VyYXRpb24uCiAqCQkJfSApCiAqCQkJLnRoZW4oIC4uLiApCiAqCQkJLmNhdGNoKCAuLi4gKTsKICoKICogU2VlIHtAbGluayBtb2R1bGU6Y29yZS9lZGl0b3IvZWRpdG9yY29uZmlnfkVkaXRvckNvbmZpZyBhbGwgZWRpdG9yIG9wdGlvbnN9LgogKgogKiBAaW50ZXJmYWNlIG1vZHVsZTpmb250L2ZvbnRmYW1pbHl+Rm9udEZhbWlseUNvbmZpZwogKi8KCi8qKgogKiBBdmFpbGFibGUgZm9udCBmYW1pbHkgb3B0aW9ucyBkZWZpbmVkIGFzIGFuIGFycmF5IG9mIHN0cmluZ3MuIFRoZSBkZWZhdWx0IHZhbHVlIGlzOgogKgogKgkJY29uc3QgZm9udEZhbWlseUNvbmZpZyA9IHsKICoJCQlvcHRpb25zOiBbCiAqCQkJCSdkZWZhdWx0JywKICoJCQkJJ0FyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWYnLAogKgkJCQknQ291cmllciBOZXcsIENvdXJpZXIsIG1vbm9zcGFjZScsCiAqCQkJCSdHZW9yZ2lhLCBzZXJpZicsCiAqCQkJCSdMdWNpZGEgU2FucyBVbmljb2RlLCBMdWNpZGEgR3JhbmRlLCBzYW5zLXNlcmlmJywKICoJCQkJJ1RhaG9tYSwgR2VuZXZhLCBzYW5zLXNlcmlmJywKICoJCQkJJ1RpbWVzIE5ldyBSb21hbiwgVGltZXMsIHNlcmlmJywKICoJCQkJJ1RyZWJ1Y2hldCBNUywgSGVsdmV0aWNhLCBzYW5zLXNlcmlmJywKICoJCQkJJ1ZlcmRhbmEsIEdlbmV2YSwgc2Fucy1zZXJpZicKICoJCQldCiAqCQl9OwogKgogKiB3aGljaCBjb25maWd1cmVzIDggZm9udCBmYW1pbHkgb3B0aW9ucy4gRWFjaCBvcHRpb24gY29uc2lzdHMgb2Ygb25lIG9yIG1vcmUgY29tbWHigJNzZXBhcmF0ZWQgZm9udCBmYW1pbHkgbmFtZXMuIFRoZSBmaXJzdCBmb250IG5hbWUgaXMKICogdXNlZCBhcyB0aGUgZHJvcGRvd24gaXRlbSBkZXNjcmlwdGlvbiBpbiB0aGUgVUkuCiAqCiAqICoqTm90ZToqKiBUaGUgZmFtaWx5IG5hbWVzIHRoYXQgY29uc2lzdCBvZiBzcGFjZXMgc2hvdWxkIG5vdCBoYXZlIHF1b3RlcyAoYXMgb3Bwb3NlZCB0byB0aGUgQ1NTIHN0YW5kYXJkKS4gVGhlIG5lY2Vzc2FyeSBxdW90ZXMKICogd2lsbCBiZSBhZGRlZCBhdXRvbWF0aWNhbGx5IGluIHRoZSB2aWV3LiBGb3IgZXhhbXBsZSwgdGhlIGAiTHVjaWRhIFNhbnMgVW5pY29kZSJgIHdpbGwgcmVuZGVyIGFzIGZvbGxvd3M6CiAqCiAqIAkJPHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OidMdWNpZGEgU2FucyBVbmljb2RlJywgJ0x1Y2lkYSBHcmFuZGUnLCBzYW5zLXNlcmlmIj4uLi48L3NwYW4+CiAqCiAqIFRoZSAiZGVmYXVsdCIgb3B0aW9uIHJlbW92ZXMgdGhlIGBmb250RmFtaWx5YCBhdHRyaWJ1dGUgZnJvbSB0aGUgc2VsZWN0aW9uLiBJbiBzdWNoIGNhc2UsIHRoZSB0ZXh0IHdpbGwKICogYmUgcmVuZGVyZWQgaW4gdGhlIHZpZXcgdXNpbmcgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgZGVmaW5lZCBpbiB0aGUgc3R5bGVzIG9mIHRoZSB3ZWIgcGFnZS4KICoKICogRm9udCBmYW1pbHkgY2FuIGJlIGFwcGxpZWQgdXNpbmcgdGhlIGNvbW1hbmQgQVBJLiBUbyBkbyB0aGF0LCB1c2UgdGhlIGBmb250RmFtaWx5YCBjb21tYW5kIGFuZCBwYXNzIHRoZSBkZXNpcmVkIGZhbWlseSBhcyBhIGB2YWx1ZWAuCiAqIEZvciBleGFtcGxlLCB0aGUgZm9sbG93aW5nIGNvZGUgd2lsbCBhcHBseSB0aGUgYGZvbnRGYW1pbHlgIGF0dHJpYnV0ZSB3aXRoIHRoZSBgJ0FyaWFsJ2AgYHZhbHVlYCB0byB0aGUgY3VycmVudCBzZWxlY3Rpb246CiAqCiAqCQllZGl0b3IuZXhlY3V0ZSggJ2ZvbnRGYW1pbHknLCB7IHZhbHVlOiAnQXJpYWwnIH0gKTsKICoKICogRXhlY3V0aW5nIHRoZSBgJ2ZvbnRGYW1pbHknYCBjb21tYW5kIHdpdGhvdXQgYW55IHZhbHVlIHdpbGwgcmVtb3ZlIHRoZSBgZm9udEZhbWlseWAgYXR0cmlidXRlIGZyb20gdGhlIGN1cnJlbnQgc2VsZWN0aW9uLgogKgogKiBAbWVtYmVyIHtBcnJheS48U3RyaW5nfG1vZHVsZTpmb250L2ZvbnRmYW1pbHl+Rm9udEZhbWlseU9wdGlvbj59IG1vZHVsZTpmb250L2ZvbnRmYW1pbHl+Rm9udEZhbWlseUNvbmZpZyNvcHRpb25zCiAqLw=="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/fontfamily.js"],"names":["Plugin","FontFamilyEditing","FontFamilyUI","FontFamily","requires","pluginName"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA;;;;;;;;;;;;AAWA,eAAe,MAAMC,UAAN,SAAyBH,MAAzB,CAAgC;AAC9C;;;AAGA,aAAWI,QAAX,GAAsB;AACrB,WAAO,CAAEH,iBAAF,EAAqBC,YAArB,CAAP;AACA;AAED;;;;;AAGA,aAAWG,UAAX,GAAwB;AACvB,WAAO,YAAP;AACA;;AAb6C;AAgB/C;;;;;;;;;;;;AAYA;;;;;;;;;AASA;;;;;;;;;;;;;;;;AAgBA","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontfamily\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontFamilyEditing from './fontfamily/fontfamilyediting';\nimport FontFamilyUI from './fontfamily/fontfamilyui';\n\n/**\n * The font family plugin.\n *\n * For a detailed overview, check the {@glink features/font font feature} documentatiom\n * and the {@glink api/font package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:font/fontfamily/fontfamilyediting~FontFamilyEditing} and\n * {@link module:font/fontfamily/fontfamilyui~FontFamilyUI} features in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontFamily extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FontFamilyEditing, FontFamilyUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FontFamily';\n\t}\n}\n\n/**\n * The font family option descriptor.\n *\n * @typedef {Object} module:font/fontfamily~FontFamilyOption\n *\n * @property {String} title The user-readable title of the option.\n * @property {String} model The attribute's unique value in the model.\n * @property {module:engine/view/elementdefinition~ElementDefinition} view View element configuration.\n * @property {Array.<module:engine/view/elementdefinition~ElementDefinition>} [upcastAlso] An array with all matched elements that\n * the view-to-model conversion should also accept.\n */\n\n/**\n * The configuration of the font family feature.\n * It is introduced by the {@link module:font/fontfamily/fontfamilyediting~FontFamilyEditing} feature.\n *\n * Read more in {@link module:font/fontfamily~FontFamilyConfig}.\n *\n * @member {module:font/fontfamily~FontFamilyConfig} module:core/editor/editorconfig~EditorConfig#fontFamily\n */\n\n/**\n * The configuration of the font family feature.\n * This option is used by the {@link module:font/fontfamily/fontfamilyediting~FontFamilyEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\tfontFamily: ... // Font family feature configuration.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:font/fontfamily~FontFamilyConfig\n */\n\n/**\n * Available font family options defined as an array of strings. The default value is:\n *\n *\t\tconst fontFamilyConfig = {\n *\t\t\toptions: [\n *\t\t\t\t'default',\n *\t\t\t\t'Arial, Helvetica, sans-serif',\n *\t\t\t\t'Courier New, Courier, monospace',\n *\t\t\t\t'Georgia, serif',\n *\t\t\t\t'Lucida Sans Unicode, Lucida Grande, sans-serif',\n *\t\t\t\t'Tahoma, Geneva, sans-serif',\n *\t\t\t\t'Times New Roman, Times, serif',\n *\t\t\t\t'Trebuchet MS, Helvetica, sans-serif',\n *\t\t\t\t'Verdana, Geneva, sans-serif'\n *\t\t\t]\n *\t\t};\n *\n * which configures 8 font family options. Each option consists of one or more comma–separated font family names. The first font name is\n * used as the dropdown item description in the UI.\n *\n * **Note:** The family names that consist of spaces should not have quotes (as opposed to the CSS standard). The necessary quotes\n * will be added automatically in the view. For example, the `\"Lucida Sans Unicode\"` will render as follows:\n *\n * \t\t<span style=\"font-family:'Lucida Sans Unicode', 'Lucida Grande', sans-serif\">...</span>\n *\n * The \"default\" option removes the `fontFamily` attribute from the selection. In such case, the text will\n * be rendered in the view using the default font family defined in the styles of the web page.\n *\n * Font family can be applied using the command API. To do that, use the `fontFamily` command and pass the desired family as a `value`.\n * For example, the following code will apply the `fontFamily` attribute with the `'Arial'` `value` to the current selection:\n *\n *\t\teditor.execute( 'fontFamily', { value: 'Arial' } );\n *\n * Executing the `'fontFamily'` command without any value will remove the `fontFamily` attribute from the current selection.\n *\n * @member {Array.<String|module:font/fontfamily~FontFamilyOption>} module:font/fontfamily~FontFamilyConfig#options\n */\n"]}]}