{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js"],"names":["ComponentFactory","FocusTracker","EmitterMixin","mix","EditorUI","constructor","editor","componentFactory","focusTracker","_editableElementsMap","Map","listenTo","editing","view","document","update","element","fire","destroy","stopListening","domElement","values","ckeditorInstance","setEditableElement","rootName","set","getEditableElement","get","getEditableElementsNames","keys","_editableElements","console","warn","editorUI"],"mappings":"AAAA;;;;;AAKA;;;;AAIA;AAEA,OAAOA,gBAAP,MAA6B,6CAA7B;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AAEA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,GAAP,MAAgB,mCAAhB;AAEA;;;;;;AAKA,eAAe,MAAMC,QAAN,CAAe;AAC7B;;;;;AAKAC,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB;;;;;;AAMA,SAAKA,MAAL,GAAcA,MAAd;AAEA;;;;;;;;AAOA,SAAKC,gBAAL,GAAwB,IAAIP,gBAAJ,CAAsBM,MAAtB,CAAxB;AAEA;;;;;;;;AAOA,SAAKE,YAAL,GAAoB,IAAIP,YAAJ,EAApB;AAEA;;;;;;;AAMA,SAAKQ,oBAAL,GAA4B,IAAIC,GAAJ,EAA5B,CAjCqB,CAmCrB;;AACA,SAAKC,QAAL,CAAeL,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoBC,QAAnC,EAA6C,eAA7C,EAA8D,MAAM,KAAKC,MAAL,EAApE;AACA;AAED;;;;;;;;;;;;;;;;;AAeA,MAAIC,OAAJ,GAAc;AACb,WAAO,IAAP;AACA;AAED;;;;;;;;AAMAD,EAAAA,MAAM,GAAG;AACR,SAAKE,IAAL,CAAW,QAAX;AACA;AAED;;;;;AAGAC,EAAAA,OAAO,GAAG;AACT,SAAKC,aAAL;AAEA,SAAKX,YAAL,CAAkBU,OAAlB,GAHS,CAKT;;AACA,SAAM,MAAME,UAAZ,IAA0B,KAAKX,oBAAL,CAA0BY,MAA1B,EAA1B,EAA+D;AAC9DD,MAAAA,UAAU,CAACE,gBAAX,GAA8B,IAA9B;AACA;;AAED,SAAKb,oBAAL,GAA4B,IAAIC,GAAJ,EAA5B;AACA;AAED;;;;;;;;;AAOAa,EAAAA,kBAAkB,CAAEC,QAAF,EAAYJ,UAAZ,EAAyB;AAC1C,SAAKX,oBAAL,CAA0BgB,GAA1B,CAA+BD,QAA/B,EAAyCJ,UAAzC,EAD0C,CAG1C;AACA;AACA;AACA;;;AACA,QAAK,CAACA,UAAU,CAACE,gBAAjB,EAAoC;AACnCF,MAAAA,UAAU,CAACE,gBAAX,GAA8B,KAAKhB,MAAnC;AACA;AACD;AAED;;;;;;;;AAMAoB,EAAAA,kBAAkB,CAAEF,QAAQ,GAAG,MAAb,EAAsB;AACvC,WAAO,KAAKf,oBAAL,CAA0BkB,GAA1B,CAA+BH,QAA/B,CAAP;AACA;AAED;;;;;;;AAKAI,EAAAA,wBAAwB,GAAG;AAC1B,WAAO,KAAKnB,oBAAL,CAA0BoB,IAA1B,EAAP;AACA;AAED;;;;;;;;;AAOA,MAAIC,iBAAJ,GAAwB;AACvB;;;;;;;;AAQAC,IAAAA,OAAO,CAACC,IAAR,CACC,6CACA,qGAFD,EAGC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAHD;AAKA,WAAO,KAAKxB,oBAAZ;AACA;AAED;;;;;;;;AAQA;;;;;;;;;;AAhK6B;AA0K9BN,GAAG,CAAEC,QAAF,EAAYF,YAAZ,CAAH","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/editorui\n */\n\n/* globals console */\n\nimport ComponentFactory from '@ckeditor/ckeditor5-ui/src/componentfactory';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class EditorUI {\n\t/**\n\t * Creates an instance of the editor UI class.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t */\n\tconstructor( editor ) {\n\t\t/**\n\t\t * The editor that the UI belongs to.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor} #editor\n\t\t */\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\n\t\t * to register factories of specific UI components.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/componentfactory~ComponentFactory} #componentFactory\n\t\t */\n\t\tthis.componentFactory = new ComponentFactory( editor );\n\n\t\t/**\n\t\t * Stores the information about the editor UI focus and propagates it so various plugins and components\n\t\t * are unified as a focus group.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker} #focusTracker\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Stores all editable elements used by the editor instance.\n\t\t *\n\t\t * @private\n\t\t * @member {Map.<String,HTMLElement>}\n\t\t */\n\t\tthis._editableElementsMap = new Map();\n\n\t\t// Informs UI components that should be refreshed after layout change.\n\t\tthis.listenTo( editor.editing.view.document, 'layoutChanged', () => this.update() );\n\t}\n\n\t/**\n\t * The main (outermost) DOM element of the editor UI.\n\t *\n\t * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which\n\t * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}\n\t * it is the editable element itself (as there is no other wrapper). However, in\n\t * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not\n\t * come with a single \"main\" HTML element (its editable element and toolbar are separate).\n\t *\n\t * This property can be understood as a shorthand for retrieving the element that a specific editor integration\n\t * considers to be its main DOM element.\n\t *\n\t * @readonly\n\t * @member {HTMLElement|null} #element\n\t */\n\tget element() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Fires the {@link module:core/editor/editorui~EditorUI#event:update `update`} event.\n\t *\n\t * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\n\t * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\n\t */\n\tupdate() {\n\t\tthis.fire( 'update' );\n\t}\n\n\t/**\n\t * Destroys the UI.\n\t */\n\tdestroy() {\n\t\tthis.stopListening();\n\n\t\tthis.focusTracker.destroy();\n\n\t\t// Clean–up the references to the CKEditor instance stored in the native editable DOM elements.\n\t\tfor ( const domElement of this._editableElementsMap.values() ) {\n\t\t\tdomElement.ckeditorInstance = null;\n\t\t}\n\n\t\tthis._editableElementsMap = new Map();\n\t}\n\n\t/**\n\t * Store the native DOM editable element used by the editor under\n\t * a unique name.\n\t *\n\t * @param {String} rootName The unique name of the editable element.\n\t * @param {HTMLElement} domElement The native DOM editable element.\n\t */\n\tsetEditableElement( rootName, domElement ) {\n\t\tthis._editableElementsMap.set( rootName, domElement );\n\n\t\t// Put a reference to the CKEditor instance in the editable native DOM element.\n\t\t// It helps 3rd–party software (browser extensions, other libraries) access and recognize\n\t\t// CKEditor 5 instances (editing roots) and use their API (there is no global editor\n\t\t// instance registry).\n\t\tif ( !domElement.ckeditorInstance ) {\n\t\t\tdomElement.ckeditorInstance = this.editor;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the editable editor element with the given name or null if editable does not exist.\n\t *\n\t * @param {String} [rootName=main] The editable name.\n\t * @returns {HTMLElement|undefined}\n\t */\n\tgetEditableElement( rootName = 'main' ) {\n\t\treturn this._editableElementsMap.get( rootName );\n\t}\n\n\t/**\n\t * Returns array of names of all editor editable elements.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tgetEditableElementsNames() {\n\t\treturn this._editableElementsMap.keys();\n\t}\n\n\t/**\n\t * Stores all editable elements used by the editor instance.\n\t *\n\t * @protected\n\t * @deprecated\n\t * @member {Map.<String,HTMLElement>}\n\t */\n\tget _editableElements() {\n\t\t/**\n\t\t * The {@link module:core/editor/editorui~EditorUI#_editableElements `EditorUI#_editableElements`} property has been\n\t\t * deprecated and will be removed in the near future. Please use {@link #setEditableElement `setEditableElement()`} and\n\t\t * {@link #getEditableElement `getEditableElement()`} methods instead.\n\t\t *\n\t\t * @error editor-ui-deprecated-editable-elements\n\t\t * @param {module:core/editor/editorui~EditorUI} editorUI Editor UI instance the deprecated property belongs to.\n\t\t */\n\t\tconsole.warn(\n\t\t\t'editor-ui-deprecated-editable-elements: ' +\n\t\t\t'The EditorUI#_editableElements property has been deprecated and will be removed in the near future.',\n\t\t\t{ editorUI: this } );\n\n\t\treturn this._editableElementsMap;\n\t}\n\n\t/**\n\t * Fired when the editor UI is ready.\n\t *\n\t * Fired before {@link module:engine/controller/datacontroller~DataController#event:ready}.\n\t *\n\t * @event ready\n\t */\n\n\t/**\n\t * Fired whenever the UI (all related components) should be refreshed.\n\t *\n\t * **Note:**: The event is fired after each {@link module:engine/view/document~Document#event:layoutChanged}.\n\t * It can also be fired manually via the {@link module:core/editor/editorui~EditorUI#update} method.\n\t *\n\t * @event update\n\t */\n}\n\nmix( EditorUI, EmitterMixin );\n"]}]}