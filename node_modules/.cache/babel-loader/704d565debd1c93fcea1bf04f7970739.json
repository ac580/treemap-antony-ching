{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteediting.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteediting.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGJsb2NrLXF1b3RlL2Jsb2NrcXVvdGVlZGl0aW5nCiAqLwppbXBvcnQgUGx1Z2luIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtY29yZS9zcmMvcGx1Z2luJzsKaW1wb3J0IEJsb2NrUXVvdGVDb21tYW5kIGZyb20gJy4vYmxvY2txdW90ZWNvbW1hbmQnOwovKioKICogVGhlIGJsb2NrIHF1b3RlIGVkaXRpbmcuCiAqCiAqIEludHJvZHVjZXMgdGhlIGAnYmxvY2tRdW90ZSdgIGNvbW1hbmQgYW5kIHRoZSBgJ2Jsb2NrUXVvdGUnYCBtb2RlbCBlbGVtZW50LgogKgogKiBAZXh0ZW5kcyBtb2R1bGU6Y29yZS9wbHVnaW5+UGx1Z2luCiAqLwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmxvY2tRdW90ZUVkaXRpbmcgZXh0ZW5kcyBQbHVnaW4gewogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgc3RhdGljIGdldCBwbHVnaW5OYW1lKCkgewogICAgcmV0dXJuICdCbG9ja1F1b3RlRWRpdGluZyc7CiAgfQogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCgoKICBpbml0KCkgewogICAgY29uc3QgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICBjb25zdCBzY2hlbWEgPSBlZGl0b3IubW9kZWwuc2NoZW1hOwogICAgZWRpdG9yLmNvbW1hbmRzLmFkZCgnYmxvY2tRdW90ZScsIG5ldyBCbG9ja1F1b3RlQ29tbWFuZChlZGl0b3IpKTsKICAgIHNjaGVtYS5yZWdpc3RlcignYmxvY2tRdW90ZScsIHsKICAgICAgYWxsb3dXaGVyZTogJyRibG9jaycsCiAgICAgIGFsbG93Q29udGVudE9mOiAnJHJvb3QnCiAgICB9KTsgLy8gRGlzYWxsb3cgYmxvY2tRdW90ZSBpbiBibG9ja1F1b3RlLgoKICAgIHNjaGVtYS5hZGRDaGlsZENoZWNrKChjdHgsIGNoaWxkRGVmKSA9PiB7CiAgICAgIGlmIChjdHguZW5kc1dpdGgoJ2Jsb2NrUXVvdGUnKSAmJiBjaGlsZERlZi5uYW1lID09ICdibG9ja1F1b3RlJykgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfSk7CiAgICBlZGl0b3IuY29udmVyc2lvbi5lbGVtZW50VG9FbGVtZW50KHsKICAgICAgbW9kZWw6ICdibG9ja1F1b3RlJywKICAgICAgdmlldzogJ2Jsb2NrcXVvdGUnCiAgICB9KTsgLy8gUG9zdGZpeGVyIHdoaWNoIGNsZWFucyBpbmNvcnJlY3QgbW9kZWwgc3RhdGVzIGNvbm5lY3RlZCB3aXRoIGJsb2NrIHF1b3Rlcy4KCiAgICBlZGl0b3IubW9kZWwuZG9jdW1lbnQucmVnaXN0ZXJQb3N0Rml4ZXIod3JpdGVyID0+IHsKICAgICAgY29uc3QgY2hhbmdlcyA9IGVkaXRvci5tb2RlbC5kb2N1bWVudC5kaWZmZXIuZ2V0Q2hhbmdlcygpOwoKICAgICAgZm9yIChjb25zdCBlbnRyeSBvZiBjaGFuZ2VzKSB7CiAgICAgICAgaWYgKGVudHJ5LnR5cGUgPT0gJ2luc2VydCcpIHsKICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBlbnRyeS5wb3NpdGlvbi5ub2RlQWZ0ZXI7CgogICAgICAgICAgaWYgKCFlbGVtZW50KSB7CiAgICAgICAgICAgIC8vIFdlIGFyZSBpbnNpZGUgYSB0ZXh0IG5vZGUuCiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQoKICAgICAgICAgIGlmIChlbGVtZW50LmlzKCdibG9ja1F1b3RlJykgJiYgZWxlbWVudC5pc0VtcHR5KSB7CiAgICAgICAgICAgIC8vIEFkZGVkIGFuIGVtcHR5IGJsb2NrUXVvdGUgLSByZW1vdmUgaXQuCiAgICAgICAgICAgIHdyaXRlci5yZW1vdmUoZWxlbWVudCk7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50LmlzKCdibG9ja1F1b3RlJykgJiYgIXNjaGVtYS5jaGVja0NoaWxkKGVudHJ5LnBvc2l0aW9uLCBlbGVtZW50KSkgewogICAgICAgICAgICAvLyBBZGRlZCBhIGJsb2NrUXVvdGUgaW4gaW5jb3JyZWN0IHBsYWNlIC0gbW9zdCBsaWtlbHkgaW5zaWRlIGFub3RoZXIgYmxvY2tRdW90ZS4gVW53cmFwIGl0CiAgICAgICAgICAgIC8vIHNvIHRoZSBjb250ZW50IGluc2lkZSBpcyBub3QgbG9zdC4KICAgICAgICAgICAgd3JpdGVyLnVud3JhcChlbGVtZW50KTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICB9IGVsc2UgaWYgKGVsZW1lbnQuaXMoJ2VsZW1lbnQnKSkgewogICAgICAgICAgICAvLyBKdXN0IGFkZGVkIGFuIGVsZW1lbnQuIENoZWNrIGl0cyBjaGlsZHJlbiB0byBzZWUgaWYgdGhlcmUgYXJlIG5vIG5lc3RlZCBibG9ja1F1b3RlcyBzb21ld2hlcmUgaW5zaWRlLgogICAgICAgICAgICBjb25zdCByYW5nZSA9IHdyaXRlci5jcmVhdGVSYW5nZUluKGVsZW1lbnQpOwoKICAgICAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiByYW5nZS5nZXRJdGVtcygpKSB7CiAgICAgICAgICAgICAgaWYgKGNoaWxkLmlzKCdibG9ja1F1b3RlJykgJiYgIXNjaGVtYS5jaGVja0NoaWxkKHdyaXRlci5jcmVhdGVQb3NpdGlvbkJlZm9yZShjaGlsZCksIGNoaWxkKSkgewogICAgICAgICAgICAgICAgd3JpdGVyLnVud3JhcChjaGlsZCk7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKGVudHJ5LnR5cGUgPT0gJ3JlbW92ZScpIHsKICAgICAgICAgIGNvbnN0IHBhcmVudCA9IGVudHJ5LnBvc2l0aW9uLnBhcmVudDsKCiAgICAgICAgICBpZiAocGFyZW50LmlzKCdibG9ja1F1b3RlJykgJiYgcGFyZW50LmlzRW1wdHkpIHsKICAgICAgICAgICAgLy8gU29tZXRoaW5nIGdvdCByZW1vdmVkIGFuZCBub3cgYmxvY2tRdW90ZSBpcyBlbXB0eS4gUmVtb3ZlIHRoZSBibG9ja1F1b3RlIGFzIHdlbGwuCiAgICAgICAgICAgIHdyaXRlci5yZW1vdmUocGFyZW50KTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9KTsKICB9CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KCgogIGFmdGVySW5pdCgpIHsKICAgIGNvbnN0IGVkaXRvciA9IHRoaXMuZWRpdG9yOwogICAgY29uc3QgY29tbWFuZCA9IGVkaXRvci5jb21tYW5kcy5nZXQoJ2Jsb2NrUXVvdGUnKTsgLy8gT3ZlcndyaXRlIGRlZmF1bHQgRW50ZXIga2V5IGJlaGF2aW9yLgogICAgLy8gSWYgRW50ZXIga2V5IGlzIHByZXNzZWQgd2l0aCBzZWxlY3Rpb24gY29sbGFwc2VkIGluIGVtcHR5IGJsb2NrIGluc2lkZSBhIHF1b3RlLCBicmVhayB0aGUgcXVvdGUuCiAgICAvLyBUaGlzIGxpc3RlbmVyIGlzIGFkZGVkIGluIGFmdGVySW5pdCBpbiBvcmRlciB0byByZWdpc3RlciBpdCBhZnRlciBsaXN0J3MgZmVhdHVyZSBsaXN0ZW5lci4KICAgIC8vIFdlIGNhbid0IHVzZSBhIHByaW9yaXR5IGZvciB0aGlzLCBiZWNhdXNlICdsb3cnIGlzIGFscmVhZHkgdXNlZCBieSB0aGUgZW50ZXIgZmVhdHVyZSwgdW5sZXNzCiAgICAvLyB3ZSdkIHVzZSBudW1lcmljIHByaW9yaXR5IGluIHRoaXMgY2FzZS4KCiAgICB0aGlzLmxpc3RlblRvKHRoaXMuZWRpdG9yLmVkaXRpbmcudmlldy5kb2N1bWVudCwgJ2VudGVyJywgKGV2dCwgZGF0YSkgPT4gewogICAgICBjb25zdCBkb2MgPSB0aGlzLmVkaXRvci5tb2RlbC5kb2N1bWVudDsKICAgICAgY29uc3QgcG9zaXRpb25QYXJlbnQgPSBkb2Muc2VsZWN0aW9uLmdldExhc3RQb3NpdGlvbigpLnBhcmVudDsKCiAgICAgIGlmIChkb2Muc2VsZWN0aW9uLmlzQ29sbGFwc2VkICYmIHBvc2l0aW9uUGFyZW50LmlzRW1wdHkgJiYgY29tbWFuZC52YWx1ZSkgewogICAgICAgIHRoaXMuZWRpdG9yLmV4ZWN1dGUoJ2Jsb2NrUXVvdGUnKTsKICAgICAgICB0aGlzLmVkaXRvci5lZGl0aW5nLnZpZXcuc2Nyb2xsVG9UaGVTZWxlY3Rpb24oKTsKICAgICAgICBkYXRhLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgZXZ0LnN0b3AoKTsKICAgICAgfQogICAgfSk7CiAgfQoKfQ=="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteediting.js"],"names":["Plugin","BlockQuoteCommand","BlockQuoteEditing","pluginName","init","editor","schema","model","commands","add","register","allowWhere","allowContentOf","addChildCheck","ctx","childDef","endsWith","name","conversion","elementToElement","view","document","registerPostFixer","writer","changes","differ","getChanges","entry","type","element","position","nodeAfter","is","isEmpty","remove","checkChild","unwrap","range","createRangeIn","child","getItems","createPositionBefore","parent","afterInit","command","get","listenTo","editing","evt","data","doc","positionParent","selection","getLastPosition","isCollapsed","value","execute","scrollToTheSelection","preventDefault","stop"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module block-quote/blockquoteediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport BlockQuoteCommand from './blockquotecommand';\n\n/**\n * The block quote editing.\n *\n * Introduces the `'blockQuote'` command and the `'blockQuote'` model element.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BlockQuoteEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'BlockQuoteEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\n\t\teditor.commands.add( 'blockQuote', new BlockQuoteCommand( editor ) );\n\n\t\tschema.register( 'blockQuote', {\n\t\t\tallowWhere: '$block',\n\t\t\tallowContentOf: '$root'\n\t\t} );\n\n\t\t// Disallow blockQuote in blockQuote.\n\t\tschema.addChildCheck( ( ctx, childDef ) => {\n\t\t\tif ( ctx.endsWith( 'blockQuote' ) && childDef.name == 'blockQuote' ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} );\n\n\t\teditor.conversion.elementToElement( { model: 'blockQuote', view: 'blockquote' } );\n\n\t\t// Postfixer which cleans incorrect model states connected with block quotes.\n\t\teditor.model.document.registerPostFixer( writer => {\n\t\t\tconst changes = editor.model.document.differ.getChanges();\n\n\t\t\tfor ( const entry of changes ) {\n\t\t\t\tif ( entry.type == 'insert' ) {\n\t\t\t\t\tconst element = entry.position.nodeAfter;\n\n\t\t\t\t\tif ( !element ) {\n\t\t\t\t\t\t// We are inside a text node.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( element.is( 'blockQuote' ) && element.isEmpty ) {\n\t\t\t\t\t\t// Added an empty blockQuote - remove it.\n\t\t\t\t\t\twriter.remove( element );\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if ( element.is( 'blockQuote' ) && !schema.checkChild( entry.position, element ) ) {\n\t\t\t\t\t\t// Added a blockQuote in incorrect place - most likely inside another blockQuote. Unwrap it\n\t\t\t\t\t\t// so the content inside is not lost.\n\t\t\t\t\t\twriter.unwrap( element );\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if ( element.is( 'element' ) ) {\n\t\t\t\t\t\t// Just added an element. Check its children to see if there are no nested blockQuotes somewhere inside.\n\t\t\t\t\t\tconst range = writer.createRangeIn( element );\n\n\t\t\t\t\t\tfor ( const child of range.getItems() ) {\n\t\t\t\t\t\t\tif ( child.is( 'blockQuote' ) && !schema.checkChild( writer.createPositionBefore( child ), child ) ) {\n\t\t\t\t\t\t\t\twriter.unwrap( child );\n\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ( entry.type == 'remove' ) {\n\t\t\t\t\tconst parent = entry.position.parent;\n\n\t\t\t\t\tif ( parent.is( 'blockQuote' ) && parent.isEmpty ) {\n\t\t\t\t\t\t// Something got removed and now blockQuote is empty. Remove the blockQuote as well.\n\t\t\t\t\t\twriter.remove( parent );\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst editor = this.editor;\n\t\tconst command = editor.commands.get( 'blockQuote' );\n\n\t\t// Overwrite default Enter key behavior.\n\t\t// If Enter key is pressed with selection collapsed in empty block inside a quote, break the quote.\n\t\t// This listener is added in afterInit in order to register it after list's feature listener.\n\t\t// We can't use a priority for this, because 'low' is already used by the enter feature, unless\n\t\t// we'd use numeric priority in this case.\n\t\tthis.listenTo( this.editor.editing.view.document, 'enter', ( evt, data ) => {\n\t\t\tconst doc = this.editor.model.document;\n\t\t\tconst positionParent = doc.selection.getLastPosition().parent;\n\n\t\t\tif ( doc.selection.isCollapsed && positionParent.isEmpty && command.value ) {\n\t\t\t\tthis.editor.execute( 'blockQuote' );\n\t\t\t\tthis.editor.editing.view.scrollToTheSelection();\n\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\t}\n}\n"]}]}