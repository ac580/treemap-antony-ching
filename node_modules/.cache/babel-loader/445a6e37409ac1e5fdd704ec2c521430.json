{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGVuZ2luZS9tb2RlbC91dGlscy9nZXRzZWxlY3RlZGNvbnRlbnQKICovCgovKioKICogR2V0cyBhIGNsb25lIG9mIHRoZSBzZWxlY3RlZCBjb250ZW50LgogKgogKiBGb3IgZXhhbXBsZSwgZm9yIHRoZSBmb2xsb3dpbmcgc2VsZWN0aW9uOgogKgogKiBgYGBodG1sCiAqIDxwPng8L3A+PHF1b3RlPjxwPnk8L3A+PGg+ZmlyW3N0PC9oPjwvcXVvdGU+PHA+c2VdY29uZDwvcD48cD56PC9wPgogKiBgYGAKICoKICogSXQgd2lsbCByZXR1cm4gYSBkb2N1bWVudCBmcmFnbWVudCB3aXRoIHN1Y2ggYSBjb250ZW50OgogKgogKiBgYGBodG1sCiAqIDxxdW90ZT48aD5zdDwvaD48L3F1b3RlPjxwPnNlPC9wPgogKiBgYGAKICoKICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL21vZGVsfk1vZGVsfSBtb2RlbCBUaGUgbW9kZWwgaW4gY29udGV4dCBvZiB3aGljaAogKiB0aGUgc2VsZWN0aW9uIG1vZGlmaWNhdGlvbiBzaG91bGQgYmUgcGVyZm9ybWVkLgogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvc2VsZWN0aW9uflNlbGVjdGlvbnxtb2R1bGU6ZW5naW5lL21vZGVsL2RvY3VtZW50c2VsZWN0aW9ufkRvY3VtZW50U2VsZWN0aW9ufSBzZWxlY3Rpb24KICogVGhlIHNlbGVjdGlvbiBvZiB3aGljaCBjb250ZW50IHdpbGwgYmUgcmV0dXJuZWQuCiAqIEByZXR1cm5zIHttb2R1bGU6ZW5naW5lL21vZGVsL2RvY3VtZW50ZnJhZ21lbnR+RG9jdW1lbnRGcmFnbWVudH0KICovCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFNlbGVjdGVkQ29udGVudChtb2RlbCwgc2VsZWN0aW9uKSB7CiAgcmV0dXJuIG1vZGVsLmNoYW5nZSh3cml0ZXIgPT4gewogICAgY29uc3QgZnJhZyA9IHdyaXRlci5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7CiAgICBjb25zdCByYW5nZSA9IHNlbGVjdGlvbi5nZXRGaXJzdFJhbmdlKCk7CgogICAgaWYgKCFyYW5nZSB8fCByYW5nZS5pc0NvbGxhcHNlZCkgewogICAgICByZXR1cm4gZnJhZzsKICAgIH0KCiAgICBjb25zdCByb290ID0gcmFuZ2Uuc3RhcnQucm9vdDsKICAgIGNvbnN0IGNvbW1vblBhdGggPSByYW5nZS5zdGFydC5nZXRDb21tb25QYXRoKHJhbmdlLmVuZCk7CiAgICBjb25zdCBjb21tb25QYXJlbnQgPSByb290LmdldE5vZGVCeVBhdGgoY29tbW9uUGF0aCk7IC8vICMjIDFzdCBzdGVwCiAgICAvLwogICAgLy8gRmlyc3QsIHdlJ2xsIGNsb25lIGEgZnJhZ21lbnQgcmVwcmVzZW50ZWQgYnkgYSBtaW5pbWFsIGZsYXQgcmFuZ2UKICAgIC8vIGNvbnRhaW5pbmcgdGhlIG9yaWdpbmFsIHJhbmdlIHRvIGJlIGNsb25lZC4KICAgIC8vIEUuZy4gbGV0J3MgY29uc2lkZXIgc3VjaCBhIHJhbmdlOgogICAgLy8KICAgIC8vIDxwPng8L3A+PHF1b3RlPjxwPnk8L3A+PGg+ZmlyW3N0PC9oPjwvcXVvdGU+PHA+c2VdY29uZDwvcD48cD56PC9wPgogICAgLy8KICAgIC8vIEEgbWluaW1hbCBmbGF0IHJhbmdlIGNvbnRhaW5pbmcgdGhpcyBvbmUgaXM6CiAgICAvLwogICAgLy8gPHA+eDwvcD5bPHF1b3RlPjxwPnk8L3A+PGg+Zmlyc3Q8L2g+PC9xdW90ZT48cD5zZWNvbmQ8L3A+XTxwPno8L3A+CiAgICAvLwogICAgLy8gV2UgY2FuIGVhc2lseSBjbG9uZSB0aGlzIHN0cnVjdHVyZSwgcHJlc2VydmluZyBlLmcuIHRoZSA8cXVvdGU+IGVsZW1lbnQuCgogICAgbGV0IGZsYXRTdWJ0cmVlUmFuZ2U7CgogICAgaWYgKHJhbmdlLnN0YXJ0LnBhcmVudCA9PSByYW5nZS5lbmQucGFyZW50KSB7CiAgICAgIC8vIFRoZSBvcmlnaW5hbCByYW5nZSBpcyBmbGF0LCBzbyB0YWtlIGl0LgogICAgICBmbGF0U3VidHJlZVJhbmdlID0gcmFuZ2U7CiAgICB9IGVsc2UgewogICAgICBmbGF0U3VidHJlZVJhbmdlID0gd3JpdGVyLmNyZWF0ZVJhbmdlKHdyaXRlci5jcmVhdGVQb3NpdGlvbkF0KGNvbW1vblBhcmVudCwgcmFuZ2Uuc3RhcnQucGF0aFtjb21tb25QYXRoLmxlbmd0aF0pLCB3cml0ZXIuY3JlYXRlUG9zaXRpb25BdChjb21tb25QYXJlbnQsIHJhbmdlLmVuZC5wYXRoW2NvbW1vblBhdGgubGVuZ3RoXSArIDEpKTsKICAgIH0KCiAgICBjb25zdCBob3dNYW55ID0gZmxhdFN1YnRyZWVSYW5nZS5lbmQub2Zmc2V0IC0gZmxhdFN1YnRyZWVSYW5nZS5zdGFydC5vZmZzZXQ7IC8vIENsb25lIHRoZSB3aG9sZSBjb250ZW50cy4KCiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgZmxhdFN1YnRyZWVSYW5nZS5nZXRJdGVtcyh7CiAgICAgIHNoYWxsb3c6IHRydWUKICAgIH0pKSB7CiAgICAgIGlmIChpdGVtLmlzKCd0ZXh0UHJveHknKSkgewogICAgICAgIHdyaXRlci5hcHBlbmRUZXh0KGl0ZW0uZGF0YSwgaXRlbS5nZXRBdHRyaWJ1dGVzKCksIGZyYWcpOwogICAgICB9IGVsc2UgewogICAgICAgIHdyaXRlci5hcHBlbmQoaXRlbS5fY2xvbmUodHJ1ZSksIGZyYWcpOwogICAgICB9CiAgICB9IC8vICMjIDJuZCBzdGVwCiAgICAvLwogICAgLy8gSWYgdGhlIG9yaWdpbmFsIHJhbmdlIHdhc24ndCBmbGF0LCB0aGVuIHdlIG5lZWQgdG8gcmVtb3ZlIHRoZSBleGNlc3Mgbm9kZXMgZnJvbSB0aGUgYm90aCBlbmRzIG9mIHRoZSBjbG9uZWQgZnJhZ21lbnQuCiAgICAvLwogICAgLy8gRm9yIGV4YW1wbGUsIGZvciB0aGUgcmFuZ2Ugc2hvd24gaW4gdGhlIDFzdCBzdGVwIGNvbW1lbnQsIHdlIG5lZWQgdG8gcmVtb3ZlIHRoZXNlIHBpZWNlczoKICAgIC8vCiAgICAvLyA8cXVvdGU+WzxwPnk8L3A+XTxoPltmaXJdc3Q8L2g+PC9xdW90ZT48cD5zZVtjb25kXTwvcD4KICAgIC8vCiAgICAvLyBTbyB0aGlzIHdpbGwgYmUgdGhlIGZpbmFsIGNvcGllZCBjb250ZW50OgogICAgLy8KICAgIC8vIDxxdW90ZT48aD5zdDwvaD48L3F1b3RlPjxwPnNlPC9wPgogICAgLy8KICAgIC8vIEluIG9yZGVyIHRvIGRvIHRoYXQsIHdlIHJlbW92ZSBjb250ZW50IGZyb20gdGhlc2UgdHdvIHJhbmdlczoKICAgIC8vCiAgICAvLyBbPHF1b3RlPjxwPnk8L3A+PGg+ZmlyXXN0PC9oPjwvcXVvdGU+PHA+c2VbY29uZDwvcD5dCgoKICAgIGlmIChmbGF0U3VidHJlZVJhbmdlICE9IHJhbmdlKSB7CiAgICAgIC8vIEZpbmQgdGhlIHBvc2l0aW9uIG9mIHRoZSBvcmlnaW5hbCByYW5nZSBpbiB0aGUgY2xvbmVkIGZyYWdtZW50LgogICAgICBjb25zdCBuZXdSYW5nZSA9IHJhbmdlLl9nZXRUcmFuc2Zvcm1lZEJ5TW92ZShmbGF0U3VidHJlZVJhbmdlLnN0YXJ0LCB3cml0ZXIuY3JlYXRlUG9zaXRpb25BdChmcmFnLCAwKSwgaG93TWFueSlbMF07CgogICAgICBjb25zdCBsZWZ0RXhjZXNzUmFuZ2UgPSB3cml0ZXIuY3JlYXRlUmFuZ2Uod3JpdGVyLmNyZWF0ZVBvc2l0aW9uQXQoZnJhZywgMCksIG5ld1JhbmdlLnN0YXJ0KTsKICAgICAgY29uc3QgcmlnaHRFeGNlc3NSYW5nZSA9IHdyaXRlci5jcmVhdGVSYW5nZShuZXdSYW5nZS5lbmQsIHdyaXRlci5jcmVhdGVQb3NpdGlvbkF0KGZyYWcsICdlbmQnKSk7CiAgICAgIHJlbW92ZVJhbmdlQ29udGVudChyaWdodEV4Y2Vzc1JhbmdlLCB3cml0ZXIpOwogICAgICByZW1vdmVSYW5nZUNvbnRlbnQobGVmdEV4Y2Vzc1JhbmdlLCB3cml0ZXIpOwogICAgfQoKICAgIHJldHVybiBmcmFnOwogIH0pOwp9IC8vIEFmdGVyIGh0dHBzOi8vZ2l0aHViLmNvbS9ja2VkaXRvci9ja2VkaXRvcjUtZW5naW5lL2lzc3Vlcy82OTAgaXMgZml4ZWQsCi8vIHRoaXMgZnVuY3Rpb24gd2lsbCwgbW9zdCBsaWtlbHksIGJlIGFibGUgdG8gcmV3cml0dGVuIHVzaW5nIGdldE1pbmltYWxGbGF0UmFuZ2VzKCkuCgpmdW5jdGlvbiByZW1vdmVSYW5nZUNvbnRlbnQocmFuZ2UsIHdyaXRlcikgewogIGNvbnN0IHBhcmVudHNUb0NoZWNrID0gW107CiAgQXJyYXkuZnJvbShyYW5nZS5nZXRJdGVtcyh7CiAgICBkaXJlY3Rpb246ICdiYWNrd2FyZCcKICB9KSkgLy8gV2Ugc2hvdWxkIGJldHRlciBzdG9yZSByYW5nZXMgYmVjYXVzZSB0ZXh0IHByb3hpZXMgd2lsbCBsb3NlIGludGVncml0eQogIC8vIHdpdGggdGhlIHRleHQgbm9kZXMgd2hlbiB3ZSdsbCBzdGFydCByZW1vdmluZyBjb250ZW50LgogIC5tYXAoaXRlbSA9PiB3cml0ZXIuY3JlYXRlUmFuZ2VPbihpdGVtKSkgLy8gRmlsdGVyIG9ubHkgdGhlc2UgaXRlbXMgd2hpY2ggYXJlIGZ1bGx5IGNvbnRhaW5lZCBpbiB0aGUgcGFzc2VkIHJhbmdlLgogIC8vCiAgLy8gRS5nLiBmb3IgdGhlIGZvbGxvd2luZyByYW5nZTogWzxxdW90ZT48cD55PC9wPjxoPmZpcl1zdDwvaD4KICAvLyB0aGUgd2Fsa2VyIHdpbGwgcmV0dXJuIHRoZSBlbnRpcmUgPGg+IGVsZW1lbnQsIHdoZW4gb25seSB0aGUgImZpciIgaXRlbSBpbnNpZGUgaXQgaXMgZnVsbHkgY29udGFpbmVkLgogIC5maWx0ZXIoaXRlbVJhbmdlID0+IHsKICAgIC8vIFdlIHNob3VsZCBiZSBhYmxlIHRvIHVzZSBSYW5nZS5jb250YWluc1JhbmdlLCBidXQgaHR0cHM6Ly9naXRodWIuY29tL2NrZWRpdG9yL2NrZWRpdG9yNS1lbmdpbmUvaXNzdWVzLzY5MS4KICAgIGNvbnN0IGNvbnRhaW5lZCA9IChpdGVtUmFuZ2Uuc3RhcnQuaXNBZnRlcihyYW5nZS5zdGFydCkgfHwgaXRlbVJhbmdlLnN0YXJ0LmlzRXF1YWwocmFuZ2Uuc3RhcnQpKSAmJiAoaXRlbVJhbmdlLmVuZC5pc0JlZm9yZShyYW5nZS5lbmQpIHx8IGl0ZW1SYW5nZS5lbmQuaXNFcXVhbChyYW5nZS5lbmQpKTsKICAgIHJldHVybiBjb250YWluZWQ7CiAgfSkuZm9yRWFjaChpdGVtUmFuZ2UgPT4gewogICAgcGFyZW50c1RvQ2hlY2sucHVzaChpdGVtUmFuZ2Uuc3RhcnQucGFyZW50KTsKICAgIHdyaXRlci5yZW1vdmUoaXRlbVJhbmdlKTsKICB9KTsgLy8gUmVtb3ZlIGFuY2VzdG9ycyBvZiB0aGUgcmVtb3ZlZCBpdGVtcyBpZiB0aGV5IHR1cm5lZCB0byBiZSBlbXB0eSBub3cKICAvLyAodGhlaXIgd2hvbGUgY29udGVudCB3YXMgY29udGFpbmVkIGluIHRoZSByYW5nZSkuCgogIHBhcmVudHNUb0NoZWNrLmZvckVhY2gocGFyZW50VG9DaGVjayA9PiB7CiAgICBsZXQgcGFyZW50ID0gcGFyZW50VG9DaGVjazsKCiAgICB3aGlsZSAocGFyZW50LnBhcmVudCAmJiBwYXJlbnQuaXNFbXB0eSkgewogICAgICBjb25zdCByZW1vdmVSYW5nZSA9IHdyaXRlci5jcmVhdGVSYW5nZU9uKHBhcmVudCk7CiAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnQ7CiAgICAgIHdyaXRlci5yZW1vdmUocmVtb3ZlUmFuZ2UpOwogICAgfQogIH0pOwp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js"],"names":["getSelectedContent","model","selection","change","writer","frag","createDocumentFragment","range","getFirstRange","isCollapsed","root","start","commonPath","getCommonPath","end","commonParent","getNodeByPath","flatSubtreeRange","parent","createRange","createPositionAt","path","length","howMany","offset","item","getItems","shallow","is","appendText","data","getAttributes","append","_clone","newRange","_getTransformedByMove","leftExcessRange","rightExcessRange","removeRangeContent","parentsToCheck","Array","from","direction","map","createRangeOn","filter","itemRange","contained","isAfter","isEqual","isBefore","forEach","push","remove","parentToCheck","isEmpty","removeRange"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/getselectedcontent\n */\n\n/**\n * Gets a clone of the selected content.\n *\n * For example, for the following selection:\n *\n * ```html\n * <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n * ```\n *\n * It will return a document fragment with such a content:\n *\n * ```html\n * <quote><h>st</h></quote><p>se</p>\n * ```\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection of which content will be returned.\n * @returns {module:engine/model/documentfragment~DocumentFragment}\n */\nexport default function getSelectedContent( model, selection ) {\n\treturn model.change( writer => {\n\t\tconst frag = writer.createDocumentFragment();\n\t\tconst range = selection.getFirstRange();\n\n\t\tif ( !range || range.isCollapsed ) {\n\t\t\treturn frag;\n\t\t}\n\n\t\tconst root = range.start.root;\n\t\tconst commonPath = range.start.getCommonPath( range.end );\n\t\tconst commonParent = root.getNodeByPath( commonPath );\n\n\t\t// ## 1st step\n\t\t//\n\t\t// First, we'll clone a fragment represented by a minimal flat range\n\t\t// containing the original range to be cloned.\n\t\t// E.g. let's consider such a range:\n\t\t//\n\t\t// <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n\t\t//\n\t\t// A minimal flat range containing this one is:\n\t\t//\n\t\t// <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\n\t\t//\n\t\t// We can easily clone this structure, preserving e.g. the <quote> element.\n\t\tlet flatSubtreeRange;\n\n\t\tif ( range.start.parent == range.end.parent ) {\n\t\t\t// The original range is flat, so take it.\n\t\t\tflatSubtreeRange = range;\n\t\t} else {\n\t\t\tflatSubtreeRange = writer.createRange(\n\t\t\t\twriter.createPositionAt( commonParent, range.start.path[ commonPath.length ] ),\n\t\t\t\twriter.createPositionAt( commonParent, range.end.path[ commonPath.length ] + 1 )\n\t\t\t);\n\t\t}\n\n\t\tconst howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset;\n\n\t\t// Clone the whole contents.\n\t\tfor ( const item of flatSubtreeRange.getItems( { shallow: true } ) ) {\n\t\t\tif ( item.is( 'textProxy' ) ) {\n\t\t\t\twriter.appendText( item.data, item.getAttributes(), frag );\n\t\t\t} else {\n\t\t\t\twriter.append( item._clone( true ), frag );\n\t\t\t}\n\t\t}\n\n\t\t// ## 2nd step\n\t\t//\n\t\t// If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\n\t\t//\n\t\t// For example, for the range shown in the 1st step comment, we need to remove these pieces:\n\t\t//\n\t\t// <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\n\t\t//\n\t\t// So this will be the final copied content:\n\t\t//\n\t\t// <quote><h>st</h></quote><p>se</p>\n\t\t//\n\t\t// In order to do that, we remove content from these two ranges:\n\t\t//\n\t\t// [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\n\t\tif ( flatSubtreeRange != range ) {\n\t\t\t// Find the position of the original range in the cloned fragment.\n\t\t\tconst newRange = range._getTransformedByMove( flatSubtreeRange.start, writer.createPositionAt( frag, 0 ), howMany )[ 0 ];\n\n\t\t\tconst leftExcessRange = writer.createRange( writer.createPositionAt( frag, 0 ), newRange.start );\n\t\t\tconst rightExcessRange = writer.createRange( newRange.end, writer.createPositionAt( frag, 'end' ) );\n\n\t\t\tremoveRangeContent( rightExcessRange, writer );\n\t\t\tremoveRangeContent( leftExcessRange, writer );\n\t\t}\n\n\t\treturn frag;\n\t} );\n}\n\n// After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\nfunction removeRangeContent( range, writer ) {\n\tconst parentsToCheck = [];\n\n\tArray.from( range.getItems( { direction: 'backward' } ) )\n\t\t// We should better store ranges because text proxies will lose integrity\n\t\t// with the text nodes when we'll start removing content.\n\t\t.map( item => writer.createRangeOn( item ) )\n\t\t// Filter only these items which are fully contained in the passed range.\n\t\t//\n\t\t// E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\n\t\t// the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\n\t\t.filter( itemRange => {\n\t\t\t// We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\n\t\t\tconst contained =\n\t\t\t\t( itemRange.start.isAfter( range.start ) || itemRange.start.isEqual( range.start ) ) &&\n\t\t\t\t( itemRange.end.isBefore( range.end ) || itemRange.end.isEqual( range.end ) );\n\n\t\t\treturn contained;\n\t\t} )\n\t\t.forEach( itemRange => {\n\t\t\tparentsToCheck.push( itemRange.start.parent );\n\n\t\t\twriter.remove( itemRange );\n\t\t} );\n\n\t// Remove ancestors of the removed items if they turned to be empty now\n\t// (their whole content was contained in the range).\n\tparentsToCheck.forEach( parentToCheck => {\n\t\tlet parent = parentToCheck;\n\n\t\twhile ( parent.parent && parent.isEmpty ) {\n\t\t\tconst removeRange = writer.createRangeOn( parent );\n\n\t\t\tparent = parent.parent;\n\n\t\t\twriter.remove( removeRange );\n\t\t}\n\t} );\n}\n"]}]}