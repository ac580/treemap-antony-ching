{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qIGdsb2JhbHMgWE1MSHR0cFJlcXVlc3QsIEZvcm1EYXRhICovCgovKioKICogQG1vZHVsZSBhZGFwdGVyLWNrZmluZGVyL3VwbG9hZGFkYXB0ZXIKICovCmltcG9ydCBQbHVnaW4gZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS1jb3JlL3NyYy9wbHVnaW4nOwppbXBvcnQgRmlsZVJlcG9zaXRvcnkgZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS11cGxvYWQvc3JjL2ZpbGVyZXBvc2l0b3J5JzsKaW1wb3J0IHsgZ2V0Q3NyZlRva2VuIH0gZnJvbSAnLi91dGlscyc7Ci8qKgogKiBBIHBsdWdpbiB0aGF0IGVuYWJsZXMgZmlsZSB1cGxvYWRzIGluIENLRWRpdG9yIDUgdXNpbmcgdGhlIENLRmluZGVyIHNlcnZlcuKAk3NpZGUgY29ubmVjdG9yLgogKgogKiBTZWUgdGhlIHtAZ2xpbmsgZmVhdHVyZXMvaW1hZ2UtdXBsb2FkL2NrZmluZGVyICJDS0ZpbmRlciBmaWxlIG1hbmFnZXIgaW50ZWdyYXRpb24iIGd1aWRlfSB0byBsZWFybiBob3cgdG8gY29uZmlndXJlCiAqIGFuZCB1c2UgdGhpcyBmZWF0dXJlIGFzIHdlbGwgYXMgZmluZCBvdXQgbW9yZSBhYm91dCB0aGUgZnVsbCBpbnRlZ3JhdGlvbiB3aXRoIHRoZSBmaWxlIG1hbmFnZXIKICogcHJvdmlkZWQgYnkgdGhlIHtAbGluayBtb2R1bGU6Y2tmaW5kZXIvY2tmaW5kZXJ+Q0tGaW5kZXJ9IHBsdWdpbi4KICoKICogQ2hlY2sgb3V0IHRoZSB7QGdsaW5rIGZlYXR1cmVzL2ltYWdlLXVwbG9hZC9pbWFnZS11cGxvYWQgY29tcHJlaGVuc2l2ZSAiSW1hZ2UgdXBsb2FkIG92ZXJ2aWV3In0gdG8gbGVhcm4gYWJvdXQKICogb3RoZXIgd2F5cyB0byB1cGxvYWQgaW1hZ2VzIGludG8gQ0tFZGl0b3IgNS4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIENLRmluZGVyVXBsb2FkQWRhcHRlciBleHRlbmRzIFBsdWdpbiB7CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KICBzdGF0aWMgZ2V0IHJlcXVpcmVzKCkgewogICAgcmV0dXJuIFtGaWxlUmVwb3NpdG9yeV07CiAgfQogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCgoKICBzdGF0aWMgZ2V0IHBsdWdpbk5hbWUoKSB7CiAgICByZXR1cm4gJ0NLRmluZGVyVXBsb2FkQWRhcHRlcic7CiAgfQogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCgoKICBpbml0KCkgewogICAgY29uc3QgdXJsID0gdGhpcy5lZGl0b3IuY29uZmlnLmdldCgnY2tmaW5kZXIudXBsb2FkVXJsJyk7CgogICAgaWYgKCF1cmwpIHsKICAgICAgcmV0dXJuOwogICAgfSAvLyBSZWdpc3RlciBDS0ZpbmRlckFkYXB0ZXIKCgogICAgdGhpcy5lZGl0b3IucGx1Z2lucy5nZXQoRmlsZVJlcG9zaXRvcnkpLmNyZWF0ZVVwbG9hZEFkYXB0ZXIgPSBsb2FkZXIgPT4gbmV3IFVwbG9hZEFkYXB0ZXIobG9hZGVyLCB1cmwsIHRoaXMuZWRpdG9yLnQpOwogIH0KCn0KLyoqCiAqIFVwbG9hZCBhZGFwdGVyIGZvciBDS0ZpbmRlci4KICoKICogQHByaXZhdGUKICogQGltcGxlbWVudHMgbW9kdWxlOnVwbG9hZC9maWxlcmVwb3NpdG9yeX5VcGxvYWRBZGFwdGVyCiAqLwoKY2xhc3MgVXBsb2FkQWRhcHRlciB7CiAgLyoqCiAgICogQ3JlYXRlcyBhIG5ldyBhZGFwdGVyIGluc3RhbmNlLgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6dXBsb2FkL2ZpbGVyZXBvc2l0b3J5fkZpbGVMb2FkZXJ9IGxvYWRlcgogICAqIEBwYXJhbSB7U3RyaW5nfSB1cmwKICAgKiBAcGFyYW0ge21vZHVsZTp1dGlscy9sb2NhbGV+TG9jYWxlI3R9IHQKICAgKi8KICBjb25zdHJ1Y3Rvcihsb2FkZXIsIHVybCwgdCkgewogICAgLyoqCiAgICAgKiBGaWxlTG9hZGVyIGluc3RhbmNlIHRvIHVzZSBkdXJpbmcgdGhlIHVwbG9hZC4KICAgICAqCiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dXBsb2FkL2ZpbGVyZXBvc2l0b3J5fkZpbGVMb2FkZXJ9ICNsb2FkZXIKICAgICAqLwogICAgdGhpcy5sb2FkZXIgPSBsb2FkZXI7CiAgICAvKioKICAgICAqIFVwbG9hZCBVUkwuCiAgICAgKgogICAgICogQG1lbWJlciB7U3RyaW5nfSAjdXJsCiAgICAgKi8KCiAgICB0aGlzLnVybCA9IHVybDsKICAgIC8qKgogICAgICogTG9jYWxlIHRyYW5zbGF0aW9uIG1ldGhvZC4KICAgICAqCiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dXRpbHMvbG9jYWxlfkxvY2FsZSN0fSAjdAogICAgICovCgogICAgdGhpcy50ID0gdDsKICB9CiAgLyoqCiAgICogU3RhcnRzIHRoZSB1cGxvYWQgcHJvY2Vzcy4KICAgKgogICAqIEBzZWUgbW9kdWxlOnVwbG9hZC9maWxlcmVwb3NpdG9yeX5VcGxvYWRBZGFwdGVyI3VwbG9hZAogICAqIEByZXR1cm5zIHtQcm9taXNlLjxPYmplY3Q+fQogICAqLwoKCiAgdXBsb2FkKCkgewogICAgcmV0dXJuIHRoaXMubG9hZGVyLmZpbGUudGhlbihmaWxlID0+IHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICB0aGlzLl9pbml0UmVxdWVzdCgpOwoKICAgICAgICB0aGlzLl9pbml0TGlzdGVuZXJzKHJlc29sdmUsIHJlamVjdCwgZmlsZSk7CgogICAgICAgIHRoaXMuX3NlbmRSZXF1ZXN0KGZpbGUpOwogICAgICB9KTsKICAgIH0pOwogIH0KICAvKioKICAgKiBBYm9ydHMgdGhlIHVwbG9hZCBwcm9jZXNzLgogICAqCiAgICogQHNlZSBtb2R1bGU6dXBsb2FkL2ZpbGVyZXBvc2l0b3J5flVwbG9hZEFkYXB0ZXIjYWJvcnQKICAgKi8KCgogIGFib3J0KCkgewogICAgaWYgKHRoaXMueGhyKSB7CiAgICAgIHRoaXMueGhyLmFib3J0KCk7CiAgICB9CiAgfQogIC8qKgogICAqIEluaXRpYWxpemVzIHRoZSBYTUxIdHRwUmVxdWVzdCBvYmplY3QuCiAgICoKICAgKiBAcHJpdmF0ZQogICAqLwoKCiAgX2luaXRSZXF1ZXN0KCkgewogICAgY29uc3QgeGhyID0gdGhpcy54aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgIHhoci5vcGVuKCdQT1NUJywgdGhpcy51cmwsIHRydWUpOwogICAgeGhyLnJlc3BvbnNlVHlwZSA9ICdqc29uJzsKICB9CiAgLyoqCiAgICogSW5pdGlhbGl6ZXMgWE1MSHR0cFJlcXVlc3QgbGlzdGVuZXJzLgogICAqCiAgICogQHByaXZhdGUKICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSByZXNvbHZlIENhbGxiYWNrIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSByZXF1ZXN0IGlzIHN1Y2Nlc3NmdWwuCiAgICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IENhbGxiYWNrIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSByZXF1ZXN0IGNhbm5vdCBiZSBjb21wbGV0ZWQuCiAgICogQHBhcmFtIHtGaWxlfSBmaWxlIEZpbGUgaW5zdGFuY2UgdG8gYmUgdXBsb2FkZWQuCiAgICovCgoKICBfaW5pdExpc3RlbmVycyhyZXNvbHZlLCByZWplY3QsIGZpbGUpIHsKICAgIGNvbnN0IHhociA9IHRoaXMueGhyOwogICAgY29uc3QgbG9hZGVyID0gdGhpcy5sb2FkZXI7CiAgICBjb25zdCB0ID0gdGhpcy50OwogICAgY29uc3QgZ2VuZXJpY0Vycm9yID0gdCgnQ2Fubm90IHVwbG9hZCBmaWxlOicpICsgYCAke2ZpbGUubmFtZX0uYDsKICAgIHhoci5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsICgpID0+IHJlamVjdChnZW5lcmljRXJyb3IpKTsKICAgIHhoci5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsICgpID0+IHJlamVjdCgpKTsKICAgIHhoci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4gewogICAgICBjb25zdCByZXNwb25zZSA9IHhoci5yZXNwb25zZTsKCiAgICAgIGlmICghcmVzcG9uc2UgfHwgIXJlc3BvbnNlLnVwbG9hZGVkKSB7CiAgICAgICAgcmV0dXJuIHJlamVjdChyZXNwb25zZSAmJiByZXNwb25zZS5lcnJvciAmJiByZXNwb25zZS5lcnJvci5tZXNzYWdlID8gcmVzcG9uc2UuZXJyb3IubWVzc2FnZSA6IGdlbmVyaWNFcnJvcik7CiAgICAgIH0KCiAgICAgIHJlc29sdmUoewogICAgICAgIGRlZmF1bHQ6IHJlc3BvbnNlLnVybAogICAgICB9KTsKICAgIH0pOyAvLyBVcGxvYWQgcHJvZ3Jlc3Mgd2hlbiBpdCdzIHN1cHBvcnRlZC4KCiAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqLwoKICAgIGlmICh4aHIudXBsb2FkKSB7CiAgICAgIHhoci51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBldnQgPT4gewogICAgICAgIGlmIChldnQubGVuZ3RoQ29tcHV0YWJsZSkgewogICAgICAgICAgbG9hZGVyLnVwbG9hZFRvdGFsID0gZXZ0LnRvdGFsOwogICAgICAgICAgbG9hZGVyLnVwbG9hZGVkID0gZXZ0LmxvYWRlZDsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KICAvKioKICAgKiBQcmVwYXJlcyB0aGUgZGF0YSBhbmQgc2VuZHMgdGhlIHJlcXVlc3QuCiAgICoKICAgKiBAcHJpdmF0ZQogICAqIEBwYXJhbSB7RmlsZX0gZmlsZSBGaWxlIGluc3RhbmNlIHRvIGJlIHVwbG9hZGVkLgogICAqLwoKCiAgX3NlbmRSZXF1ZXN0KGZpbGUpIHsKICAgIC8vIFByZXBhcmUgZm9ybSBkYXRhLgogICAgY29uc3QgZGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgZGF0YS5hcHBlbmQoJ3VwbG9hZCcsIGZpbGUpOwogICAgZGF0YS5hcHBlbmQoJ2NrQ3NyZlRva2VuJywgZ2V0Q3NyZlRva2VuKCkpOyAvLyBTZW5kIHJlcXVlc3QuCgogICAgdGhpcy54aHIuc2VuZChkYXRhKTsKICB9Cgp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-adapter-ckfinder/src/uploadadapter.js"],"names":["Plugin","FileRepository","getCsrfToken","CKFinderUploadAdapter","requires","pluginName","init","url","editor","config","get","plugins","createUploadAdapter","loader","UploadAdapter","t","constructor","upload","file","then","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","abort","xhr","XMLHttpRequest","open","responseType","genericError","name","addEventListener","response","uploaded","error","message","default","evt","lengthComputable","uploadTotal","total","loaded","data","FormData","append","send"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals XMLHttpRequest, FormData */\n\n/**\n * @module adapter-ckfinder/uploadadapter\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport { getCsrfToken } from './utils';\n\n/**\n * A plugin that enables file uploads in CKEditor 5 using the CKFinder server–side connector.\n *\n * See the {@glink features/image-upload/ckfinder \"CKFinder file manager integration\" guide} to learn how to configure\n * and use this feature as well as find out more about the full integration with the file manager\n * provided by the {@link module:ckfinder/ckfinder~CKFinder} plugin.\n *\n * Check out the {@glink features/image-upload/image-upload comprehensive \"Image upload overview\"} to learn about\n * other ways to upload images into CKEditor 5.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class CKFinderUploadAdapter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FileRepository ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'CKFinderUploadAdapter';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst url = this.editor.config.get( 'ckfinder.uploadUrl' );\n\n\t\tif ( !url ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Register CKFinderAdapter\n\t\tthis.editor.plugins.get( FileRepository ).createUploadAdapter = loader => new UploadAdapter( loader, url, this.editor.t );\n\t}\n}\n\n/**\n * Upload adapter for CKFinder.\n *\n * @private\n * @implements module:upload/filerepository~UploadAdapter\n */\nclass UploadAdapter {\n\t/**\n\t * Creates a new adapter instance.\n\t *\n\t * @param {module:upload/filerepository~FileLoader} loader\n\t * @param {String} url\n\t * @param {module:utils/locale~Locale#t} t\n\t */\n\tconstructor( loader, url, t ) {\n\t\t/**\n\t\t * FileLoader instance to use during the upload.\n\t\t *\n\t\t * @member {module:upload/filerepository~FileLoader} #loader\n\t\t */\n\t\tthis.loader = loader;\n\n\t\t/**\n\t\t * Upload URL.\n\t\t *\n\t\t * @member {String} #url\n\t\t */\n\t\tthis.url = url;\n\n\t\t/**\n\t\t * Locale translation method.\n\t\t *\n\t\t * @member {module:utils/locale~Locale#t} #t\n\t\t */\n\t\tthis.t = t;\n\t}\n\n\t/**\n\t * Starts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#upload\n\t * @returns {Promise.<Object>}\n\t */\n\tupload() {\n\t\treturn this.loader.file.then( file => {\n\t\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\t\tthis._initRequest();\n\t\t\t\tthis._initListeners( resolve, reject, file );\n\t\t\t\tthis._sendRequest( file );\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Aborts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#abort\n\t */\n\tabort() {\n\t\tif ( this.xhr ) {\n\t\t\tthis.xhr.abort();\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the XMLHttpRequest object.\n\t *\n\t * @private\n\t */\n\t_initRequest() {\n\t\tconst xhr = this.xhr = new XMLHttpRequest();\n\n\t\txhr.open( 'POST', this.url, true );\n\t\txhr.responseType = 'json';\n\t}\n\n\t/**\n\t * Initializes XMLHttpRequest listeners.\n\t *\n\t * @private\n\t * @param {Function} resolve Callback function to be called when the request is successful.\n\t * @param {Function} reject Callback function to be called when the request cannot be completed.\n\t * @param {File} file File instance to be uploaded.\n\t */\n\t_initListeners( resolve, reject, file ) {\n\t\tconst xhr = this.xhr;\n\t\tconst loader = this.loader;\n\t\tconst t = this.t;\n\t\tconst genericError = t( 'Cannot upload file:' ) + ` ${ file.name }.`;\n\n\t\txhr.addEventListener( 'error', () => reject( genericError ) );\n\t\txhr.addEventListener( 'abort', () => reject() );\n\t\txhr.addEventListener( 'load', () => {\n\t\t\tconst response = xhr.response;\n\n\t\t\tif ( !response || !response.uploaded ) {\n\t\t\t\treturn reject( response && response.error && response.error.message ? response.error.message : genericError );\n\t\t\t}\n\n\t\t\tresolve( {\n\t\t\t\tdefault: response.url\n\t\t\t} );\n\t\t} );\n\n\t\t// Upload progress when it's supported.\n\t\t/* istanbul ignore else */\n\t\tif ( xhr.upload ) {\n\t\t\txhr.upload.addEventListener( 'progress', evt => {\n\t\t\t\tif ( evt.lengthComputable ) {\n\t\t\t\t\tloader.uploadTotal = evt.total;\n\t\t\t\t\tloader.uploaded = evt.loaded;\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the data and sends the request.\n\t *\n\t * @private\n\t * @param {File} file File instance to be uploaded.\n\t */\n\t_sendRequest( file ) {\n\t\t// Prepare form data.\n\t\tconst data = new FormData();\n\t\tdata.append( 'upload', file );\n\t\tdata.append( 'ckCsrfToken', getCsrfToken() );\n\n\t\t// Send request.\n\t\tthis.xhr.send( data );\n\t}\n}\n"]}]}