{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js"],"names":["Operation","Position","Range","CKEditorError","compareArrays","_move","MoveOperation","constructor","sourcePosition","howMany","targetPosition","baseVersion","clone","stickiness","type","root","rootName","getMovedRangeStart","_getTransformedByDeletion","getReversed","newTargetPosition","_getTransformedByInsertion","_validate","sourceElement","parent","targetElement","sourceOffset","offset","targetOffset","maxOffset","getParentPath","i","path","length","_execute","_createFromPositionAndShift","toJSON","json","className","fromJSON","document"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/moveoperation\n */\n\nimport Operation from './operation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { _move } from './utils';\n\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class MoveOperation extends Operation {\n\t/**\n\t * Creates a move operation.\n\t *\n\t * @param {module:engine/model/position~Position} sourcePosition\n\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n\t * `sourcePosition` with offset shifted by `howMany`.\n\t * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n\t * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n\t * can be applied or `null` if the operation operates on detached (non-document) tree.\n\t */\n\tconstructor( sourcePosition, howMany, targetPosition, baseVersion ) {\n\t\tsuper( baseVersion );\n\n\t\t/**\n\t\t * Position before the first {@link module:engine/model/item~Item model item} to move.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n\t\t */\n\t\tthis.sourcePosition = sourcePosition.clone();\n\t\t// `'toNext'` because `sourcePosition` is a bit like a start of the moved range.\n\t\tthis.sourcePosition.stickiness = 'toNext';\n\n\t\t/**\n\t\t * Offset size of moved range.\n\t\t *\n\t\t * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n\t\t */\n\t\tthis.howMany = howMany;\n\n\t\t/**\n\t\t * Position at which moved nodes will be inserted.\n\t\t *\n\t\t * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n\t\t */\n\t\tthis.targetPosition = targetPosition.clone();\n\t\tthis.targetPosition.stickiness = 'toNone';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget type() {\n\t\tif ( this.targetPosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'remove';\n\t\t} else if ( this.sourcePosition.root.rootName == '$graveyard' ) {\n\t\t\treturn 'reinsert';\n\t\t}\n\n\t\treturn 'move';\n\t}\n\n\t/**\n\t * Creates and returns an operation that has the same parameters as this operation.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\n\t */\n\tclone() {\n\t\treturn new this.constructor( this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion );\n\t}\n\n\t/**\n\t * Returns the start position of the moved range after it got moved. This may be different than\n\t * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n\t * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n\t * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n\t *\n\t *\t\t vv              vv\n\t *\t\tabcdefg ===> adefbcg\n\t *\t\t     ^          ^\n\t *\t\t     targetPos\tmovedRangeStart\n\t *\t\t     offset 6\toffset 4\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetMovedRangeStart() {\n\t\treturn this.targetPosition._getTransformedByDeletion( this.sourcePosition, this.howMany );\n\t}\n\n\t/**\n\t * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n\t *\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tgetReversed() {\n\t\tconst newTargetPosition = this.sourcePosition._getTransformedByInsertion( this.targetPosition, this.howMany );\n\n\t\treturn new this.constructor( this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_validate() {\n\t\tconst sourceElement = this.sourcePosition.parent;\n\t\tconst targetElement = this.targetPosition.parent;\n\t\tconst sourceOffset = this.sourcePosition.offset;\n\t\tconst targetOffset = this.targetPosition.offset;\n\n\t\t// Validate whether move operation has correct parameters.\n\t\t// Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n\t\t// We expect that many errors might be connected with one of scenarios described below.\n\t\tif ( sourceOffset + this.howMany > sourceElement.maxOffset ) {\n\t\t\t/**\n\t\t\t * The nodes which should be moved do not exist.\n\t\t\t *\n\t\t\t * @error move-operation-nodes-do-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-nodes-do-not-exist: The nodes which should be moved do not exist.', this\n\t\t\t);\n\t\t} else if ( sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany ) {\n\t\t\t/**\n\t\t\t * Trying to move a range of nodes into the middle of that range.\n\t\t\t *\n\t\t\t * @error move-operation-range-into-itself\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'move-operation-range-into-itself: Trying to move a range of nodes to the inside of that range.', this\n\t\t\t);\n\t\t} else if ( this.sourcePosition.root == this.targetPosition.root ) {\n\t\t\tif ( compareArrays( this.sourcePosition.getParentPath(), this.targetPosition.getParentPath() ) == 'prefix' ) {\n\t\t\t\tconst i = this.sourcePosition.path.length - 1;\n\n\t\t\t\tif ( this.targetPosition.path[ i ] >= sourceOffset && this.targetPosition.path[ i ] < sourceOffset + this.howMany ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Trying to move a range of nodes into one of nodes from that range.\n\t\t\t\t\t *\n\t\t\t\t\t * @error move-operation-node-into-itself\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t\t'move-operation-node-into-itself: Trying to move a range of nodes into one of nodes from that range.', this\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_execute() {\n\t\t_move( Range._createFromPositionAndShift( this.sourcePosition, this.howMany ), this.targetPosition );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\ttoJSON() {\n\t\tconst json = super.toJSON();\n\n\t\tjson.sourcePosition = this.sourcePosition.toJSON();\n\t\tjson.targetPosition = this.targetPosition.toJSON();\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get className() {\n\t\treturn 'MoveOperation';\n\t}\n\n\t/**\n\t * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n\t *\n\t * @param {Object} json Deserialized JSON object.\n\t * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n\t * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n\t */\n\tstatic fromJSON( json, document ) {\n\t\tconst sourcePosition = Position.fromJSON( json.sourcePosition, document );\n\t\tconst targetPosition = Position.fromJSON( json.targetPosition, document );\n\n\t\treturn new this( sourcePosition, json.howMany, targetPosition, json.baseVersion );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \tconst range = ModelRange._createFromPositionAndShift( this.sourcePosition, this.howMany );\n\n\t// @if CK_DEBUG_ENGINE //\treturn `MoveOperation( ${ this.baseVersion } ): ${ range } -> ${ this.targetPosition }`;\n\t// @if CK_DEBUG_ENGINE // }\n}\n"]}]}