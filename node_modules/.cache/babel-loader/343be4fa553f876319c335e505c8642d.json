{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHR5cGluZy9pbnB1dGNvbW1hbmQKICovCmltcG9ydCBDb21tYW5kIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtY29yZS9zcmMvY29tbWFuZCc7CmltcG9ydCBDaGFuZ2VCdWZmZXIgZnJvbSAnLi91dGlscy9jaGFuZ2VidWZmZXInOwovKioKICogVGhlIGlucHV0IGNvbW1hbmQuIFVzZWQgYnkgdGhlIHtAbGluayBtb2R1bGU6dHlwaW5nL2lucHV0fklucHV0IGlucHV0IGZlYXR1cmV9IHRvIGhhbmRsZSB0eXBpbmcuCiAqCiAqIEBleHRlbmRzIG1vZHVsZTpjb3JlL2NvbW1hbmR+Q29tbWFuZAogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIElucHV0Q29tbWFuZCBleHRlbmRzIENvbW1hbmQgewogIC8qKgogICAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgdGhlIGNvbW1hbmQuCiAgICoKICAgKiBAcGFyYW0ge21vZHVsZTpjb3JlL2VkaXRvci9lZGl0b3J+RWRpdG9yfSBlZGl0b3IKICAgKiBAcGFyYW0ge051bWJlcn0gdW5kb1N0ZXBTaXplIFRoZSBtYXhpbXVtIG51bWJlciBvZiBhdG9taWMgY2hhbmdlcwogICAqIHdoaWNoIGNhbiBiZSBjb250YWluZWQgaW4gb25lIGJhdGNoIGluIHRoZSBjb21tYW5kIGJ1ZmZlci4KICAgKi8KICBjb25zdHJ1Y3RvcihlZGl0b3IsIHVuZG9TdGVwU2l6ZSkgewogICAgc3VwZXIoZWRpdG9yKTsKICAgIC8qKgogICAgICogVHlwaW5nJ3MgY2hhbmdlIGJ1ZmZlciB1c2VkIHRvIGdyb3VwIHN1YnNlcXVlbnQgY2hhbmdlcyBpbnRvIGJhdGNoZXMuCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAcHJpdmF0ZQogICAgICogQG1lbWJlciB7bW9kdWxlOnR5cGluZy91dGlscy9jaGFuZ2VidWZmZXJ+Q2hhbmdlQnVmZmVyfSAjX2J1ZmZlcgogICAgICovCgogICAgdGhpcy5fYnVmZmVyID0gbmV3IENoYW5nZUJ1ZmZlcihlZGl0b3IubW9kZWwsIHVuZG9TdGVwU2l6ZSk7CiAgICAvKioKICAgICAqIFN0b3JlcyBiYXRjaGVzIGNyZWF0ZWQgYnkgdGhlIGlucHV0IGNvbW1hbmQuIFRoZSBiYXRjaGVzIGFyZSB1c2VkIHRvIGRpZmZlcmVudGlhdGUgaW5wdXQgYmF0Y2hlcyBmcm9tIG90aGVyIGJhdGNoZXMgdXNpbmcKICAgICAqIHtAbGluayBtb2R1bGU6dHlwaW5nL2lucHV0fklucHV0I2lzSW5wdXR9IG1ldGhvZC4KICAgICAqCiAgICAgKiBAdHlwZSB7V2Vha1NldDxtb2R1bGU6ZW5naW5lL21vZGVsL2JhdGNofkJhdGNoPn0KICAgICAqIEBwcm90ZWN0ZWQKICAgICAqLwoKICAgIHRoaXMuX2JhdGNoZXMgPSBuZXcgV2Vha1NldCgpOwogIH0KICAvKioKICAgKiBUaGUgY3VycmVudCBjaGFuZ2UgYnVmZmVyLgogICAqCiAgICogQHR5cGUge21vZHVsZTp0eXBpbmcvdXRpbHMvY2hhbmdlYnVmZmVyfkNoYW5nZUJ1ZmZlcn0KICAgKi8KCgogIGdldCBidWZmZXIoKSB7CiAgICByZXR1cm4gdGhpcy5fYnVmZmVyOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgZGVzdHJveSgpIHsKICAgIHN1cGVyLmRlc3Ryb3koKTsKCiAgICB0aGlzLl9idWZmZXIuZGVzdHJveSgpOwogIH0KICAvKioKICAgKiBFeGVjdXRlcyB0aGUgaW5wdXQgY29tbWFuZC4gSXQgcmVwbGFjZXMgdGhlIGNvbnRlbnQgd2l0aGluIHRoZSBnaXZlbiByYW5nZSB3aXRoIHRoZSBnaXZlbiB0ZXh0LgogICAqIFJlcGxhY2luZyBpcyBhIHR3byBzdGVwIHByb2Nlc3MsIGZpcnN0IHRoZSBjb250ZW50IHdpdGhpbiB0aGUgcmFuZ2UgaXMgcmVtb3ZlZCBhbmQgdGhlbiB0aGUgbmV3IHRleHQgaXMgaW5zZXJ0ZWQKICAgKiBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSByYW5nZSAod2hpY2ggYWZ0ZXIgdGhlIHJlbW92YWwgaXMgYSBjb2xsYXBzZWQgcmFuZ2UpLgogICAqCiAgICogQGZpcmVzIGV4ZWN1dGUKICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIFRoZSBjb21tYW5kIG9wdGlvbnMuCiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnRleHQ9JyddIFRoZSB0ZXh0IHRvIGJlIGluc2VydGVkLgogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9yYW5nZX5SYW5nZX0gW29wdGlvbnMucmFuZ2VdIFRoZSByYW5nZSBpbiB3aGljaCB0aGUgdGV4dCBpcyBpbnNlcnRlZC4gRGVmYXVsdHMKICAgKiB0byB0aGUgZmlyc3QgcmFuZ2UgaW4gdGhlIGN1cnJlbnQgc2VsZWN0aW9uLgogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9yYW5nZX5SYW5nZX0gW29wdGlvbnMucmVzdWx0UmFuZ2VdIFRoZSByYW5nZSB3aGVyZSB0aGUgc2VsZWN0aW9uCiAgICogc2hvdWxkIGJlIHBsYWNlZCBhZnRlciB0aGUgaW5zZXJ0aW9uLiBJZiBub3Qgc3BlY2lmaWVkLCB0aGUgc2VsZWN0aW9uIHdpbGwgYmUgcGxhY2VkIHJpZ2h0IGFmdGVyCiAgICogdGhlIGluc2VydGVkIHRleHQuCiAgICovCgoKICBleGVjdXRlKG9wdGlvbnMgPSB7fSkgewogICAgY29uc3QgbW9kZWwgPSB0aGlzLmVkaXRvci5tb2RlbDsKICAgIGNvbnN0IGRvYyA9IG1vZGVsLmRvY3VtZW50OwogICAgY29uc3QgdGV4dCA9IG9wdGlvbnMudGV4dCB8fCAnJzsKICAgIGNvbnN0IHRleHRJbnNlcnRpb25zID0gdGV4dC5sZW5ndGg7CiAgICBjb25zdCByYW5nZSA9IG9wdGlvbnMucmFuZ2UgfHwgZG9jLnNlbGVjdGlvbi5nZXRGaXJzdFJhbmdlKCk7CiAgICBjb25zdCByZXN1bHRSYW5nZSA9IG9wdGlvbnMucmVzdWx0UmFuZ2U7CiAgICBtb2RlbC5lbnF1ZXVlQ2hhbmdlKHRoaXMuX2J1ZmZlci5iYXRjaCwgd3JpdGVyID0+IHsKICAgICAgY29uc3QgaXNDb2xsYXBzZWRSYW5nZSA9IHJhbmdlLmlzQ29sbGFwc2VkOwoKICAgICAgdGhpcy5fYnVmZmVyLmxvY2soKTsKCiAgICAgIG1vZGVsLmRlbGV0ZUNvbnRlbnQobW9kZWwuY3JlYXRlU2VsZWN0aW9uKHJhbmdlKSk7CgogICAgICBpZiAodGV4dCkgewogICAgICAgIG1vZGVsLmluc2VydENvbnRlbnQod3JpdGVyLmNyZWF0ZVRleHQodGV4dCwgZG9jLnNlbGVjdGlvbi5nZXRBdHRyaWJ1dGVzKCkpLCByYW5nZS5zdGFydCk7CiAgICAgIH0KCiAgICAgIGlmIChyZXN1bHRSYW5nZSkgewogICAgICAgIHdyaXRlci5zZXRTZWxlY3Rpb24ocmVzdWx0UmFuZ2UpOwogICAgICB9IGVsc2UgaWYgKGlzQ29sbGFwc2VkUmFuZ2UpIHsKICAgICAgICAvLyBJZiByYW5nZSB3YXMgY29sbGFwc2VkIGp1c3Qgc2hpZnQgdGhlIHNlbGVjdGlvbiBieSB0aGUgbnVtYmVyIG9mIGluc2VydGVkIGNoYXJhY3RlcnMuCiAgICAgICAgd3JpdGVyLnNldFNlbGVjdGlvbihyYW5nZS5zdGFydC5nZXRTaGlmdGVkQnkodGV4dEluc2VydGlvbnMpKTsKICAgICAgfQoKICAgICAgdGhpcy5fYnVmZmVyLnVubG9jaygpOwoKICAgICAgdGhpcy5fYnVmZmVyLmlucHV0KHRleHRJbnNlcnRpb25zKTsgLy8gU3RvcmUgdGhlIGJhdGNoIGFzIGFuICdpbnB1dCcgYmF0Y2ggZm9yIHRoZSBJbnB1dC5pc0lucHV0KCBiYXRjaCApIGNoZWNrLgoKCiAgICAgIHRoaXMuX2JhdGNoZXMuYWRkKHRoaXMuX2J1ZmZlci5iYXRjaCk7CiAgICB9KTsKICB9Cgp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js"],"names":["Command","ChangeBuffer","InputCommand","constructor","editor","undoStepSize","_buffer","model","_batches","WeakSet","buffer","destroy","execute","options","doc","document","text","textInsertions","length","range","selection","getFirstRange","resultRange","enqueueChange","batch","writer","isCollapsedRange","isCollapsed","lock","deleteContent","createSelection","insertContent","createText","getAttributes","start","setSelection","getShiftedBy","unlock","input","add"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,OAAP,MAAoB,sCAApB;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA;;;;;;AAKA,eAAe,MAAMC,YAAN,SAA2BF,OAA3B,CAAmC;AACjD;;;;;;;AAOAG,EAAAA,WAAW,CAAEC,MAAF,EAAUC,YAAV,EAAyB;AACnC,UAAOD,MAAP;AAEA;;;;;;;;AAOA,SAAKE,OAAL,GAAe,IAAIL,YAAJ,CAAkBG,MAAM,CAACG,KAAzB,EAAgCF,YAAhC,CAAf;AAEA;;;;;;;;AAOA,SAAKG,QAAL,GAAgB,IAAIC,OAAJ,EAAhB;AACA;AAED;;;;;;;AAKA,MAAIC,MAAJ,GAAa;AACZ,WAAO,KAAKJ,OAAZ;AACA;AAED;;;;;AAGAK,EAAAA,OAAO,GAAG;AACT,UAAMA,OAAN;;AAEA,SAAKL,OAAL,CAAaK,OAAb;AACA;AAED;;;;;;;;;;;;;;;;AAcAC,EAAAA,OAAO,CAAEC,OAAO,GAAG,EAAZ,EAAiB;AACvB,UAAMN,KAAK,GAAG,KAAKH,MAAL,CAAYG,KAA1B;AACA,UAAMO,GAAG,GAAGP,KAAK,CAACQ,QAAlB;AACA,UAAMC,IAAI,GAAGH,OAAO,CAACG,IAAR,IAAgB,EAA7B;AACA,UAAMC,cAAc,GAAGD,IAAI,CAACE,MAA5B;AACA,UAAMC,KAAK,GAAGN,OAAO,CAACM,KAAR,IAAiBL,GAAG,CAACM,SAAJ,CAAcC,aAAd,EAA/B;AACA,UAAMC,WAAW,GAAGT,OAAO,CAACS,WAA5B;AAEAf,IAAAA,KAAK,CAACgB,aAAN,CAAqB,KAAKjB,OAAL,CAAakB,KAAlC,EAAyCC,MAAM,IAAI;AAClD,YAAMC,gBAAgB,GAAGP,KAAK,CAACQ,WAA/B;;AAEA,WAAKrB,OAAL,CAAasB,IAAb;;AAEArB,MAAAA,KAAK,CAACsB,aAAN,CAAqBtB,KAAK,CAACuB,eAAN,CAAuBX,KAAvB,CAArB;;AAEA,UAAKH,IAAL,EAAY;AACXT,QAAAA,KAAK,CAACwB,aAAN,CAAqBN,MAAM,CAACO,UAAP,CAAmBhB,IAAnB,EAAyBF,GAAG,CAACM,SAAJ,CAAca,aAAd,EAAzB,CAArB,EAA+Ed,KAAK,CAACe,KAArF;AACA;;AAED,UAAKZ,WAAL,EAAmB;AAClBG,QAAAA,MAAM,CAACU,YAAP,CAAqBb,WAArB;AACA,OAFD,MAEO,IAAKI,gBAAL,EAAwB;AAC9B;AACAD,QAAAA,MAAM,CAACU,YAAP,CAAqBhB,KAAK,CAACe,KAAN,CAAYE,YAAZ,CAA0BnB,cAA1B,CAArB;AACA;;AAED,WAAKX,OAAL,CAAa+B,MAAb;;AAEA,WAAK/B,OAAL,CAAagC,KAAb,CAAoBrB,cAApB,EApBkD,CAsBlD;;;AACA,WAAKT,QAAL,CAAc+B,GAAd,CAAmB,KAAKjC,OAAL,CAAakB,KAAhC;AACA,KAxBD;AAyBA;;AA/FgD","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/inputcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport ChangeBuffer from './utils/changebuffer';\n\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command~Command\n */\nexport default class InputCommand extends Command {\n\t/**\n\t * Creates an instance of the command.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t * @param {Number} undoStepSize The maximum number of atomic changes\n\t * which can be contained in one batch in the command buffer.\n\t */\n\tconstructor( editor, undoStepSize ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Typing's change buffer used to group subsequent changes into batches.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {module:typing/utils/changebuffer~ChangeBuffer} #_buffer\n\t\t */\n\t\tthis._buffer = new ChangeBuffer( editor.model, undoStepSize );\n\n\t\t/**\n\t\t * Stores batches created by the input command. The batches are used to differentiate input batches from other batches using\n\t\t * {@link module:typing/input~Input#isInput} method.\n\t\t *\n\t\t * @type {WeakSet<module:engine/model/batch~Batch>}\n\t\t * @protected\n\t\t */\n\t\tthis._batches = new WeakSet();\n\t}\n\n\t/**\n\t * The current change buffer.\n\t *\n\t * @type {module:typing/utils/changebuffer~ChangeBuffer}\n\t */\n\tget buffer() {\n\t\treturn this._buffer;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis._buffer.destroy();\n\t}\n\n\t/**\n\t * Executes the input command. It replaces the content within the given range with the given text.\n\t * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\n\t * at the beginning of the range (which after the removal is a collapsed range).\n\t *\n\t * @fires execute\n\t * @param {Object} [options] The command options.\n\t * @param {String} [options.text=''] The text to be inserted.\n\t * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\n\t * to the first range in the current selection.\n\t * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\n\t * should be placed after the insertion. If not specified, the selection will be placed right after\n\t * the inserted text.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst text = options.text || '';\n\t\tconst textInsertions = text.length;\n\t\tconst range = options.range || doc.selection.getFirstRange();\n\t\tconst resultRange = options.resultRange;\n\n\t\tmodel.enqueueChange( this._buffer.batch, writer => {\n\t\t\tconst isCollapsedRange = range.isCollapsed;\n\n\t\t\tthis._buffer.lock();\n\n\t\t\tmodel.deleteContent( model.createSelection( range ) );\n\n\t\t\tif ( text ) {\n\t\t\t\tmodel.insertContent( writer.createText( text, doc.selection.getAttributes() ), range.start );\n\t\t\t}\n\n\t\t\tif ( resultRange ) {\n\t\t\t\twriter.setSelection( resultRange );\n\t\t\t} else if ( isCollapsedRange ) {\n\t\t\t\t// If range was collapsed just shift the selection by the number of inserted characters.\n\t\t\t\twriter.setSelection( range.start.getShiftedBy( textInsertions ) );\n\t\t\t}\n\n\t\t\tthis._buffer.unlock();\n\n\t\t\tthis._buffer.input( textInsertions );\n\n\t\t\t// Store the batch as an 'input' batch for the Input.isInput( batch ) check.\n\t\t\tthis._batches.add( this._buffer.batch );\n\t\t} );\n\t}\n}\n"]}]}