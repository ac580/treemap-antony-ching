{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/input.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/input.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHR5cGluZy9pbnB1dAogKi8KaW1wb3J0IFBsdWdpbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LWNvcmUvc3JjL3BsdWdpbic7CmltcG9ydCBJbnB1dENvbW1hbmQgZnJvbSAnLi9pbnB1dGNvbW1hbmQnOwppbXBvcnQgaW5qZWN0VW5zYWZlS2V5c3Ryb2tlc0hhbmRsaW5nIGZyb20gJy4vdXRpbHMvaW5qZWN0dW5zYWZla2V5c3Ryb2tlc2hhbmRsaW5nJzsKaW1wb3J0IGluamVjdFR5cGluZ011dGF0aW9uc0hhbmRsaW5nIGZyb20gJy4vdXRpbHMvaW5qZWN0dHlwaW5nbXV0YXRpb25zaGFuZGxpbmcnOwovKioKICogSGFuZGxlcyB0ZXh0IGlucHV0IGNvbWluZyBmcm9tIHRoZSBrZXlib2FyZCBvciBvdGhlciBpbnB1dCBtZXRob2RzLgogKgogKiBAZXh0ZW5kcyBtb2R1bGU6Y29yZS9wbHVnaW5+UGx1Z2luCiAqLwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5wdXQgZXh0ZW5kcyBQbHVnaW4gewogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgc3RhdGljIGdldCBwbHVnaW5OYW1lKCkgewogICAgcmV0dXJuICdJbnB1dCc7CiAgfQogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCgoKICBpbml0KCkgewogICAgY29uc3QgZWRpdG9yID0gdGhpcy5lZGl0b3I7IC8vIFRPRE8gVGhlIGFib3ZlIGRlZmF1bHQgY29uZmlndXJhdGlvbiB2YWx1ZSBzaG91bGQgYmUgZGVmaW5lZCB1c2luZyBlZGl0b3IuY29uZmlnLmRlZmluZSgpIG9uY2UgaXQncyBmaXhlZC4KCiAgICBjb25zdCBpbnB1dENvbW1hbmQgPSBuZXcgSW5wdXRDb21tYW5kKGVkaXRvciwgZWRpdG9yLmNvbmZpZy5nZXQoJ3R5cGluZy51bmRvU3RlcCcpIHx8IDIwKTsKICAgIGVkaXRvci5jb21tYW5kcy5hZGQoJ2lucHV0JywgaW5wdXRDb21tYW5kKTsKICAgIGluamVjdFVuc2FmZUtleXN0cm9rZXNIYW5kbGluZyhlZGl0b3IpOwogICAgaW5qZWN0VHlwaW5nTXV0YXRpb25zSGFuZGxpbmcoZWRpdG9yKTsKICB9CiAgLyoqCiAgICogQ2hlY2tzIGJhdGNoIGlmIGl0IGlzIGEgcmVzdWx0IG9mIHVzZXIgaW5wdXQgLSBlLmcuIHR5cGluZy4KICAgKgogICAqCQljb25zdCBpbnB1dCA9IGVkaXRvci5wbHVnaW5zLmdldCggJ0lucHV0JyApOwogICAqCiAgICoJCWVkaXRvci5tb2RlbC5kb2N1bWVudC5vbiggJ2NoYW5nZTpkYXRhJywgKCBldnQsIGJhdGNoICkgPT4gewogICAqCQkJaWYgKCBpbnB1dC5pc1R5cGluZyggYmF0Y2ggKSApIHsKICAgKgkJCQljb25zb2xlLmxvZyggJ1RoZSB1c2VyIHR5cGVkIHNvbWV0aGluZy4uLicgKTsKICAgKgkJCX0KICAgKgkJfSApOwogICAqCiAgICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGNoZWNrcyBpZiB0aGUgYmF0Y2ggd2FzIGNyZWF0ZWQgdXNpbmcge0BsaW5rIG1vZHVsZTp0eXBpbmcvaW5wdXRjb21tYW5kfklucHV0Q29tbWFuZCAnaW5wdXQnfQogICAqIGNvbW1hbmQgYXMgdHlwaW5nIGNoYW5nZXMgY29taW5nIGZyb20gdXNlciBpbnB1dCBhcmUgaW5zZXJ0ZWQgdG8gdGhlIGRvY3VtZW50IHVzaW5nIHRoYXQgY29tbWFuZC4KICAgKgogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9iYXRjaH5CYXRjaH0gYmF0Y2ggQSBiYXRjaCB0byBjaGVjay4KICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0KICAgKi8KCgogIGlzSW5wdXQoYmF0Y2gpIHsKICAgIGNvbnN0IGlucHV0Q29tbWFuZCA9IHRoaXMuZWRpdG9yLmNvbW1hbmRzLmdldCgnaW5wdXQnKTsKICAgIHJldHVybiBpbnB1dENvbW1hbmQuX2JhdGNoZXMuaGFzKGJhdGNoKTsKICB9Cgp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/input.js"],"names":["Plugin","InputCommand","injectUnsafeKeystrokesHandling","injectTypingMutationsHandling","Input","pluginName","init","editor","inputCommand","config","get","commands","add","isInput","batch","_batches","has"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,8BAAP,MAA2C,wCAA3C;AACA,OAAOC,6BAAP,MAA0C,uCAA1C;AAEA;;;;;;AAKA,eAAe,MAAMC,KAAN,SAAoBJ,MAApB,CAA2B;AACzC;;;AAGA,aAAWK,UAAX,GAAwB;AACvB,WAAO,OAAP;AACA;AAED;;;;;AAGAC,EAAAA,IAAI,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB,CADM,CAGN;;AACA,UAAMC,YAAY,GAAG,IAAIP,YAAJ,CAAkBM,MAAlB,EAA0BA,MAAM,CAACE,MAAP,CAAcC,GAAd,CAAmB,iBAAnB,KAA0C,EAApE,CAArB;AAEAH,IAAAA,MAAM,CAACI,QAAP,CAAgBC,GAAhB,CAAqB,OAArB,EAA8BJ,YAA9B;AAEAN,IAAAA,8BAA8B,CAAEK,MAAF,CAA9B;AACAJ,IAAAA,6BAA6B,CAAEI,MAAF,CAA7B;AACA;AAED;;;;;;;;;;;;;;;;;;;AAiBAM,EAAAA,OAAO,CAAEC,KAAF,EAAU;AAChB,UAAMN,YAAY,GAAG,KAAKD,MAAL,CAAYI,QAAZ,CAAqBD,GAArB,CAA0B,OAA1B,CAArB;AAEA,WAAOF,YAAY,CAACO,QAAb,CAAsBC,GAAtB,CAA2BF,KAA3B,CAAP;AACA;;AA5CwC","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/input\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport InputCommand from './inputcommand';\n\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\n\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Input extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Input';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\t\tconst inputCommand = new InputCommand( editor, editor.config.get( 'typing.undoStep' ) || 20 );\n\n\t\teditor.commands.add( 'input', inputCommand );\n\n\t\tinjectUnsafeKeystrokesHandling( editor );\n\t\tinjectTypingMutationsHandling( editor );\n\t}\n\n\t/**\n\t * Checks batch if it is a result of user input - e.g. typing.\n\t *\n\t *\t\tconst input = editor.plugins.get( 'Input' );\n\t *\n\t *\t\teditor.model.document.on( 'change:data', ( evt, batch ) => {\n\t *\t\t\tif ( input.isTyping( batch ) ) {\n\t *\t\t\t\tconsole.log( 'The user typed something...' );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * **Note:** This method checks if the batch was created using {@link module:typing/inputcommand~InputCommand 'input'}\n\t * command as typing changes coming from user input are inserted to the document using that command.\n\t *\n\t * @param {module:engine/model/batch~Batch} batch A batch to check.\n\t * @returns {Boolean}\n\t */\n\tisInput( batch ) {\n\t\tconst inputCommand = this.editor.commands.get( 'input' );\n\n\t\treturn inputCommand._batches.has( batch );\n\t}\n}\n"]}]}