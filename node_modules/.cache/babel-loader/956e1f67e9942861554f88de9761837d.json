{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadediting.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadediting.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadediting.js"],"names":["Plugin","FileRepository","Notification","Clipboard","UpcastWriter","env","ImageUploadCommand","fetchLocalImage","isLocalImage","createImageTypeRegExp","ImageUploadEditing","requires","pluginName","constructor","editor","config","define","upload","types","init","doc","model","document","schema","conversion","fileRepository","plugins","get","imageTypes","extend","allowAttributes","commands","add","for","attributeToAttribute","view","name","key","listenTo","editing","evt","data","isHtmlIncluded","dataTransfer","images","Array","from","files","filter","file","test","type","ranges","targetRanges","map","viewRange","mapper","toModelRange","change","writer","setSelection","length","stop","enqueueChange","execute","fetchableImages","createRangeIn","content","value","item","getAttribute","promise","imageElement","fetchableImage","setAttribute","loader","createLoader","id","on","preventDefault","changes","differ","getChanges","includeChangesInGraveyard","entry","position","nodeAfter","isInGraveyard","root","rootName","image","getImagesFromChangeItem","uploadId","loaders","abort","status","_readAndUpload","t","locale","notification","read","then","isSafari","viewFigure","toViewElement","viewImg","getChild","once","parent","domFigure","domConverter","mapViewToDom","originalDisplay","style","display","_ckHack","offsetHeight","setAttributes","uploadStatus","src","default","_parseAndSetSrcsetAttributeOnImage","clean","catch","error","showWarning","title","namespace","remove","removeAttribute","destroyLoader","maxWidth","srcsetAttribute","Object","keys","width","parseInt","isNaN","Math","max","join","includes","getData","createRangeOn","is"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload/imageuploadediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport Notification from '@ckeditor/ckeditor5-ui/src/notification/notification';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport UpcastWriter from '@ckeditor/ckeditor5-engine/src/view/upcastwriter';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\nimport ImageUploadCommand from '../../src/imageupload/imageuploadcommand';\nimport { fetchLocalImage, isLocalImage } from '../../src/imageupload/utils';\nimport { createImageTypeRegExp } from './utils';\n\n/**\n * The editing part of the image upload feature. It registers the `'imageUpload'` command.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUploadEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FileRepository, Notification, Clipboard ];\n\t}\n\n\tstatic get pluginName() {\n\t\treturn 'ImageUploadEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'image', {\n\t\t\tupload: {\n\t\t\t\ttypes: [ 'jpeg', 'png', 'gif', 'bmp', 'webp', 'tiff' ]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst doc = editor.model.document;\n\t\tconst schema = editor.model.schema;\n\t\tconst conversion = editor.conversion;\n\t\tconst fileRepository = editor.plugins.get( FileRepository );\n\n\t\tconst imageTypes = createImageTypeRegExp( editor.config.get( 'image.upload.types' ) );\n\n\t\t// Setup schema to allow uploadId and uploadStatus for images.\n\t\tschema.extend( 'image', {\n\t\t\tallowAttributes: [ 'uploadId', 'uploadStatus' ]\n\t\t} );\n\n\t\t// Register imageUpload command.\n\t\teditor.commands.add( 'imageUpload', new ImageUploadCommand( editor ) );\n\n\t\t// Register upcast converter for uploadId.\n\t\tconversion.for( 'upcast' )\n\t\t\t.attributeToAttribute( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'img',\n\t\t\t\t\tkey: 'uploadId'\n\t\t\t\t},\n\t\t\t\tmodel: 'uploadId'\n\t\t\t} );\n\n\t\t// Handle pasted images.\n\t\t// For every image file, a new file loader is created and a placeholder image is\n\t\t// inserted into the content. Then, those images are uploaded once they appear in the model\n\t\t// (see Document#change listener below).\n\t\tthis.listenTo( editor.editing.view.document, 'clipboardInput', ( evt, data ) => {\n\t\t\t// Skip if non empty HTML data is included.\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/68\n\t\t\tif ( isHtmlIncluded( data.dataTransfer ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst images = Array.from( data.dataTransfer.files ).filter( file => {\n\t\t\t\t// See https://github.com/ckeditor/ckeditor5-image/pull/254.\n\t\t\t\tif ( !file ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn imageTypes.test( file.type );\n\t\t\t} );\n\n\t\t\tconst ranges = data.targetRanges.map( viewRange => editor.editing.mapper.toModelRange( viewRange ) );\n\n\t\t\teditor.model.change( writer => {\n\t\t\t\t// Set selection to paste target.\n\t\t\t\twriter.setSelection( ranges );\n\n\t\t\t\tif ( images.length ) {\n\t\t\t\t\tevt.stop();\n\n\t\t\t\t\t// Upload images after the selection has changed in order to ensure the command's state is refreshed.\n\t\t\t\t\teditor.model.enqueueChange( 'default', () => {\n\t\t\t\t\t\teditor.execute( 'imageUpload', { file: images } );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Handle HTML pasted with images with base64 or blob sources.\n\t\t// For every image file, a new file loader is created and a placeholder image is\n\t\t// inserted into the content. Then, those images are uploaded once they appear in the model\n\t\t// (see Document#change listener below).\n\t\tthis.listenTo( editor.plugins.get( Clipboard ), 'inputTransformation', ( evt, data ) => {\n\t\t\tconst fetchableImages = Array.from( editor.editing.view.createRangeIn( data.content ) )\n\t\t\t\t.filter( value => isLocalImage( value.item ) && !value.item.getAttribute( 'uploadProcessed' ) )\n\t\t\t\t.map( value => { return { promise: fetchLocalImage( value.item ), imageElement: value.item }; } );\n\n\t\t\tif ( !fetchableImages.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst writer = new UpcastWriter();\n\n\t\t\tfor ( const fetchableImage of fetchableImages ) {\n\t\t\t\t// Set attribute marking that the image was processed already.\n\t\t\t\twriter.setAttribute( 'uploadProcessed', true, fetchableImage.imageElement );\n\n\t\t\t\tconst loader = fileRepository.createLoader( fetchableImage.promise );\n\n\t\t\t\tif ( loader ) {\n\t\t\t\t\twriter.setAttribute( 'src', '', fetchableImage.imageElement );\n\t\t\t\t\twriter.setAttribute( 'uploadId', loader.id, fetchableImage.imageElement );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Prevents from the browser redirecting to the dropped image.\n\t\teditor.editing.view.document.on( 'dragover', ( evt, data ) => {\n\t\t\tdata.preventDefault();\n\t\t} );\n\n\t\t// Upload placeholder images that appeared in the model.\n\t\tdoc.on( 'change', () => {\n\t\t\tconst changes = doc.differ.getChanges( { includeChangesInGraveyard: true } );\n\n\t\t\tfor ( const entry of changes ) {\n\t\t\t\tif ( entry.type == 'insert' && entry.name != '$text' ) {\n\t\t\t\t\tconst item = entry.position.nodeAfter;\n\t\t\t\t\tconst isInGraveyard = entry.position.root.rootName == '$graveyard';\n\n\t\t\t\t\tfor ( const image of getImagesFromChangeItem( editor, item ) ) {\n\t\t\t\t\t\t// Check if the image element still has upload id.\n\t\t\t\t\t\tconst uploadId = image.getAttribute( 'uploadId' );\n\n\t\t\t\t\t\tif ( !uploadId ) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check if the image is loaded on this client.\n\t\t\t\t\t\tconst loader = fileRepository.loaders.get( uploadId );\n\n\t\t\t\t\t\tif ( !loader ) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isInGraveyard ) {\n\t\t\t\t\t\t\t// If the image was inserted to the graveyard - abort the loading process.\n\t\t\t\t\t\t\tloader.abort();\n\t\t\t\t\t\t} else if ( loader.status == 'idle' ) {\n\t\t\t\t\t\t\t// If the image was inserted into content and has not been loaded yet, start loading it.\n\t\t\t\t\t\t\tthis._readAndUpload( loader, image );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Reads and uploads an image.\n\t *\n\t * The image is read from the disk and as a Base64-encoded string it is set temporarily to\n\t * `image[src]`. When the image is successfully uploaded, the temporary data is replaced with the target\n\t * image's URL (the URL to the uploaded image on the server).\n\t *\n\t * @protected\n\t * @param {module:upload/filerepository~FileLoader} loader\n\t * @param {module:engine/model/element~Element} imageElement\n\t * @returns {Promise}\n\t */\n\t_readAndUpload( loader, imageElement ) {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst t = editor.locale.t;\n\t\tconst fileRepository = editor.plugins.get( FileRepository );\n\t\tconst notification = editor.plugins.get( Notification );\n\n\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\twriter.setAttribute( 'uploadStatus', 'reading', imageElement );\n\t\t} );\n\n\t\treturn loader.read()\n\t\t\t.then( () => {\n\t\t\t\tconst promise = loader.upload();\n\n\t\t\t\t// Force re–paint in Safari. Without it, the image will display with a wrong size.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/1975\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif ( env.isSafari ) {\n\t\t\t\t\tconst viewFigure = editor.editing.mapper.toViewElement( imageElement );\n\t\t\t\t\tconst viewImg = viewFigure.getChild( 0 );\n\n\t\t\t\t\teditor.editing.view.once( 'render', () => {\n\t\t\t\t\t\t// Early returns just to be safe. There might be some code ran\n\t\t\t\t\t\t// in between the outer scope and this callback.\n\t\t\t\t\t\tif ( !viewImg.parent ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst domFigure = editor.editing.view.domConverter.mapViewToDom( viewImg.parent );\n\n\t\t\t\t\t\tif ( !domFigure ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst originalDisplay = domFigure.style.display;\n\n\t\t\t\t\t\tdomFigure.style.display = 'none';\n\n\t\t\t\t\t\t// Make sure this line will never be removed during minification for having \"no effect\".\n\t\t\t\t\t\tdomFigure._ckHack = domFigure.offsetHeight;\n\n\t\t\t\t\t\tdomFigure.style.display = originalDisplay;\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\t\t\twriter.setAttribute( 'uploadStatus', 'uploading', imageElement );\n\t\t\t\t} );\n\n\t\t\t\treturn promise;\n\t\t\t} )\n\t\t\t.then( data => {\n\t\t\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\t\t\twriter.setAttributes( { uploadStatus: 'complete', src: data.default }, imageElement );\n\t\t\t\t\tthis._parseAndSetSrcsetAttributeOnImage( data, imageElement, writer );\n\t\t\t\t} );\n\n\t\t\t\tclean();\n\t\t\t} )\n\t\t\t.catch( error => {\n\t\t\t\t// If status is not 'error' nor 'aborted' - throw error because it means that something else went wrong,\n\t\t\t\t// it might be generic error and it would be real pain to find what is going on.\n\t\t\t\tif ( loader.status !== 'error' && loader.status !== 'aborted' ) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Might be 'aborted'.\n\t\t\t\tif ( loader.status == 'error' && error ) {\n\t\t\t\t\tnotification.showWarning( error, {\n\t\t\t\t\t\ttitle: t( 'Upload failed' ),\n\t\t\t\t\t\tnamespace: 'upload'\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tclean();\n\n\t\t\t\t// Permanently remove image from insertion batch.\n\t\t\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\t\t\twriter.remove( imageElement );\n\t\t\t\t} );\n\t\t\t} );\n\n\t\tfunction clean() {\n\t\t\tmodel.enqueueChange( 'transparent', writer => {\n\t\t\t\twriter.removeAttribute( 'uploadId', imageElement );\n\t\t\t\twriter.removeAttribute( 'uploadStatus', imageElement );\n\t\t\t} );\n\n\t\t\tfileRepository.destroyLoader( loader );\n\t\t}\n\t}\n\n\t/**\n\t * Creates the `srcset` attribute based on a given file upload response and sets it as an attribute to a specific image element.\n\t *\n\t * @protected\n\t * @param {Object} data Data object from which `srcset` will be created.\n\t * @param {module:engine/model/element~Element} image The image element on which the `srcset` attribute will be set.\n\t * @param {module:engine/model/writer~Writer} writer\n\t */\n\t_parseAndSetSrcsetAttributeOnImage( data, image, writer ) {\n\t\t// Srcset attribute for responsive images support.\n\t\tlet maxWidth = 0;\n\n\t\tconst srcsetAttribute = Object.keys( data )\n\t\t// Filter out keys that are not integers.\n\t\t\t.filter( key => {\n\t\t\t\tconst width = parseInt( key, 10 );\n\n\t\t\t\tif ( !isNaN( width ) ) {\n\t\t\t\t\tmaxWidth = Math.max( maxWidth, width );\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} )\n\n\t\t\t// Convert each key to srcset entry.\n\t\t\t.map( key => `${ data[ key ] } ${ key }w` )\n\n\t\t\t// Join all entries.\n\t\t\t.join( ', ' );\n\n\t\tif ( srcsetAttribute != '' ) {\n\t\t\twriter.setAttribute( 'srcset', {\n\t\t\t\tdata: srcsetAttribute,\n\t\t\t\twidth: maxWidth\n\t\t\t}, image );\n\t\t}\n\t}\n}\n\n// Returns `true` if non-empty `text/html` is included in the data transfer.\n//\n// @param {module:clipboard/datatransfer~DataTransfer} dataTransfer\n// @returns {Boolean}\nexport function isHtmlIncluded( dataTransfer ) {\n\treturn Array.from( dataTransfer.types ).includes( 'text/html' ) && dataTransfer.getData( 'text/html' ) !== '';\n}\n\nfunction getImagesFromChangeItem( editor, item ) {\n\treturn Array.from( editor.model.createRangeOn( item ) )\n\t\t.filter( value => value.item.is( 'image' ) )\n\t\t.map( value => value.item );\n}\n"]}]}