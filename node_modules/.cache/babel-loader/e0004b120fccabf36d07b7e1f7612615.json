{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-table/src/converters/table-cell-paragraph-post-fixer.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-table/src/converters/table-cell-paragraph-post-fixer.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHRhYmxlL2NvbnZlcnRlcnMvdGFibGUtY2VsbC1wYXJhZ3JhcGgtcG9zdC1maXhlcgogKi8KCi8qKgogKiBJbmplY3RzIGEgdGFibGUgY2VsbCBwb3N0LWZpeGVyIGludG8gdGhlIG1vZGVsIHdoaWNoIGluc2VydHMgYHBhcmFncmFwaGAgZWxlbWVudCBpbnRvIGVtcHR5IHRhYmxlIGNlbGxzLgogKgogKiBBIHRhYmxlIGNlbGwgbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSBibG9jayBlbGVtZW50IGFzIGEgY2hpbGQuIEFuIGVtcHR5IHRhYmxlIGNlbGwgd2lsbCBoYXZlIGVtcHR5IGBwYXJhZ3JhcGhgIGFzIGEgY2hpbGQuCiAqCiAqCQk8dGFibGU+CiAqCQkJPHRhYmxlUm93PgogKgkJCQk8dGFibGVDZWxsPjwvdGFibGVDZWxsPgogKgkJCTwvdGFibGVSb3c+CiAqCQk8L3RhYmxlPgogKgogKiBXaWxsIGJlIGZpeGVkIHRvOgogKgogKgkJPHRhYmxlPgogKgkJCTx0YWJsZVJvdz4KICoJCQkJPHRhYmxlQ2VsbD48cGFyYWdyYXBoPjwvcGFyYWdyYXBoPjwvdGFibGVDZWxsPgogKgkJCTwvdGFibGVSb3c+CiAqCQk8L3RhYmxlPgogKgogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvbW9kZWx+TW9kZWx9IG1vZGVsCiAqLwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbmplY3RUYWJsZUNlbGxQYXJhZ3JhcGhQb3N0Rml4ZXIobW9kZWwpIHsKICBtb2RlbC5kb2N1bWVudC5yZWdpc3RlclBvc3RGaXhlcih3cml0ZXIgPT4gdGFibGVDZWxsQ29udGVudHNQb3N0Rml4ZXIod3JpdGVyLCBtb2RlbCkpOwp9IC8vIFRoZSB0YWJsZSBjZWxsIGNvbnRlbnRzIHBvc3QtZml4ZXIuCi8vCi8vIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC93cml0ZXJ+V3JpdGVyfSB3cml0ZXIKLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL21vZGVsfk1vZGVsfSBtb2RlbAoKZnVuY3Rpb24gdGFibGVDZWxsQ29udGVudHNQb3N0Rml4ZXIod3JpdGVyLCBtb2RlbCkgewogIGNvbnN0IGNoYW5nZXMgPSBtb2RlbC5kb2N1bWVudC5kaWZmZXIuZ2V0Q2hhbmdlcygpOwogIGxldCB3YXNGaXhlZCA9IGZhbHNlOwoKICBmb3IgKGNvbnN0IGVudHJ5IG9mIGNoYW5nZXMpIHsKICAgIGlmIChlbnRyeS50eXBlID09ICdpbnNlcnQnICYmIGVudHJ5Lm5hbWUgPT0gJ3RhYmxlJykgewogICAgICB3YXNGaXhlZCA9IGZpeFRhYmxlKGVudHJ5LnBvc2l0aW9uLm5vZGVBZnRlciwgd3JpdGVyKSB8fCB3YXNGaXhlZDsKICAgIH0KCiAgICBpZiAoZW50cnkudHlwZSA9PSAnaW5zZXJ0JyAmJiBlbnRyeS5uYW1lID09ICd0YWJsZVJvdycpIHsKICAgICAgd2FzRml4ZWQgPSBmaXhUYWJsZVJvdyhlbnRyeS5wb3NpdGlvbi5ub2RlQWZ0ZXIsIHdyaXRlcikgfHwgd2FzRml4ZWQ7CiAgICB9CgogICAgaWYgKGVudHJ5LnR5cGUgPT0gJ2luc2VydCcgJiYgZW50cnkubmFtZSA9PSAndGFibGVDZWxsJykgewogICAgICB3YXNGaXhlZCA9IGZpeFRhYmxlQ2VsbENvbnRlbnQoZW50cnkucG9zaXRpb24ubm9kZUFmdGVyLCB3cml0ZXIpIHx8IHdhc0ZpeGVkOwogICAgfQoKICAgIGlmIChjaGVja1RhYmxlQ2VsbENoYW5nZShlbnRyeSkpIHsKICAgICAgd2FzRml4ZWQgPSBmaXhUYWJsZUNlbGxDb250ZW50KGVudHJ5LnBvc2l0aW9uLnBhcmVudCwgd3JpdGVyKSB8fCB3YXNGaXhlZDsKICAgIH0KICB9CgogIHJldHVybiB3YXNGaXhlZDsKfSAvLyBGaXhlcyBhbGwgdGFibGUgY2VsbHMgaW4gYSB0YWJsZS4KLy8KLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL2VsZW1lbnR+RWxlbWVudH0gdGFibGUKLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL3dyaXRlcn5Xcml0ZXJ9IHdyaXRlcgoKCmZ1bmN0aW9uIGZpeFRhYmxlKHRhYmxlLCB3cml0ZXIpIHsKICBsZXQgd2FzRml4ZWQgPSBmYWxzZTsKCiAgZm9yIChjb25zdCByb3cgb2YgdGFibGUuZ2V0Q2hpbGRyZW4oKSkgewogICAgd2FzRml4ZWQgPSBmaXhUYWJsZVJvdyhyb3csIHdyaXRlcikgfHwgd2FzRml4ZWQ7CiAgfQoKICByZXR1cm4gd2FzRml4ZWQ7Cn0gLy8gRml4ZXMgYWxsIHRhYmxlIGNlbGxzIGluIGEgdGFibGUgcm93LgovLwovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvZWxlbWVudH5FbGVtZW50fSB0YWJsZVJvdwovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvd3JpdGVyfldyaXRlcn0gd3JpdGVyCgoKZnVuY3Rpb24gZml4VGFibGVSb3codGFibGVSb3csIHdyaXRlcikgewogIGxldCB3YXNGaXhlZCA9IGZhbHNlOwoKICBmb3IgKGNvbnN0IHRhYmxlQ2VsbCBvZiB0YWJsZVJvdy5nZXRDaGlsZHJlbigpKSB7CiAgICB3YXNGaXhlZCA9IGZpeFRhYmxlQ2VsbENvbnRlbnQodGFibGVDZWxsLCB3cml0ZXIpIHx8IHdhc0ZpeGVkOwogIH0KCiAgcmV0dXJuIHdhc0ZpeGVkOwp9IC8vIEZpeGVzIGFsbCB0YWJsZSBjZWxsIGNvbnRlbnQgYnk6Ci8vIC0gYWRkaW5nIHBhcmFncmFwaCB0byBhIHRhYmxlIGNlbGwgd2l0aG91dCBhbnkgY2hpbGQuCi8vIC0gd3JhcHBpbmcgZGlyZWN0ICR0ZXh0IGluIDxwYXJhZ3JhcGg+LgovLwovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvZWxlbWVudH5FbGVtZW50fSB0YWJsZQovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvd3JpdGVyfldyaXRlcn0gd3JpdGVyCi8vIEByZXR1cm5zIHtCb29sZWFufQoKCmZ1bmN0aW9uIGZpeFRhYmxlQ2VsbENvbnRlbnQodGFibGVDZWxsLCB3cml0ZXIpIHsKICAvLyBJbnNlcnQgcGFyYWdyYXBoIHRvIGFuIGVtcHR5IHRhYmxlIGNlbGwuCiAgaWYgKHRhYmxlQ2VsbC5jaGlsZENvdW50ID09IDApIHsKICAgIHdyaXRlci5pbnNlcnRFbGVtZW50KCdwYXJhZ3JhcGgnLCB0YWJsZUNlbGwpOwogICAgcmV0dXJuIHRydWU7CiAgfSAvLyBDaGVjayB0YWJsZSBjZWxsIGNoaWxkcmVuIGZvciBkaXJlY3RseSBwbGFjZWQgdGV4dCBub2Rlcy4KICAvLyBUZW1wb3Jhcnkgc29sdXRpb24uIFNlZSBodHRwczovL2dpdGh1Yi5jb20vY2tlZGl0b3IvY2tlZGl0b3I1L2lzc3Vlcy8xNDY0LgoKCiAgY29uc3QgdGV4dE5vZGVzID0gQXJyYXkuZnJvbSh0YWJsZUNlbGwuZ2V0Q2hpbGRyZW4oKSkuZmlsdGVyKGNoaWxkID0+IGNoaWxkLmlzKCd0ZXh0JykpOwoKICBmb3IgKGNvbnN0IGNoaWxkIG9mIHRleHROb2RlcykgewogICAgd3JpdGVyLndyYXAod3JpdGVyLmNyZWF0ZVJhbmdlT24oY2hpbGQpLCAncGFyYWdyYXBoJyk7CiAgfSAvLyBSZXR1cm4gdHJ1ZSB3aGVuIHRoZXJlIHdlcmUgdGV4dCBub2RlcyB0byBmaXguCgoKICByZXR1cm4gISF0ZXh0Tm9kZXMubGVuZ3RoOwp9IC8vIENoZWNrIGlmIGRpZmZlciBjaGFuZ2Ugc2hvdWxkIGZpeCB0YWJsZSBjZWxsLiBUaGlzIGhhcHBlbnMgb246Ci8vIC0gcmVtb3ZpbmcgY29udGVudCBmcm9tIHRhYmxlIGNlbGwgKGllIHRhYmxlQ2VsbCBjYW4gYmUgbGVmdCBlbXB0eSkuCi8vIC0gYWRkaW5nIHRleHQgbm9kZSBkaXJlY3RseSBpbnRvIGEgdGFibGUgY2VsbC4KLy8KLy8gQHBhcmFtIHtPYmplY3R9IGRpZmZlciBjaGFuZ2UgZW50cnkKLy8gQHJldHVybnMge0Jvb2xlYW59CgoKZnVuY3Rpb24gY2hlY2tUYWJsZUNlbGxDaGFuZ2UoZW50cnkpIHsKICBpZiAoIWVudHJ5LnBvc2l0aW9uIHx8ICFlbnRyeS5wb3NpdGlvbi5wYXJlbnQuaXMoJ3RhYmxlQ2VsbCcpKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICByZXR1cm4gZW50cnkudHlwZSA9PSAnaW5zZXJ0JyAmJiBlbnRyeS5uYW1lID09ICckdGV4dCcgfHwgZW50cnkudHlwZSA9PSAncmVtb3ZlJzsKfQ=="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-table/src/converters/table-cell-paragraph-post-fixer.js"],"names":["injectTableCellParagraphPostFixer","model","document","registerPostFixer","writer","tableCellContentsPostFixer","changes","differ","getChanges","wasFixed","entry","type","name","fixTable","position","nodeAfter","fixTableRow","fixTableCellContent","checkTableCellChange","parent","table","row","getChildren","tableRow","tableCell","childCount","insertElement","textNodes","Array","from","filter","child","is","wrap","createRangeOn","length"],"mappings":"AAAA;;;;;AAKA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;AAqBA,eAAe,SAASA,iCAAT,CAA4CC,KAA5C,EAAoD;AAClEA,EAAAA,KAAK,CAACC,QAAN,CAAeC,iBAAf,CAAkCC,MAAM,IAAIC,0BAA0B,CAAED,MAAF,EAAUH,KAAV,CAAtE;AACA,C,CAED;AACA;AACA;AACA;;AACA,SAASI,0BAAT,CAAqCD,MAArC,EAA6CH,KAA7C,EAAqD;AACpD,QAAMK,OAAO,GAAGL,KAAK,CAACC,QAAN,CAAeK,MAAf,CAAsBC,UAAtB,EAAhB;AAEA,MAAIC,QAAQ,GAAG,KAAf;;AAEA,OAAM,MAAMC,KAAZ,IAAqBJ,OAArB,EAA+B;AAC9B,QAAKI,KAAK,CAACC,IAAN,IAAc,QAAd,IAA0BD,KAAK,CAACE,IAAN,IAAc,OAA7C,EAAuD;AACtDH,MAAAA,QAAQ,GAAGI,QAAQ,CAAEH,KAAK,CAACI,QAAN,CAAeC,SAAjB,EAA4BX,MAA5B,CAAR,IAAgDK,QAA3D;AACA;;AAED,QAAKC,KAAK,CAACC,IAAN,IAAc,QAAd,IAA0BD,KAAK,CAACE,IAAN,IAAc,UAA7C,EAA0D;AACzDH,MAAAA,QAAQ,GAAGO,WAAW,CAAEN,KAAK,CAACI,QAAN,CAAeC,SAAjB,EAA4BX,MAA5B,CAAX,IAAmDK,QAA9D;AACA;;AAED,QAAKC,KAAK,CAACC,IAAN,IAAc,QAAd,IAA0BD,KAAK,CAACE,IAAN,IAAc,WAA7C,EAA2D;AAC1DH,MAAAA,QAAQ,GAAGQ,mBAAmB,CAAEP,KAAK,CAACI,QAAN,CAAeC,SAAjB,EAA4BX,MAA5B,CAAnB,IAA2DK,QAAtE;AACA;;AAED,QAAKS,oBAAoB,CAAER,KAAF,CAAzB,EAAqC;AACpCD,MAAAA,QAAQ,GAAGQ,mBAAmB,CAAEP,KAAK,CAACI,QAAN,CAAeK,MAAjB,EAAyBf,MAAzB,CAAnB,IAAwDK,QAAnE;AACA;AACD;;AAED,SAAOA,QAAP;AACA,C,CAED;AACA;AACA;AACA;;;AACA,SAASI,QAAT,CAAmBO,KAAnB,EAA0BhB,MAA1B,EAAmC;AAClC,MAAIK,QAAQ,GAAG,KAAf;;AAEA,OAAM,MAAMY,GAAZ,IAAmBD,KAAK,CAACE,WAAN,EAAnB,EAAyC;AACxCb,IAAAA,QAAQ,GAAGO,WAAW,CAAEK,GAAF,EAAOjB,MAAP,CAAX,IAA8BK,QAAzC;AACA;;AAED,SAAOA,QAAP;AACA,C,CAED;AACA;AACA;AACA;;;AACA,SAASO,WAAT,CAAsBO,QAAtB,EAAgCnB,MAAhC,EAAyC;AACxC,MAAIK,QAAQ,GAAG,KAAf;;AAEA,OAAM,MAAMe,SAAZ,IAAyBD,QAAQ,CAACD,WAAT,EAAzB,EAAkD;AACjDb,IAAAA,QAAQ,GAAGQ,mBAAmB,CAAEO,SAAF,EAAapB,MAAb,CAAnB,IAA4CK,QAAvD;AACA;;AAED,SAAOA,QAAP;AACA,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,mBAAT,CAA8BO,SAA9B,EAAyCpB,MAAzC,EAAkD;AACjD;AACA,MAAKoB,SAAS,CAACC,UAAV,IAAwB,CAA7B,EAAiC;AAChCrB,IAAAA,MAAM,CAACsB,aAAP,CAAsB,WAAtB,EAAmCF,SAAnC;AAEA,WAAO,IAAP;AACA,GANgD,CAQjD;AACA;;;AACA,QAAMG,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAYL,SAAS,CAACF,WAAV,EAAZ,EAAsCQ,MAAtC,CAA8CC,KAAK,IAAIA,KAAK,CAACC,EAAN,CAAU,MAAV,CAAvD,CAAlB;;AAEA,OAAM,MAAMD,KAAZ,IAAqBJ,SAArB,EAAiC;AAChCvB,IAAAA,MAAM,CAAC6B,IAAP,CAAa7B,MAAM,CAAC8B,aAAP,CAAsBH,KAAtB,CAAb,EAA4C,WAA5C;AACA,GAdgD,CAgBjD;;;AACA,SAAO,CAAC,CAACJ,SAAS,CAACQ,MAAnB;AACA,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASjB,oBAAT,CAA+BR,KAA/B,EAAuC;AACtC,MAAK,CAACA,KAAK,CAACI,QAAP,IAAmB,CAACJ,KAAK,CAACI,QAAN,CAAeK,MAAf,CAAsBa,EAAtB,CAA0B,WAA1B,CAAzB,EAAmE;AAClE,WAAO,KAAP;AACA;;AAED,SAAOtB,KAAK,CAACC,IAAN,IAAc,QAAd,IAA0BD,KAAK,CAACE,IAAN,IAAc,OAAxC,IAAmDF,KAAK,CAACC,IAAN,IAAc,QAAxE;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/table-cell-paragraph-post-fixer\n */\n\n/**\n * Injects a table cell post-fixer into the model which inserts `paragraph` element into empty table cells.\n *\n * A table cell must contain at least one block element as a child. An empty table cell will have empty `paragraph` as a child.\n *\n *\t\t<table>\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell></tableCell>\n *\t\t\t</tableRow>\n *\t\t</table>\n *\n * Will be fixed to:\n *\n *\t\t<table>\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell><paragraph></paragraph></tableCell>\n *\t\t\t</tableRow>\n *\t\t</table>\n *\n * @param {module:engine/model/model~Model} model\n */\nexport default function injectTableCellParagraphPostFixer( model ) {\n\tmodel.document.registerPostFixer( writer => tableCellContentsPostFixer( writer, model ) );\n}\n\n// The table cell contents post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\nfunction tableCellContentsPostFixer( writer, model ) {\n\tconst changes = model.document.differ.getChanges();\n\n\tlet wasFixed = false;\n\n\tfor ( const entry of changes ) {\n\t\tif ( entry.type == 'insert' && entry.name == 'table' ) {\n\t\t\twasFixed = fixTable( entry.position.nodeAfter, writer ) || wasFixed;\n\t\t}\n\n\t\tif ( entry.type == 'insert' && entry.name == 'tableRow' ) {\n\t\t\twasFixed = fixTableRow( entry.position.nodeAfter, writer ) || wasFixed;\n\t\t}\n\n\t\tif ( entry.type == 'insert' && entry.name == 'tableCell' ) {\n\t\t\twasFixed = fixTableCellContent( entry.position.nodeAfter, writer ) || wasFixed;\n\t\t}\n\n\t\tif ( checkTableCellChange( entry ) ) {\n\t\t\twasFixed = fixTableCellContent( entry.position.parent, writer ) || wasFixed;\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes all table cells in a table.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\nfunction fixTable( table, writer ) {\n\tlet wasFixed = false;\n\n\tfor ( const row of table.getChildren() ) {\n\t\twasFixed = fixTableRow( row, writer ) || wasFixed;\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes all table cells in a table row.\n//\n// @param {module:engine/model/element~Element} tableRow\n// @param {module:engine/model/writer~Writer} writer\nfunction fixTableRow( tableRow, writer ) {\n\tlet wasFixed = false;\n\n\tfor ( const tableCell of tableRow.getChildren() ) {\n\t\twasFixed = fixTableCellContent( tableCell, writer ) || wasFixed;\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes all table cell content by:\n// - adding paragraph to a table cell without any child.\n// - wrapping direct $text in <paragraph>.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\n// @returns {Boolean}\nfunction fixTableCellContent( tableCell, writer ) {\n\t// Insert paragraph to an empty table cell.\n\tif ( tableCell.childCount == 0 ) {\n\t\twriter.insertElement( 'paragraph', tableCell );\n\n\t\treturn true;\n\t}\n\n\t// Check table cell children for directly placed text nodes.\n\t// Temporary solution. See https://github.com/ckeditor/ckeditor5/issues/1464.\n\tconst textNodes = Array.from( tableCell.getChildren() ).filter( child => child.is( 'text' ) );\n\n\tfor ( const child of textNodes ) {\n\t\twriter.wrap( writer.createRangeOn( child ), 'paragraph' );\n\t}\n\n\t// Return true when there were text nodes to fix.\n\treturn !!textNodes.length;\n}\n\n// Check if differ change should fix table cell. This happens on:\n// - removing content from table cell (ie tableCell can be left empty).\n// - adding text node directly into a table cell.\n//\n// @param {Object} differ change entry\n// @returns {Boolean}\nfunction checkTableCellChange( entry ) {\n\tif ( !entry.position || !entry.position.parent.is( 'tableCell' ) ) {\n\t\treturn false;\n\t}\n\n\treturn entry.type == 'insert' && entry.name == '$text' || entry.type == 'remove';\n}\n"]}]}