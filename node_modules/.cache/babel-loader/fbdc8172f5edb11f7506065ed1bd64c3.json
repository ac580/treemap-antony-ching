{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHVpL3BhbmVsL2JhbGxvb24vY29udGV4dHVhbGJhbGxvb24KICovCmltcG9ydCBQbHVnaW4gZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS1jb3JlL3NyYy9wbHVnaW4nOwppbXBvcnQgQmFsbG9vblBhbmVsVmlldyBmcm9tICcuL2JhbGxvb25wYW5lbHZpZXcnOwppbXBvcnQgVmlldyBmcm9tICcuLi8uLi92aWV3JzsKaW1wb3J0IEJ1dHRvblZpZXcgZnJvbSAnLi4vLi4vYnV0dG9uL2J1dHRvbnZpZXcnOwppbXBvcnQgQ0tFZGl0b3JFcnJvciBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9ja2VkaXRvcmVycm9yJzsKaW1wb3J0IEZvY3VzVHJhY2tlciBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9mb2N1c3RyYWNrZXInOwppbXBvcnQgdG9Vbml0IGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2RvbS90b3VuaXQnOwppbXBvcnQgUmVjdCBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9kb20vcmVjdCc7CmltcG9ydCBwcmV2SWNvbiBmcm9tICcuLi8uLi8uLi90aGVtZS9pY29ucy9wcmV2aW91cy1hcnJvdy5zdmcnOwppbXBvcnQgbmV4dEljb24gZnJvbSAnLi4vLi4vLi4vdGhlbWUvaWNvbnMvbmV4dC1hcnJvdy5zdmcnOwppbXBvcnQgJy4uLy4uLy4uL3RoZW1lL2NvbXBvbmVudHMvcGFuZWwvYmFsbG9vbnJvdGF0b3IuY3NzJzsKaW1wb3J0ICcuLi8uLi8uLi90aGVtZS9jb21wb25lbnRzL3BhbmVsL2Zha2VwYW5lbC5jc3MnOwpjb25zdCB0b1B4ID0gdG9Vbml0KCdweCcpOwovKioKICogUHJvdmlkZXMgdGhlIGNvbW1vbiBjb250ZXh0dWFsIGJhbGxvb24gZm9yIHRoZSBlZGl0b3IuCiAqCiAqIFRoZSByb2xlIG9mIHRoaXMgcGx1Z2luIGlzIHRvIHVuaWZ5IHRoZSBjb250ZXh0dWFsIGJhbGxvb25zIGxvZ2ljLCBzaW1wbGlmeSB2aWV3cyBtYW5hZ2VtZW50IGFuZCBoZWxwCiAqIGF2b2lkIHRoZSB1bm5lY2Vzc2FyeSBjb21wbGV4aXR5IG9mIGhhbmRsaW5nIG11bHRpcGxlIHtAbGluayBtb2R1bGU6dWkvcGFuZWwvYmFsbG9vbi9iYWxsb29ucGFuZWx2aWV3fkJhbGxvb25QYW5lbFZpZXd9CiAqIGluc3RhbmNlcyBpbiB0aGUgZWRpdG9yLgogKgogKiBUaGlzIHBsdWdpbiBhbGxvd3MgZm9yIGNyZWF0aW5nIHNpbmdsZSBvciBtdWx0aXBsZSBwYW5lbCBzdGFja3MuCiAqCiAqIEVhY2ggc3RhY2sgbWF5IGhhdmUgbXVsdGlwbGUgdmlld3MsIHdpdGggdGhlIG9uZSBvbiB0aGUgdG9wIGJlaW5nIHZpc2libGUuIFdoZW4gdGhlIHZpc2libGUgdmlldyBpcyByZW1vdmVkIGZyb20gdGhlIHN0YWNrLAogKiB0aGUgcHJldmlvdXMgdmlldyBiZWNvbWVzIHZpc2libGUuCiAqCiAqIEl0IG1pZ2h0IGJlIHVzZWZ1bCB0byBpbXBsZW1lbnQgbmVzdGVkIG5hdmlnYXRpb24gaW4gYSBiYWxsb29uLiBGb3IgaW5zdGFuY2UsIGEgdG9vbGJhciB2aWV3IG1heSBjb250YWluIGEgbGluayBidXR0b24uCiAqIFdoZW4geW91IGNsaWNrIGl0LCBhIGxpbmsgdmlldyAod2hpY2ggbGV0cyB5b3Ugc2V0IHRoZSBVUkwpIGlzIGNyZWF0ZWQgYW5kIHB1dCBvbiB0b3Agb2YgdGhlIHRvb2xiYXIgdmlldywgc28gdGhlIGxpbmsgcGFuZWwKICogaXMgZGlzcGxheWVkLiBXaGVuIHlvdSBmaW5pc2ggZWRpdGluZyB0aGUgbGluayBhbmQgY2xvc2UgKHJlbW92ZSkgdGhlIGxpbmsgdmlldywgdGhlIHRvb2xiYXIgdmlldyBpcyB2aXNpYmxlIGFnYWluLgogKgogKiBIb3dldmVyLCB0aGVyZSBhcmUgY2FzZXMgd2hlbiB0aGVyZSBhcmUgbXVsdGlwbGUgaW5kZXBlbmRlbnQgYmFsbG9vbnMgdG8gYmUgZGlzcGxheWVkLCBmb3IgaW5zdGFuY2UsIGlmIHRoZSBzZWxlY3Rpb24KICogaXMgaW5zaWRlIHR3byBpbmxpbmUgY29tbWVudHMgYXQgdGhlIHNhbWUgdGltZS4gRm9yIHN1Y2ggY2FzZXMsIHlvdSBjYW4gY3JlYXRlIHR3byBpbmRlcGVuZGVudCBwYW5lbCBzdGFja3MuCiAqIFRoZSBjb250ZXh0dWFsIGJhbGxvb24gcGx1Z2luIHdpbGwgY3JlYXRlIGEgbmF2aWdhdGlvbiBiYXIgdG8gbGV0IHRoZSB1c2VycyBzd2l0Y2ggYmV0d2VlbiB0aGVzZSBwYW5lbCBzdGFja3MgdXNpbmcgdGhlICJOZXh0IgogKiBhbmQgIlByZXZpb3VzIiBidXR0b25zLgogKgogKiBJZiB0aGVyZSBhcmUgbm8gdmlld3MgaW4gdGhlIGN1cnJlbnQgc3RhY2ssIHRoZSBiYWxsb29uIHBhbmVsIHdpbGwgdHJ5IHRvIHN3aXRjaCB0byB0aGUgbmV4dCBzdGFjay4gSWYgdGhlcmUgYXJlIG5vCiAqIHBhbmVscyBpbiBhbnkgc3RhY2ssIHRoZSBiYWxsb29uIHBhbmVsIHdpbGwgYmUgaGlkZGVuLgogKgogKiAqKk5vdGUqKjogVG8gZm9yY2UgdGhlIGJhbGxvb24gcGFuZWwgdG8gc2hvdyBvbmx5IG9uZSB2aWV3LCBldmVuIGlmIHRoZXJlIGFyZSBvdGhlciBzdGFja3MsIHVzZSB0aGUgYHNpbmdsZVZpZXdNb2RlPXRydWVgIG9wdGlvbgogKiB3aGVuIHtAbGluayBtb2R1bGU6dWkvcGFuZWwvYmFsbG9vbi9jb250ZXh0dWFsYmFsbG9vbn5Db250ZXh0dWFsQmFsbG9vbiNhZGQgYWRkaW5nfSBhIHZpZXcgdG8gYSBwYW5lbC4KICoKICogRnJvbSB0aGUgaW1wbGVtZW50YXRpb24gcG9pbnQgb2YgdmlldywgdGhlIGNvbnRleHR1YWwgYmFsbG9uIHBsdWdpbiBpcyByZXVzaW5nIGEgc2luZ2xlCiAqIHtAbGluayBtb2R1bGU6dWkvcGFuZWwvYmFsbG9vbi9iYWxsb29ucGFuZWx2aWV3fkJhbGxvb25QYW5lbFZpZXd9IGluc3RhbmNlIHRvIGRpc3BsYXkgbXVsdGlwbGUgY29udGV4dHVhbCBiYWxsb29uCiAqIHBhbmVscyBpbiB0aGUgZWRpdG9yLiBJdCBhbHNvIGNyZWF0ZXMgYSBzcGVjaWFsIHtAbGluayBtb2R1bGU6dWkvcGFuZWwvYmFsbG9vbi9jb250ZXh0dWFsYmFsbG9vbn5Sb3RhdG9yVmlldyByb3RhdG9yIHZpZXd9LAogKiB1c2VkIHRvIG1hbmFnZSBtdWx0aXBsZSBwYW5lbCBzdGFja3MuIFJvdGF0b3IgdmlldyBpcyBhIGNoaWxkIG9mIHRoZSBiYWxsb29uIHBhbmVsIHZpZXcgYW5kIHRoZSBwYXJlbnQgb2YgdGhlIHNwZWNpZmljCiAqIHZpZXcgeW91IHdhbnQgdG8gZGlzcGxheS4gSWYgdGhlcmUgaXMgbW9yZSB0aGFuIG9uZSBwYW5lbCBzdGFjayB0byBiZSBkaXNwbGF5ZWQsIHRoZSByb3RhdG9yIHZpZXcgd2lsbCBhZGQgYQogKiBuYXZpZ2F0aW9uIGJhci4gSWYgdGhlcmUgaXMgb25seSBvbmUgc3RhY2ssIHRoZSByb3RhdG9yIHZpZXcgaXMgdHJhbnNwYXJlbnQgKGl0IGRvZXMgbm90IGFkZCBhbnkgVUkgZWxlbWVudHMpLgogKgogKiBAZXh0ZW5kcyBtb2R1bGU6Y29yZS9wbHVnaW5+UGx1Z2luCiAqLwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29udGV4dHVhbEJhbGxvb24gZXh0ZW5kcyBQbHVnaW4gewogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgc3RhdGljIGdldCBwbHVnaW5OYW1lKCkgewogICAgcmV0dXJuICdDb250ZXh0dWFsQmFsbG9vbic7CiAgfQogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCgoKICBjb25zdHJ1Y3RvcihlZGl0b3IpIHsKICAgIHN1cGVyKGVkaXRvcik7CiAgICAvKioKICAgICAqIFRoZSB7QGxpbmsgbW9kdWxlOnV0aWxzL2RvbS9wb3NpdGlvbn5PcHRpb25zI2xpbWl0ZXIgcG9zaXRpb24gbGltaXRlcn0KICAgICAqIGZvciB0aGUge0BsaW5rICN2aWV3IGJhbGxvb259LCB1c2VkIHdoZW4gbm8gYGxpbWl0ZXJgIGhhcyBiZWVuIHBhc3NlZCBpbnRvIHtAbGluayAjYWRkfQogICAgICogb3Ige0BsaW5rICN1cGRhdGVQb3NpdGlvbn0uCiAgICAgKgogICAgICogQnkgZGVmYXVsdCwgYSBmdW5jdGlvbiB0aGF0IG9idGFpbnMgdGhlIGZhcnRoZXN0IERPTQogICAgICoge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9yb290ZWRpdGFibGVlbGVtZW50flJvb3RFZGl0YWJsZUVsZW1lbnR9CiAgICAgKiBvZiB0aGUge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9kb2N1bWVudH5Eb2N1bWVudCNzZWxlY3Rpb259LgogICAgICoKICAgICAqIEBtZW1iZXIge21vZHVsZTp1dGlscy9kb20vcG9zaXRpb25+T3B0aW9ucyNsaW1pdGVyfSAjcG9zaXRpb25MaW1pdGVyCiAgICAgKi8KCiAgICB0aGlzLnBvc2l0aW9uTGltaXRlciA9ICgpID0+IHsKICAgICAgY29uc3QgdmlldyA9IHRoaXMuZWRpdG9yLmVkaXRpbmcudmlldzsKICAgICAgY29uc3Qgdmlld0RvY3VtZW50ID0gdmlldy5kb2N1bWVudDsKICAgICAgY29uc3QgZWRpdGFibGVFbGVtZW50ID0gdmlld0RvY3VtZW50LnNlbGVjdGlvbi5lZGl0YWJsZUVsZW1lbnQ7CgogICAgICBpZiAoZWRpdGFibGVFbGVtZW50KSB7CiAgICAgICAgcmV0dXJuIHZpZXcuZG9tQ29udmVydGVyLm1hcFZpZXdUb0RvbShlZGl0YWJsZUVsZW1lbnQucm9vdCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfTsKICAgIC8qKgogICAgICogVGhlIGN1cnJlbnRseSB2aXNpYmxlIHZpZXcgb3IgYG51bGxgIHdoZW4gdGhlcmUgYXJlIG5vIHZpZXdzIGluIGFueSBzdGFjay4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBvYnNlcnZhYmxlCiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dWkvdmlld35WaWV3fG51bGx9ICN2aXNpYmxlVmlldwogICAgICovCgoKICAgIHRoaXMuc2V0KCd2aXNpYmxlVmlldycsIG51bGwpOwogICAgLyoqCiAgICAgKiBUaGUgY29tbW9uIGJhbGxvb24gcGFuZWwgdmlldy4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBtZW1iZXIge21vZHVsZTp1aS9wYW5lbC9iYWxsb29uL2JhbGxvb25wYW5lbHZpZXd+QmFsbG9vblBhbmVsVmlld30gI3ZpZXcKICAgICAqLwoKICAgIHRoaXMudmlldyA9IG5ldyBCYWxsb29uUGFuZWxWaWV3KGVkaXRvci5sb2NhbGUpOwogICAgZWRpdG9yLnVpLnZpZXcuYm9keS5hZGQodGhpcy52aWV3KTsKICAgIGVkaXRvci51aS5mb2N1c1RyYWNrZXIuYWRkKHRoaXMudmlldy5lbGVtZW50KTsKICAgIC8qKgogICAgICogVGhlIG1hcCBvZiB2aWV3cyBhbmQgdGhlaXIgc3RhY2tzLgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKiBAdHlwZSB7TWFwLjxtb2R1bGU6dWkvdmlld35WaWV3LFNldD59CiAgICAgKi8KCiAgICB0aGlzLl92aWV3VG9TdGFjayA9IG5ldyBNYXAoKTsKICAgIC8qKgogICAgICogVGhlIG1hcCBvZiBJRHMgYW5kIHN0YWNrcy4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQHR5cGUge01hcC48U3RyaW5nLFNldD59CiAgICAgKi8KCiAgICB0aGlzLl9pZFRvU3RhY2sgPSBuZXcgTWFwKCk7CiAgICAvKioKICAgICAqIEEgdG90YWwgbnVtYmVyIG9mIGFsbCBzdGFja3MgaW4gdGhlIGJhbGxvb24uCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEByZWFkb25seQogICAgICogQG9ic2VydmFibGUKICAgICAqIEBtZW1iZXIge051bWJlcn0gI19udW1iZXJPZlN0YWNrcwogICAgICovCgogICAgdGhpcy5zZXQoJ19udW1iZXJPZlN0YWNrcycsIDApOwogICAgLyoqCiAgICAgKiBBIGZsYWcgdGhhdCBjb250cm9scyB0aGUgc2luZ2xlIHZpZXcgbW9kZS4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQHJlYWRvbmx5CiAgICAgKiBAb2JzZXJ2YWJsZQogICAgICogQG1lbWJlciB7Qm9vbGVhbn0gI19zaW5nbGVWaWV3TW9kZQogICAgICovCgogICAgdGhpcy5zZXQoJ19zaW5nbGVWaWV3TW9kZScsIGZhbHNlKTsKICAgIC8qKgogICAgICogUm90YXRvciB2aWV3IGVtYmVkZGVkIGluIHRoZSBjb250ZXh0dWFsIGJhbGxvb24uCiAgICAgKiBEaXNwbGF5cyB0aGUgY3VycmVudGx5IHZpc2libGUgdmlldyBpbiB0aGUgYmFsbG9vbiBhbmQgcHJvdmlkZXMgbmF2aWdhdGlvbiBmb3Igc3dpdGNoaW5nIHN0YWNrcy4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQHR5cGUge21vZHVsZTp1aS9wYW5lbC9iYWxsb29uL2NvbnRleHR1YWxiYWxsb29uflJvdGF0b3JWaWV3fQogICAgICovCgogICAgdGhpcy5fcm90YXRvclZpZXcgPSB0aGlzLl9jcmVhdGVSb3RhdG9yVmlldygpOwogICAgLyoqCiAgICAgKiBEaXNwbGF5cyBmYWtlIHBhbmVscyB1bmRlciB0aGUgYmFsbG9vbiBwYW5lbCB2aWV3IHdoZW4gbXVsdGlwbGUgc3RhY2tzIGFyZSBhZGRlZCB0byB0aGUgYmFsbG9vbi4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQHR5cGUge21vZHVsZTp1aS92aWV3flZpZXd9CiAgICAgKi8KCiAgICB0aGlzLl9mYWtlUGFuZWxzVmlldyA9IHRoaXMuX2NyZWF0ZUZha2VQYW5lbHNWaWV3KCk7CiAgfQogIC8qKgogICAqIFJldHVybnMgYHRydWVgIHdoZW4gdGhlIGdpdmVuIHZpZXcgaXMgaW4gb25lIG9mIHRoZSBzdGFja3MuIE90aGVyd2lzZSByZXR1cm5zIGBmYWxzZWAuCiAgICoKICAgKiBAcGFyYW0ge21vZHVsZTp1aS92aWV3flZpZXd9IHZpZXcKICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0KICAgKi8KCgogIGhhc1ZpZXcodmlldykgewogICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5fdmlld1RvU3RhY2sua2V5cygpKS5pbmNsdWRlcyh2aWV3KTsKICB9CiAgLyoqCiAgICogQWRkcyBhIG5ldyB2aWV3IHRvIHRoZSBzdGFjayBhbmQgbWFrZXMgaXQgdmlzaWJsZSBpZiB0aGUgY3VycmVudCBzdGFjayBpcyB2aXNpYmxlCiAgICogb3IgaXQgaXMgdGhlIGZpcnN0IHZpZXcgaW4gdGhlIGJhbGxvb24uCiAgICoKICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSBUaGUgY29uZmlndXJhdGlvbiBvZiB0aGUgdmlldy4KICAgKiBAcGFyYW0ge1N0cmluZ30gW2RhdGEuc3RhY2tJZD0nbWFpbiddIFRoZSBJRCBvZiB0aGUgc3RhY2sgdGhhdCB0aGUgdmlldyBpcyBhZGRlZCB0by4KICAgKiBAcGFyYW0ge21vZHVsZTp1aS92aWV3flZpZXd9IFtkYXRhLnZpZXddIFRoZSBjb250ZW50IG9mIHRoZSBiYWxsb29uLgogICAqIEBwYXJhbSB7bW9kdWxlOnV0aWxzL2RvbS9wb3NpdGlvbn5PcHRpb25zfSBbZGF0YS5wb3NpdGlvbl0gUG9zaXRpb25pbmcgb3B0aW9ucy4KICAgKiBAcGFyYW0ge1N0cmluZ30gW2RhdGEuYmFsbG9vbkNsYXNzTmFtZV0gQW4gYWRkaXRpb25hbCBDU1MgY2xhc3MgYWRkZWQgdG8gdGhlIHtAbGluayAjdmlldyBiYWxsb29ufSB3aGVuIHZpc2libGUuCiAgICogQHBhcmFtIHtCb29sZWFufSBbZGF0YS53aXRoQXJyb3c9dHJ1ZV0gV2hldGhlciB0aGUge0BsaW5rICN2aWV3IGJhbGxvb259IHNob3VsZCBiZSByZW5kZXJlZCB3aXRoIGFuIGFycm93LgogICAqIEBwYXJhbSB7Qm9vbGVhbn0gW2RhdGEuc2luZ2xlVmlld01vZGU9ZmFsc2VdIFdoZXRoZXIgdGhlIHZpZXcgc2hvdWxkIGJlIHRoZSBvbmx5IHZpc2libGUgdmlldyBldmVuIGlmIG90aGVyIHN0YWNrcyB3ZXJlIGFkZGVkLgogICAqLwoKCiAgYWRkKGRhdGEpIHsKICAgIGlmICh0aGlzLmhhc1ZpZXcoZGF0YS52aWV3KSkgewogICAgICAvKioKICAgICAgICogVHJ5aW5nIHRvIGFkZCBjb25maWd1cmF0aW9uIG9mIHRoZSBzYW1lIHZpZXcgbW9yZSB0aGFuIG9uY2UuCiAgICAgICAqCiAgICAgICAqIEBlcnJvciBjb250ZXh0dWFsYmFsbG9vbi1hZGQtdmlldy1leGlzdAogICAgICAgKi8KICAgICAgdGhyb3cgbmV3IENLRWRpdG9yRXJyb3IoJ2NvbnRleHR1YWxiYWxsb29uLWFkZC12aWV3LWV4aXN0OiBDYW5ub3QgYWRkIGNvbmZpZ3VyYXRpb24gb2YgdGhlIHNhbWUgdmlldyB0d2ljZS4nLCBbdGhpcywgZGF0YV0pOwogICAgfQoKICAgIGNvbnN0IHN0YWNrSWQgPSBkYXRhLnN0YWNrSWQgfHwgJ21haW4nOyAvLyBJZiBuZXcgc3RhY2sgaXMgYWRkZWQsIGNyZWF0ZXMgaXQgYW5kIHNob3cgdmlldyBmcm9tIHRoaXMgc3RhY2suCgogICAgaWYgKCF0aGlzLl9pZFRvU3RhY2suaGFzKHN0YWNrSWQpKSB7CiAgICAgIHRoaXMuX2lkVG9TdGFjay5zZXQoc3RhY2tJZCwgbmV3IE1hcChbW2RhdGEudmlldywgZGF0YV1dKSk7CgogICAgICB0aGlzLl92aWV3VG9TdGFjay5zZXQoZGF0YS52aWV3LCB0aGlzLl9pZFRvU3RhY2suZ2V0KHN0YWNrSWQpKTsKCiAgICAgIHRoaXMuX251bWJlck9mU3RhY2tzID0gdGhpcy5faWRUb1N0YWNrLnNpemU7CgogICAgICBpZiAoIXRoaXMuX3Zpc2libGVTdGFjayB8fCBkYXRhLnNpbmdsZVZpZXdNb2RlKSB7CiAgICAgICAgdGhpcy5zaG93U3RhY2soc3RhY2tJZCk7CiAgICAgIH0KCiAgICAgIHJldHVybjsKICAgIH0KCiAgICBjb25zdCBzdGFjayA9IHRoaXMuX2lkVG9TdGFjay5nZXQoc3RhY2tJZCk7CgogICAgaWYgKGRhdGEuc2luZ2xlVmlld01vZGUpIHsKICAgICAgdGhpcy5zaG93U3RhY2soc3RhY2tJZCk7CiAgICB9IC8vIEFkZCBuZXcgdmlldyB0byB0aGUgc3RhY2suCgoKICAgIHN0YWNrLnNldChkYXRhLnZpZXcsIGRhdGEpOwoKICAgIHRoaXMuX3ZpZXdUb1N0YWNrLnNldChkYXRhLnZpZXcsIHN0YWNrKTsgLy8gQW5kIGRpc3BsYXkgaXQgaWYgaXMgYWRkZWQgdG8gdGhlIGN1cnJlbnRseSB2aXNpYmxlIHN0YWNrLgoKCiAgICBpZiAoc3RhY2sgPT09IHRoaXMuX3Zpc2libGVTdGFjaykgewogICAgICB0aGlzLl9zaG93VmlldyhkYXRhKTsKICAgIH0KICB9CiAgLyoqCiAgICogUmVtb3ZlcyB0aGUgZ2l2ZW4gdmlldyBmcm9tIHRoZSBzdGFjay4gSWYgdGhlIHJlbW92ZWQgdmlldyB3YXMgdmlzaWJsZSwKICAgKiB0aGUgdmlldyBwcmVjZWRpbmcgaXQgaW4gdGhlIHN0YWNrIHdpbGwgYmVjb21lIHZpc2libGUgaW5zdGVhZC4KICAgKiBXaGVuIHRoZXJlIGlzIG5vIHZpZXcgaW4gdGhlIHN0YWNrLCB0aGUgbmV4dCBzdGFjayB3aWxsIGJlIGRpc3BsYXllZC4KICAgKiBXaGVuIHRoZXJlIGFyZSBubyBtb3JlIHN0YWNrcywgdGhlIGJhbGxvb24gd2lsbCBoaWRlLgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6dWkvdmlld35WaWV3fSB2aWV3IEEgdmlldyB0byBiZSByZW1vdmVkIGZyb20gdGhlIGJhbGxvb24uCiAgICovCgoKICByZW1vdmUodmlldykgewogICAgaWYgKCF0aGlzLmhhc1ZpZXcodmlldykpIHsKICAgICAgLyoqCiAgICAgICAqIFRyeWluZyB0byByZW1vdmUgdGhlIGNvbmZpZ3VyYXRpb24gb2YgdGhlIHZpZXcgbm90IGRlZmluZWQgaW4gdGhlIHN0YWNrLgogICAgICAgKgogICAgICAgKiBAZXJyb3IgY29udGV4dHVhbGJhbGxvb24tcmVtb3ZlLXZpZXctbm90LWV4aXN0CiAgICAgICAqLwogICAgICB0aHJvdyBuZXcgQ0tFZGl0b3JFcnJvcignY29udGV4dHVhbGJhbGxvb24tcmVtb3ZlLXZpZXctbm90LWV4aXN0OiBDYW5ub3QgcmVtb3ZlIHRoZSBjb25maWd1cmF0aW9uIG9mIGEgbm9uLWV4aXN0ZW50IHZpZXcuJywgW3RoaXMsIHZpZXddKTsKICAgIH0KCiAgICBjb25zdCBzdGFjayA9IHRoaXMuX3ZpZXdUb1N0YWNrLmdldCh2aWV3KTsKCiAgICBpZiAodGhpcy5fc2luZ2xlVmlld01vZGUgJiYgdGhpcy52aXNpYmxlVmlldyA9PT0gdmlldykgewogICAgICB0aGlzLl9zaW5nbGVWaWV3TW9kZSA9IGZhbHNlOwogICAgfSAvLyBXaGVuIHZpc2libGUgdmlldyB3aWxsIGJlIHJlbW92ZWQgd2UgbmVlZCB0byBzaG93IGEgcHJlY2VkaW5nIHZpZXcgb3IgbmV4dCBzdGFjawogICAgLy8gaWYgYSB2aWV3IGlzIHRoZSBvbmx5IHZpZXcgaW4gdGhlIHN0YWNrLgoKCiAgICBpZiAodGhpcy52aXNpYmxlVmlldyA9PT0gdmlldykgewogICAgICBpZiAoc3RhY2suc2l6ZSA9PT0gMSkgewogICAgICAgIGlmICh0aGlzLl9pZFRvU3RhY2suc2l6ZSA+IDEpIHsKICAgICAgICAgIHRoaXMuX3Nob3dOZXh0U3RhY2soKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy52aWV3LmhpZGUoKTsKICAgICAgICAgIHRoaXMudmlzaWJsZVZpZXcgPSBudWxsOwoKICAgICAgICAgIHRoaXMuX3JvdGF0b3JWaWV3LmhpZGVWaWV3KCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuX3Nob3dWaWV3KEFycmF5LmZyb20oc3RhY2sudmFsdWVzKCkpW3N0YWNrLnNpemUgLSAyXSk7CiAgICAgIH0KICAgIH0KCiAgICBpZiAoc3RhY2suc2l6ZSA9PT0gMSkgewogICAgICB0aGlzLl9pZFRvU3RhY2suZGVsZXRlKHRoaXMuX2dldFN0YWNrSWQoc3RhY2spKTsKCiAgICAgIHRoaXMuX251bWJlck9mU3RhY2tzID0gdGhpcy5faWRUb1N0YWNrLnNpemU7CiAgICB9IGVsc2UgewogICAgICBzdGFjay5kZWxldGUodmlldyk7CiAgICB9CgogICAgdGhpcy5fdmlld1RvU3RhY2suZGVsZXRlKHZpZXcpOwogIH0KICAvKioKICAgKiBVcGRhdGVzIHRoZSBwb3NpdGlvbiBvZiB0aGUgYmFsbG9vbiB1c2luZyB0aGUgcG9zaXRpb24gZGF0YSBvZiB0aGUgZmlyc3QgdmlzaWJsZSB2aWV3IGluIHRoZSBzdGFjay4KICAgKiBXaGVuIG5ldyBwb3NpdGlvbiBkYXRhIGlzIGdpdmVuLCB0aGUgcG9zaXRpb24gZGF0YSBvZiB0aGUgY3VycmVudGx5IHZpc2libGUgdmlldyB3aWxsIGJlIHVwZGF0ZWQuCiAgICoKICAgKiBAcGFyYW0ge21vZHVsZTp1dGlscy9kb20vcG9zaXRpb25+T3B0aW9uc30gW3Bvc2l0aW9uXSBwb3NpdGlvbiBvcHRpb25zLgogICAqLwoKCiAgdXBkYXRlUG9zaXRpb24ocG9zaXRpb24pIHsKICAgIGlmIChwb3NpdGlvbikgewogICAgICB0aGlzLl92aXNpYmxlU3RhY2suZ2V0KHRoaXMudmlzaWJsZVZpZXcpLnBvc2l0aW9uID0gcG9zaXRpb247CiAgICB9CgogICAgdGhpcy52aWV3LnBpbih0aGlzLl9nZXRCYWxsb29uUG9zaXRpb24oKSk7CgogICAgdGhpcy5fZmFrZVBhbmVsc1ZpZXcudXBkYXRlUG9zaXRpb24oKTsKICB9CiAgLyoqCiAgICogU2hvd3MgdGhlIGxhc3QgdmlldyBmcm9tIHRoZSBzdGFjayBvZiBhIGdpdmVuIElELgogICAqCiAgICogQHBhcmFtIHtTdHJpbmd9IGlkCiAgICovCgoKICBzaG93U3RhY2soaWQpIHsKICAgIHRoaXMudmlzaWJsZVN0YWNrID0gaWQ7CgogICAgY29uc3Qgc3RhY2sgPSB0aGlzLl9pZFRvU3RhY2suZ2V0KGlkKTsKCiAgICBpZiAoIXN0YWNrKSB7CiAgICAgIC8qKgogICAgICAgKiBUcnlpbmcgdG8gc2hvdyBhIHN0YWNrIHRoYXQgZG9lcyBub3QgZXhpc3QuCiAgICAgICAqCiAgICAgICAqIEBlcnJvciBjb250ZXh0dWFsYmFsbG9vbi1zaG93c3RhY2stc3RhY2stbm90LWV4aXN0CiAgICAgICAqLwogICAgICB0aHJvdyBuZXcgQ0tFZGl0b3JFcnJvcignY29udGV4dHVhbGJhbGxvb24tc2hvd3N0YWNrLXN0YWNrLW5vdC1leGlzdDogQ2Fubm90IHNob3cgYSBzdGFjayB0aGF0IGRvZXMgbm90IGV4aXN0LicsIHRoaXMpOwogICAgfQoKICAgIGlmICh0aGlzLl92aXNpYmxlU3RhY2sgPT09IHN0YWNrKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0aGlzLl9zaG93VmlldyhBcnJheS5mcm9tKHN0YWNrLnZhbHVlcygpKS5wb3AoKSk7CiAgfQogIC8qKgogICAqIFJldHVybnMgdGhlIHN0YWNrIG9mIHRoZSBjdXJyZW50bHkgdmlzaWJsZSB2aWV3LgogICAqCiAgICogQHByaXZhdGUKICAgKiBAdHlwZSB7U2V0fQogICAqLwoKCiAgZ2V0IF92aXNpYmxlU3RhY2soKSB7CiAgICByZXR1cm4gdGhpcy5fdmlld1RvU3RhY2suZ2V0KHRoaXMudmlzaWJsZVZpZXcpOwogIH0KICAvKioKICAgKiBSZXR1cm5zIHRoZSBJRCBvZiB0aGUgZ2l2ZW4gc3RhY2suCiAgICoKICAgKiBAcHJpdmF0ZQogICAqIEBwYXJhbSB7U2V0fSBzdGFjawogICAqIEByZXR1cm5zIHtTdHJpbmd9CiAgICovCgoKICBfZ2V0U3RhY2tJZChzdGFjaykgewogICAgY29uc3QgZW50cnkgPSBBcnJheS5mcm9tKHRoaXMuX2lkVG9TdGFjay5lbnRyaWVzKCkpLmZpbmQoZW50cnkgPT4gZW50cnlbMV0gPT09IHN0YWNrKTsKICAgIHJldHVybiBlbnRyeVswXTsKICB9CiAgLyoqCiAgICogU2hvd3MgdGhlIGxhc3QgdmlldyBmcm9tIHRoZSBuZXh0IHN0YWNrLgogICAqCiAgICogQHByaXZhdGUKICAgKi8KCgogIF9zaG93TmV4dFN0YWNrKCkgewogICAgY29uc3Qgc3RhY2tzID0gQXJyYXkuZnJvbSh0aGlzLl9pZFRvU3RhY2sudmFsdWVzKCkpOwogICAgbGV0IG5leHRJbmRleCA9IHN0YWNrcy5pbmRleE9mKHRoaXMuX3Zpc2libGVTdGFjaykgKyAxOwoKICAgIGlmICghc3RhY2tzW25leHRJbmRleF0pIHsKICAgICAgbmV4dEluZGV4ID0gMDsKICAgIH0KCiAgICB0aGlzLnNob3dTdGFjayh0aGlzLl9nZXRTdGFja0lkKHN0YWNrc1tuZXh0SW5kZXhdKSk7CiAgfQogIC8qKgogICAqIFNob3dzIHRoZSBsYXN0IHZpZXcgZnJvbSB0aGUgcHJldmlvdXMgc3RhY2suCiAgICoKICAgKiBAcHJpdmF0ZQogICAqLwoKCiAgX3Nob3dQcmV2U3RhY2soKSB7CiAgICBjb25zdCBzdGFja3MgPSBBcnJheS5mcm9tKHRoaXMuX2lkVG9TdGFjay52YWx1ZXMoKSk7CiAgICBsZXQgbmV4dEluZGV4ID0gc3RhY2tzLmluZGV4T2YodGhpcy5fdmlzaWJsZVN0YWNrKSAtIDE7CgogICAgaWYgKCFzdGFja3NbbmV4dEluZGV4XSkgewogICAgICBuZXh0SW5kZXggPSBzdGFja3MubGVuZ3RoIC0gMTsKICAgIH0KCiAgICB0aGlzLnNob3dTdGFjayh0aGlzLl9nZXRTdGFja0lkKHN0YWNrc1tuZXh0SW5kZXhdKSk7CiAgfQogIC8qKgogICAqIENyZWF0ZXMgYSByb3RhdG9yIHZpZXcuCiAgICoKICAgKiBAcHJpdmF0ZQogICAqIEByZXR1cm5zIHttb2R1bGU6dWkvcGFuZWwvYmFsbG9vbi9jb250ZXh0dWFsYmFsbG9vbn5Sb3RhdG9yVmlld30KICAgKi8KCgogIF9jcmVhdGVSb3RhdG9yVmlldygpIHsKICAgIGNvbnN0IHZpZXcgPSBuZXcgUm90YXRvclZpZXcodGhpcy5lZGl0b3IubG9jYWxlKTsKICAgIGNvbnN0IHQgPSB0aGlzLmVkaXRvci5sb2NhbGUudDsKICAgIHRoaXMudmlldy5jb250ZW50LmFkZCh2aWV3KTsgLy8gSGlkZSBuYXZpZ2F0aW9uIHdoZW4gdGhlcmUgaXMgb25seSBhIG9uZSBzdGFjayAmIG5vdCBpbiBzaW5nbGUgdmlldyBtb2RlLgoKICAgIHZpZXcuYmluZCgnaXNOYXZpZ2F0aW9uVmlzaWJsZScpLnRvKHRoaXMsICdfbnVtYmVyT2ZTdGFja3MnLCB0aGlzLCAnX3NpbmdsZVZpZXdNb2RlJywgKHZhbHVlLCBpc1NpbmdsZVZpZXdNb2RlKSA9PiB7CiAgICAgIHJldHVybiAhaXNTaW5nbGVWaWV3TW9kZSAmJiB2YWx1ZSA+IDE7CiAgICB9KTsgLy8gVXBkYXRlIGJhbGxvb24gcG9zaXRpb24gYWZ0ZXIgdG9nZ2xpbmcgbmF2aWdhdGlvbi4KCiAgICB2aWV3Lm9uKCdjaGFuZ2U6aXNOYXZpZ2F0aW9uVmlzaWJsZScsICgpID0+IHRoaXMudXBkYXRlUG9zaXRpb24oKSwgewogICAgICBwcmlvcml0eTogJ2xvdycKICAgIH0pOyAvLyBVcGRhdGUgc3RhY2tzIGNvdW50ZXIgdmFsdWUuCgogICAgdmlldy5iaW5kKCdjb3VudGVyJykudG8odGhpcywgJ3Zpc2libGVWaWV3JywgdGhpcywgJ19udW1iZXJPZlN0YWNrcycsICh2aXNpYmxlVmlldywgbnVtYmVyT2ZTdGFja3MpID0+IHsKICAgICAgaWYgKG51bWJlck9mU3RhY2tzIDwgMikgewogICAgICAgIHJldHVybiAnJzsKICAgICAgfQoKICAgICAgY29uc3QgY3VycmVudCA9IEFycmF5LmZyb20odGhpcy5faWRUb1N0YWNrLnZhbHVlcygpKS5pbmRleE9mKHRoaXMuX3Zpc2libGVTdGFjaykgKyAxOwogICAgICByZXR1cm4gdCgnJTAgb2YgJTEnLCBbY3VycmVudCwgbnVtYmVyT2ZTdGFja3NdKTsKICAgIH0pOwogICAgdmlldy5idXR0b25OZXh0Vmlldy5vbignZXhlY3V0ZScsICgpID0+IHsKICAgICAgLy8gV2hlbiBjdXJyZW50IHZpZXcgaGFzIGEgZm9jdXMgdGhlbiBtb3ZlIGZvY3VzIHRvIHRoZSBlZGl0YWJsZSBiZWZvcmUgcmVtb3ZpbmcgaXQsCiAgICAgIC8vIG90aGVyd2lzZSBlZGl0b3Igd2lsbCBsb3N0IGZvY3VzLgogICAgICBpZiAodmlldy5mb2N1c1RyYWNrZXIuaXNGb2N1c2VkKSB7CiAgICAgICAgdGhpcy5lZGl0b3IuZWRpdGluZy52aWV3LmZvY3VzKCk7CiAgICAgIH0KCiAgICAgIHRoaXMuX3Nob3dOZXh0U3RhY2soKTsKICAgIH0pOwogICAgdmlldy5idXR0b25QcmV2Vmlldy5vbignZXhlY3V0ZScsICgpID0+IHsKICAgICAgLy8gV2hlbiBjdXJyZW50IHZpZXcgaGFzIGEgZm9jdXMgdGhlbiBtb3ZlIGZvY3VzIHRvIHRoZSBlZGl0YWJsZSBiZWZvcmUgcmVtb3ZpbmcgaXQsCiAgICAgIC8vIG90aGVyd2lzZSBlZGl0b3Igd2lsbCBsb3N0IGZvY3VzLgogICAgICBpZiAodmlldy5mb2N1c1RyYWNrZXIuaXNGb2N1c2VkKSB7CiAgICAgICAgdGhpcy5lZGl0b3IuZWRpdGluZy52aWV3LmZvY3VzKCk7CiAgICAgIH0KCiAgICAgIHRoaXMuX3Nob3dQcmV2U3RhY2soKTsKICAgIH0pOwogICAgcmV0dXJuIHZpZXc7CiAgfQogIC8qKgogICAqIEByZXR1cm5zIHttb2R1bGU6dWkvdmlld35WaWV3fQogICAqLwoKCiAgX2NyZWF0ZUZha2VQYW5lbHNWaWV3KCkgewogICAgY29uc3QgdmlldyA9IG5ldyBGYWtlUGFuZWxzVmlldyh0aGlzLmVkaXRvci5sb2NhbGUsIHRoaXMudmlldyk7CiAgICB2aWV3LmJpbmQoJ251bWJlck9mUGFuZWxzJykudG8odGhpcywgJ19udW1iZXJPZlN0YWNrcycsIHRoaXMsICdfc2luZ2xlVmlld01vZGUnLCAobnVtYmVyLCBpc1NpbmdsZVZpZXdNb2RlKSA9PiB7CiAgICAgIGNvbnN0IHNob3dQYW5lbHMgPSAhaXNTaW5nbGVWaWV3TW9kZSAmJiBudW1iZXIgPj0gMjsKICAgICAgcmV0dXJuIHNob3dQYW5lbHMgPyBNYXRoLm1pbihudW1iZXIgLSAxLCAyKSA6IDA7CiAgICB9KTsKICAgIHZpZXcubGlzdGVuVG8odGhpcy52aWV3LCAnY2hhbmdlOnRvcCcsICgpID0+IHZpZXcudXBkYXRlUG9zaXRpb24oKSk7CiAgICB2aWV3Lmxpc3RlblRvKHRoaXMudmlldywgJ2NoYW5nZTpsZWZ0JywgKCkgPT4gdmlldy51cGRhdGVQb3NpdGlvbigpKTsKICAgIHRoaXMuZWRpdG9yLnVpLnZpZXcuYm9keS5hZGQodmlldyk7CiAgICByZXR1cm4gdmlldzsKICB9CiAgLyoqCiAgICogU2V0cyB0aGUgdmlldyBhcyB0aGUgY29udGVudCBvZiB0aGUgYmFsbG9vbiBhbmQgYXR0YWNoZXMgdGhlIGJhbGxvb24gdXNpbmcgcG9zaXRpb24KICAgKiBvcHRpb25zIG9mIHRoZSBmaXJzdCB2aWV3LgogICAqCiAgICogQHByaXZhdGUKICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSBDb25maWd1cmF0aW9uLgogICAqIEBwYXJhbSB7bW9kdWxlOnVpL3ZpZXd+Vmlld30gW2RhdGEudmlld10gVGhlIHZpZXcgdG8gc2hvdyBpbiB0aGUgYmFsbG9vbi4KICAgKiBAcGFyYW0ge1N0cmluZ30gW2RhdGEuYmFsbG9vbkNsYXNzTmFtZT0nJ10gQWRkaXRpb25hbCBjbGFzcyBuYW1lIHdoaWNoIHdpbGwgYmUgYWRkZWQgdG8gdGhlIHtAbGluayAjdmlldyBiYWxsb29ufS4KICAgKiBAcGFyYW0ge0Jvb2xlYW59IFtkYXRhLndpdGhBcnJvdz10cnVlXSBXaGV0aGVyIHRoZSB7QGxpbmsgI3ZpZXcgYmFsbG9vbn0gc2hvdWxkIGJlIHJlbmRlcmVkIHdpdGggYW4gYXJyb3cuCiAgICovCgoKICBfc2hvd1ZpZXcoewogICAgdmlldywKICAgIGJhbGxvb25DbGFzc05hbWUgPSAnJywKICAgIHdpdGhBcnJvdyA9IHRydWUsCiAgICBzaW5nbGVWaWV3TW9kZSA9IGZhbHNlCiAgfSkgewogICAgdGhpcy52aWV3LmNsYXNzID0gYmFsbG9vbkNsYXNzTmFtZTsKICAgIHRoaXMudmlldy53aXRoQXJyb3cgPSB3aXRoQXJyb3c7CgogICAgdGhpcy5fcm90YXRvclZpZXcuc2hvd1ZpZXcodmlldyk7CgogICAgdGhpcy52aXNpYmxlVmlldyA9IHZpZXc7CiAgICB0aGlzLnZpZXcucGluKHRoaXMuX2dldEJhbGxvb25Qb3NpdGlvbigpKTsKCiAgICB0aGlzLl9mYWtlUGFuZWxzVmlldy51cGRhdGVQb3NpdGlvbigpOwoKICAgIGlmIChzaW5nbGVWaWV3TW9kZSkgewogICAgICB0aGlzLl9zaW5nbGVWaWV3TW9kZSA9IHRydWU7CiAgICB9CiAgfQogIC8qKgogICAqIFJldHVybnMgcG9zaXRpb24gb3B0aW9ucyBvZiB0aGUgbGFzdCB2aWV3IGluIHRoZSBzdGFjay4KICAgKiBUaGlzIGtlZXBzIHRoZSBiYWxsb29uIGluIHRoZSBzYW1lIHBvc2l0aW9uIHdoZW4gdGhlIHZpZXcgaXMgY2hhbmdlZC4KICAgKgogICAqIEBwcml2YXRlCiAgICogQHJldHVybnMge21vZHVsZTp1dGlscy9kb20vcG9zaXRpb25+T3B0aW9uc30KICAgKi8KCgogIF9nZXRCYWxsb29uUG9zaXRpb24oKSB7CiAgICBsZXQgcG9zaXRpb24gPSBBcnJheS5mcm9tKHRoaXMuX3Zpc2libGVTdGFjay52YWx1ZXMoKSkucG9wKCkucG9zaXRpb247IC8vIFVzZSB0aGUgZGVmYXVsdCBsaW1pdGVyIGlmIG5vbmUgaGFzIGJlZW4gc3BlY2lmaWVkLgoKICAgIGlmIChwb3NpdGlvbiAmJiAhcG9zaXRpb24ubGltaXRlcikgewogICAgICAvLyBEb24ndCBtb2RpZnkgdGhlIG9yaWdpbmFsIG9wdGlvbnMgb2JqZWN0LgogICAgICBwb3NpdGlvbiA9IE9iamVjdC5hc3NpZ24oe30sIHBvc2l0aW9uLCB7CiAgICAgICAgbGltaXRlcjogdGhpcy5wb3NpdGlvbkxpbWl0ZXIKICAgICAgfSk7CiAgICB9CgogICAgcmV0dXJuIHBvc2l0aW9uOwogIH0KCn0KLyoqCiAqIFJvdGF0b3IgdmlldyBpcyBhIGhlbHBlciBjbGFzcyBmb3IgdGhlIHtAbGluayBtb2R1bGU6dWkvcGFuZWwvYmFsbG9vbi9jb250ZXh0dWFsYmFsbG9vbn5Db250ZXh0dWFsQmFsbG9vbiBDb250ZXh0dWFsQmFsbG9vbn0uCiAqIEl0IGlzIHVzZWQgZm9yIGRpc3BsYXlpbmcgdGhlIGxhc3QgdmlldyBmcm9tIHRoZSBjdXJyZW50IHN0YWNrIGFuZCBwcm92aWRpbmcgbmF2aWdhdGlvbiBidXR0b25zIGZvciBzd2l0Y2hpbmcgc3RhY2tzLgogKiBTZWUgdGhlIHtAbGluayBtb2R1bGU6dWkvcGFuZWwvYmFsbG9vbi9jb250ZXh0dWFsYmFsbG9vbn5Db250ZXh0dWFsQmFsbG9vbiBDb250ZXh0dWFsQmFsbG9vbn0gZG9jdW1lbnRhdGlvbiB0byBsZWFybiBtb3JlLgogKgogKiBAZXh0ZW5kcyBtb2R1bGU6dWkvdmlld35WaWV3CiAqLwoKY2xhc3MgUm90YXRvclZpZXcgZXh0ZW5kcyBWaWV3IHsKICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwogIGNvbnN0cnVjdG9yKGxvY2FsZSkgewogICAgc3VwZXIobG9jYWxlKTsKICAgIGNvbnN0IHQgPSBsb2NhbGUudDsKICAgIGNvbnN0IGJpbmQgPSB0aGlzLmJpbmRUZW1wbGF0ZTsKICAgIC8qKgogICAgICogRGVmaW5lcyB3aGV0aGVyIG5hdmlnYXRpb24gaXMgdmlzaWJsZSBvciBub3QuCiAgICAgKgogICAgICogQG1lbWJlciB7Qm9vbGVhbn0gI2lzTmF2aWdhdGlvblZpc2libGUKICAgICAqLwoKICAgIHRoaXMuc2V0KCdpc05hdmlnYXRpb25WaXNpYmxlJywgdHJ1ZSk7CiAgICAvKioKICAgICAqIFVzZWQgZm9yIGNoZWNraW5nIGlmIGEgdmlldyBpcyBmb2N1c2VkIG9yIG5vdC4KICAgICAqCiAgICAgKiBAdHlwZSB7bW9kdWxlOnV0aWxzL2ZvY3VzdHJhY2tlcn5Gb2N1c1RyYWNrZXJ9CiAgICAgKi8KCiAgICB0aGlzLmZvY3VzVHJhY2tlciA9IG5ldyBGb2N1c1RyYWNrZXIoKTsKICAgIC8qKgogICAgICogTmF2aWdhdGlvbiBidXR0b24gZm9yIHN3aXRjaGluZyB0aGUgc3RhY2sgdG8gdGhlIHByZXZpb3VzIG9uZS4KICAgICAqCiAgICAgKiBAdHlwZSB7bW9kdWxlOnVpL2J1dHRvbi9idXR0b252aWV3fkJ1dHRvblZpZXd9CiAgICAgKi8KCiAgICB0aGlzLmJ1dHRvblByZXZWaWV3ID0gdGhpcy5fY3JlYXRlQnV0dG9uVmlldyh0KCdQcmV2aW91cycpLCBwcmV2SWNvbik7CiAgICAvKioKICAgICAqIE5hdmlnYXRpb24gYnV0dG9uIGZvciBzd2l0Y2hpbmcgdGhlIHN0YWNrIHRvIHRoZSBuZXh0IG9uZS4KICAgICAqCiAgICAgKiBAdHlwZSB7bW9kdWxlOnVpL2J1dHRvbi9idXR0b252aWV3fkJ1dHRvblZpZXd9CiAgICAgKi8KCiAgICB0aGlzLmJ1dHRvbk5leHRWaWV3ID0gdGhpcy5fY3JlYXRlQnV0dG9uVmlldyh0KCdOZXh0JyksIG5leHRJY29uKTsKICAgIC8qKgogICAgICogQSBjb2xsZWN0aW9uIG9mIHRoZSBjaGlsZCB2aWV3cyB0aGF0IGNyZWF0ZXMgdGhlIHJvdGF0b3IgY29udGVudC4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEB0eXBlIHttb2R1bGU6dWkvdmlld2NvbGxlY3Rpb25+Vmlld0NvbGxlY3Rpb259CiAgICAgKi8KCiAgICB0aGlzLmNvbnRlbnQgPSB0aGlzLmNyZWF0ZUNvbGxlY3Rpb24oKTsKICAgIHRoaXMuc2V0VGVtcGxhdGUoewogICAgICB0YWc6ICdkaXYnLAogICAgICBhdHRyaWJ1dGVzOiB7CiAgICAgICAgY2xhc3M6IFsnY2snLCAnY2stYmFsbG9vbi1yb3RhdG9yJ10sCiAgICAgICAgJ3otaW5kZXgnOiAnLTEnCiAgICAgIH0sCiAgICAgIGNoaWxkcmVuOiBbewogICAgICAgIHRhZzogJ2RpdicsCiAgICAgICAgYXR0cmlidXRlczogewogICAgICAgICAgY2xhc3M6IFsnY2stYmFsbG9vbi1yb3RhdG9yX19uYXZpZ2F0aW9uJywgYmluZC50bygnaXNOYXZpZ2F0aW9uVmlzaWJsZScsIHZhbHVlID0+IHZhbHVlID8gJycgOiAnY2staGlkZGVuJyldCiAgICAgICAgfSwKICAgICAgICBjaGlsZHJlbjogW3RoaXMuYnV0dG9uUHJldlZpZXcsIHsKICAgICAgICAgIHRhZzogJ3NwYW4nLAogICAgICAgICAgYXR0cmlidXRlczogewogICAgICAgICAgICBjbGFzczogWydjay1iYWxsb29uLXJvdGF0b3JfX2NvdW50ZXInXQogICAgICAgICAgfSwKICAgICAgICAgIGNoaWxkcmVuOiBbewogICAgICAgICAgICB0ZXh0OiBiaW5kLnRvKCdjb3VudGVyJykKICAgICAgICAgIH1dCiAgICAgICAgfSwgdGhpcy5idXR0b25OZXh0Vmlld10KICAgICAgfSwgewogICAgICAgIHRhZzogJ2RpdicsCiAgICAgICAgYXR0cmlidXRlczogewogICAgICAgICAgY2xhc3M6ICdjay1iYWxsb29uLXJvdGF0b3JfX2NvbnRlbnQnCiAgICAgICAgfSwKICAgICAgICBjaGlsZHJlbjogdGhpcy5jb250ZW50CiAgICAgIH1dCiAgICB9KTsKICB9CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KCgogIHJlbmRlcigpIHsKICAgIHN1cGVyLnJlbmRlcigpOwogICAgdGhpcy5mb2N1c1RyYWNrZXIuYWRkKHRoaXMuZWxlbWVudCk7CiAgfQogIC8qKgogICAqIFNob3dzIGEgZ2l2ZW4gdmlldy4KICAgKgogICAqIEBwYXJhbSB7bW9kdWxlOnVpL3ZpZXd+Vmlld30gdmlldyBUaGUgdmlldyB0byBzaG93LgogICAqLwoKCiAgc2hvd1ZpZXcodmlldykgewogICAgdGhpcy5oaWRlVmlldygpOwogICAgdGhpcy5jb250ZW50LmFkZCh2aWV3KTsKICB9CiAgLyoqCiAgICogSGlkZXMgdGhlIGN1cnJlbnRseSBkaXNwbGF5ZWQgdmlldy4KICAgKi8KCgogIGhpZGVWaWV3KCkgewogICAgdGhpcy5jb250ZW50LmNsZWFyKCk7CiAgfQogIC8qKgogICAqIENyZWF0ZXMgYSBuYXZpZ2F0aW9uIGJ1dHRvbiB2aWV3LgogICAqCiAgICogQHByaXZhdGUKICAgKiBAcGFyYW0ge1N0cmluZ30gbGFiZWwgVGhlIGJ1dHRvbiBsYWJlbC4KICAgKiBAcGFyYW0ge1N0cmluZ30gaWNvbiBUaGUgYnV0dG9uIGljb24uCiAgICogQHJldHVybnMge21vZHVsZTp1aS9idXR0b24vYnV0dG9udmlld35CdXR0b25WaWV3fQogICAqLwoKCiAgX2NyZWF0ZUJ1dHRvblZpZXcobGFiZWwsIGljb24pIHsKICAgIGNvbnN0IHZpZXcgPSBuZXcgQnV0dG9uVmlldyh0aGlzLmxvY2FsZSk7CiAgICB2aWV3LnNldCh7CiAgICAgIGxhYmVsLAogICAgICBpY29uLAogICAgICB0b29sdGlwOiB0cnVlCiAgICB9KTsKICAgIHJldHVybiB2aWV3OwogIH0KCn0gLy8gRGlzcGxheXMgYWRkaXRpb25hbCBsYXllcnMgdW5kZXIgdGhlIGJhbGxvb24gd2hlbiBtdWx0aXBsZSBzdGFja3MgYXJlIGFkZGVkIHRvIHRoZSBiYWxsb29uLgovLwovLyBAcHJpdmF0ZQovLyBAZXh0ZW5kcyBtb2R1bGU6dWkvdmlld35WaWV3CgoKY2xhc3MgRmFrZVBhbmVsc1ZpZXcgZXh0ZW5kcyBWaWV3IHsKICAvLyBAaW5oZXJpdERvYwogIGNvbnN0cnVjdG9yKGxvY2FsZSwgYmFsbG9vblBhbmVsVmlldykgewogICAgc3VwZXIobG9jYWxlKTsKICAgIGNvbnN0IGJpbmQgPSB0aGlzLmJpbmRUZW1wbGF0ZTsgLy8gRmFrZSBwYW5lbHMgdG9wIG9mZnNldC4KICAgIC8vCiAgICAvLyBAb2JzZXJ2YWJsZQogICAgLy8gQG1lbWJlciB7TnVtYmVyfSAjdG9wCgogICAgdGhpcy5zZXQoJ3RvcCcsIDApOyAvLyBGYWtlIHBhbmVscyBsZWZ0IG9mZnNldC4KICAgIC8vCiAgICAvLyBAb2JzZXJ2YWJsZQogICAgLy8gQG1lbWJlciB7TnVtYmVyfSAjbGVmdAoKICAgIHRoaXMuc2V0KCdsZWZ0JywgMCk7IC8vIEZha2UgcGFuZWxzIGhlaWdodC4KICAgIC8vCiAgICAvLyBAb2JzZXJ2YWJsZQogICAgLy8gQG1lbWJlciB7TnVtYmVyfSAjaGVpZ2h0CgogICAgdGhpcy5zZXQoJ2hlaWdodCcsIDApOyAvLyBGYWtlIHBhbmVscyB3aWR0aC4KICAgIC8vCiAgICAvLyBAb2JzZXJ2YWJsZQogICAgLy8gQG1lbWJlciB7TnVtYmVyfSAjd2lkdGgKCiAgICB0aGlzLnNldCgnd2lkdGgnLCAwKTsgLy8gTnVtYmVyIG9mIHJlbmRlcmVkIGZha2UgcGFuZWxzLgogICAgLy8KICAgIC8vIEBvYnNlcnZhYmxlCiAgICAvLyBAbWVtYmVyIHtOdW1iZXJ9ICNudW1iZXJPZlBhbmVscwoKICAgIHRoaXMuc2V0KCdudW1iZXJPZlBhbmVscycsIDApOyAvLyBDb2xsZWN0aW9uIG9mIHRoZSBjaGlsZCB2aWV3cyB3aGljaCBjcmVhdGVzIGZha2UgcGFuZWwgY29udGVudC4KICAgIC8vCiAgICAvLyBAcmVhZG9ubHkKICAgIC8vIEB0eXBlIHttb2R1bGU6dWkvdmlld2NvbGxlY3Rpb25+Vmlld0NvbGxlY3Rpb259CgogICAgdGhpcy5jb250ZW50ID0gdGhpcy5jcmVhdGVDb2xsZWN0aW9uKCk7IC8vIENvbnRleHQuCiAgICAvLwogICAgLy8gQHByaXZhdGUKICAgIC8vIEB0eXBlIHttb2R1bGU6dWkvcGFuZWwvYmFsbG9vbi9iYWxsb29ucGFuZWx2aWV3fkJhbGxvb25QYW5lbFZpZXd9CgogICAgdGhpcy5fYmFsbG9vblBhbmVsVmlldyA9IGJhbGxvb25QYW5lbFZpZXc7CiAgICB0aGlzLnNldFRlbXBsYXRlKHsKICAgICAgdGFnOiAnZGl2JywKICAgICAgYXR0cmlidXRlczogewogICAgICAgIGNsYXNzOiBbJ2NrLWZha2UtcGFuZWwnLCBiaW5kLnRvKCdudW1iZXJPZlBhbmVscycsIG51bWJlciA9PiBudW1iZXIgPyAnJyA6ICdjay1oaWRkZW4nKV0sCiAgICAgICAgc3R5bGU6IHsKICAgICAgICAgIHRvcDogYmluZC50bygndG9wJywgdG9QeCksCiAgICAgICAgICBsZWZ0OiBiaW5kLnRvKCdsZWZ0JywgdG9QeCksCiAgICAgICAgICB3aWR0aDogYmluZC50bygnd2lkdGgnLCB0b1B4KSwKICAgICAgICAgIGhlaWdodDogYmluZC50bygnaGVpZ2h0JywgdG9QeCkKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGNoaWxkcmVuOiB0aGlzLmNvbnRlbnQKICAgIH0pOwogICAgdGhpcy5vbignY2hhbmdlOm51bWJlck9mUGFuZWxzJywgKGV2dCwgbmFtZSwgbmV4dCwgcHJldikgPT4gewogICAgICBpZiAobmV4dCA+IHByZXYpIHsKICAgICAgICB0aGlzLl9hZGRQYW5lbHMobmV4dCAtIHByZXYpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuX3JlbW92ZVBhbmVscyhwcmV2IC0gbmV4dCk7CiAgICAgIH0KCiAgICAgIHRoaXMudXBkYXRlUG9zaXRpb24oKTsKICAgIH0pOwogIH0gLy8gQHByaXZhdGUKICAvLyBAcGFyYW0ge051bWJlcn0gbnVtYmVyCgoKICBfYWRkUGFuZWxzKG51bWJlcikgewogICAgd2hpbGUgKG51bWJlci0tKSB7CiAgICAgIGNvbnN0IHZpZXcgPSBuZXcgVmlldygpOwogICAgICB2aWV3LnNldFRlbXBsYXRlKHsKICAgICAgICB0YWc6ICdkaXYnCiAgICAgIH0pOwogICAgICB0aGlzLmNvbnRlbnQuYWRkKHZpZXcpOwogICAgICB0aGlzLnJlZ2lzdGVyQ2hpbGQodmlldyk7CiAgICB9CiAgfSAvLyBAcHJpdmF0ZQogIC8vIEBwYXJhbSB7TnVtYmVyfSBudW1iZXIKCgogIF9yZW1vdmVQYW5lbHMobnVtYmVyKSB7CiAgICB3aGlsZSAobnVtYmVyLS0pIHsKICAgICAgY29uc3QgdmlldyA9IHRoaXMuY29udGVudC5sYXN0OwogICAgICB0aGlzLmNvbnRlbnQucmVtb3ZlKHZpZXcpOwogICAgICB0aGlzLmRlcmVnaXN0ZXJDaGlsZCh2aWV3KTsKICAgICAgdmlldy5kZXN0cm95KCk7CiAgICB9CiAgfSAvLyBVcGRhdGVzIGNvb3JkaW5hdGVzIG9mIGZha2UgcGFuZWxzLgoKCiAgdXBkYXRlUG9zaXRpb24oKSB7CiAgICBpZiAodGhpcy5udW1iZXJPZlBhbmVscykgewogICAgICBjb25zdCB7CiAgICAgICAgdG9wLAogICAgICAgIGxlZnQKICAgICAgfSA9IHRoaXMuX2JhbGxvb25QYW5lbFZpZXc7CiAgICAgIGNvbnN0IHsKICAgICAgICB3aWR0aCwKICAgICAgICBoZWlnaHQKICAgICAgfSA9IG5ldyBSZWN0KHRoaXMuX2JhbGxvb25QYW5lbFZpZXcuZWxlbWVudCk7CiAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgewogICAgICAgIHRvcCwKICAgICAgICBsZWZ0LAogICAgICAgIHdpZHRoLAogICAgICAgIGhlaWdodAogICAgICB9KTsKICAgIH0KICB9Cgp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.js"],"names":["Plugin","BalloonPanelView","View","ButtonView","CKEditorError","FocusTracker","toUnit","Rect","prevIcon","nextIcon","toPx","ContextualBalloon","pluginName","constructor","editor","positionLimiter","view","editing","viewDocument","document","editableElement","selection","domConverter","mapViewToDom","root","set","locale","ui","body","add","focusTracker","element","_viewToStack","Map","_idToStack","_rotatorView","_createRotatorView","_fakePanelsView","_createFakePanelsView","hasView","Array","from","keys","includes","data","stackId","has","get","_numberOfStacks","size","_visibleStack","singleViewMode","showStack","stack","_showView","remove","_singleViewMode","visibleView","_showNextStack","hide","hideView","values","delete","_getStackId","updatePosition","position","pin","_getBalloonPosition","id","visibleStack","pop","entry","entries","find","stacks","nextIndex","indexOf","_showPrevStack","length","RotatorView","t","content","bind","to","value","isSingleViewMode","on","priority","numberOfStacks","current","buttonNextView","isFocused","focus","buttonPrevView","FakePanelsView","number","showPanels","Math","min","listenTo","balloonClassName","withArrow","class","showView","limiter","Object","assign","bindTemplate","_createButtonView","createCollection","setTemplate","tag","attributes","children","text","render","clear","label","icon","tooltip","balloonPanelView","_balloonPanelView","style","top","left","width","height","evt","name","next","prev","_addPanels","_removePanels","registerChild","last","deregisterChild","destroy","numberOfPanels"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/balloon/contextualballoon\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BalloonPanelView from './balloonpanelview';\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\n\nimport prevIcon from '../../../theme/icons/previous-arrow.svg';\nimport nextIcon from '../../../theme/icons/next-arrow.svg';\n\nimport '../../../theme/components/panel/balloonrotator.css';\nimport '../../../theme/components/panel/fakepanel.css';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * Provides the common contextual balloon for the editor.\n *\n * The role of this plugin is to unify the contextual balloons logic, simplify views management and help\n * avoid the unnecessary complexity of handling multiple {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * instances in the editor.\n *\n * This plugin allows for creating single or multiple panel stacks.\n *\n * Each stack may have multiple views, with the one on the top being visible. When the visible view is removed from the stack,\n * the previous view becomes visible.\n *\n * It might be useful to implement nested navigation in a balloon. For instance, a toolbar view may contain a link button.\n * When you click it, a link view (which lets you set the URL) is created and put on top of the toolbar view, so the link panel\n * is displayed. When you finish editing the link and close (remove) the link view, the toolbar view is visible again.\n *\n * However, there are cases when there are multiple independent balloons to be displayed, for instance, if the selection\n * is inside two inline comments at the same time. For such cases, you can create two independent panel stacks.\n * The contextual balloon plugin will create a navigation bar to let the users switch between these panel stacks using the \"Next\"\n * and \"Previous\" buttons.\n *\n * If there are no views in the current stack, the balloon panel will try to switch to the next stack. If there are no\n * panels in any stack, the balloon panel will be hidden.\n *\n * **Note**: To force the balloon panel to show only one view, even if there are other stacks, use the `singleViewMode=true` option\n * when {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#add adding} a view to a panel.\n *\n * From the implementation point of view, the contextual ballon plugin is reusing a single\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance to display multiple contextual balloon\n * panels in the editor. It also creates a special {@link module:ui/panel/balloon/contextualballoon~RotatorView rotator view},\n * used to manage multiple panel stacks. Rotator view is a child of the balloon panel view and the parent of the specific\n * view you want to display. If there is more than one panel stack to be displayed, the rotator view will add a\n * navigation bar. If there is only one stack, the rotator view is transparent (it does not add any UI elements).\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ContextualBalloon extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ContextualBalloon';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The {@link module:utils/dom/position~Options#limiter position limiter}\n\t\t * for the {@link #view balloon}, used when no `limiter` has been passed into {@link #add}\n\t\t * or {@link #updatePosition}.\n\t\t *\n\t\t * By default, a function that obtains the farthest DOM\n\t\t * {@link module:engine/view/rooteditableelement~RootEditableElement}\n\t\t * of the {@link module:engine/view/document~Document#selection}.\n\t\t *\n\t\t * @member {module:utils/dom/position~Options#limiter} #positionLimiter\n\t\t */\n\t\tthis.positionLimiter = () => {\n\t\t\tconst view = this.editor.editing.view;\n\t\t\tconst viewDocument = view.document;\n\t\t\tconst editableElement = viewDocument.selection.editableElement;\n\n\t\t\tif ( editableElement ) {\n\t\t\t\treturn view.domConverter.mapViewToDom( editableElement.root );\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\t/**\n\t\t * The currently visible view or `null` when there are no views in any stack.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {module:ui/view~View|null} #visibleView\n\t\t */\n\t\tthis.set( 'visibleView', null );\n\n\t\t/**\n\t\t * The common balloon panel view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/panel/balloon/balloonpanelview~BalloonPanelView} #view\n\t\t */\n\t\tthis.view = new BalloonPanelView( editor.locale );\n\t\teditor.ui.view.body.add( this.view );\n\t\teditor.ui.focusTracker.add( this.view.element );\n\n\t\t/**\n\t\t * The map of views and their stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<module:ui/view~View,Set>}\n\t\t */\n\t\tthis._viewToStack = new Map();\n\n\t\t/**\n\t\t * The map of IDs and stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<String,Set>}\n\t\t */\n\t\tthis._idToStack = new Map();\n\n\t\t/**\n\t\t * A total number of all stacks in the balloon.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Number} #_numberOfStacks\n\t\t */\n\t\tthis.set( '_numberOfStacks', 0 );\n\n\t\t/**\n\t\t * A flag that controls the single view mode.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #_singleViewMode\n\t\t */\n\t\tthis.set( '_singleViewMode', false );\n\n\t\t/**\n\t\t * Rotator view embedded in the contextual balloon.\n\t\t * Displays the currently visible view in the balloon and provides navigation for switching stacks.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t\t */\n\t\tthis._rotatorView = this._createRotatorView();\n\n\t\t/**\n\t\t * Displays fake panels under the balloon panel view when multiple stacks are added to the balloon.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/view~View}\n\t\t */\n\t\tthis._fakePanelsView = this._createFakePanelsView();\n\t}\n\n\t/**\n\t * Returns `true` when the given view is in one of the stacks. Otherwise returns `false`.\n\t *\n\t * @param {module:ui/view~View} view\n\t * @returns {Boolean}\n\t */\n\thasView( view ) {\n\t\treturn Array.from( this._viewToStack.keys() ).includes( view );\n\t}\n\n\t/**\n\t * Adds a new view to the stack and makes it visible if the current stack is visible\n\t * or it is the first view in the balloon.\n\t *\n\t * @param {Object} data The configuration of the view.\n\t * @param {String} [data.stackId='main'] The ID of the stack that the view is added to.\n\t * @param {module:ui/view~View} [data.view] The content of the balloon.\n\t * @param {module:utils/dom/position~Options} [data.position] Positioning options.\n\t * @param {String} [data.balloonClassName] An additional CSS class added to the {@link #view balloon} when visible.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t * @param {Boolean} [data.singleViewMode=false] Whether the view should be the only visible view even if other stacks were added.\n\t */\n\tadd( data ) {\n\t\tif ( this.hasView( data.view ) ) {\n\t\t\t/**\n\t\t\t * Trying to add configuration of the same view more than once.\n\t\t\t *\n\t\t\t * @error contextualballoon-add-view-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-add-view-exist: Cannot add configuration of the same view twice.',\n\t\t\t\t[ this, data ]\n\t\t\t);\n\t\t}\n\n\t\tconst stackId = data.stackId || 'main';\n\n\t\t// If new stack is added, creates it and show view from this stack.\n\t\tif ( !this._idToStack.has( stackId ) ) {\n\t\t\tthis._idToStack.set( stackId, new Map( [ [ data.view, data ] ] ) );\n\t\t\tthis._viewToStack.set( data.view, this._idToStack.get( stackId ) );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\n\t\t\tif ( !this._visibleStack || data.singleViewMode ) {\n\t\t\t\tthis.showStack( stackId );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst stack = this._idToStack.get( stackId );\n\n\t\tif ( data.singleViewMode ) {\n\t\t\tthis.showStack( stackId );\n\t\t}\n\n\t\t// Add new view to the stack.\n\t\tstack.set( data.view, data );\n\t\tthis._viewToStack.set( data.view, stack );\n\n\t\t// And display it if is added to the currently visible stack.\n\t\tif ( stack === this._visibleStack ) {\n\t\t\tthis._showView( data );\n\t\t}\n\t}\n\n\t/**\n\t * Removes the given view from the stack. If the removed view was visible,\n\t * the view preceding it in the stack will become visible instead.\n\t * When there is no view in the stack, the next stack will be displayed.\n\t * When there are no more stacks, the balloon will hide.\n\t *\n\t * @param {module:ui/view~View} view A view to be removed from the balloon.\n\t */\n\tremove( view ) {\n\t\tif ( !this.hasView( view ) ) {\n\t\t\t/**\n\t\t\t * Trying to remove the configuration of the view not defined in the stack.\n\t\t\t *\n\t\t\t * @error contextualballoon-remove-view-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-remove-view-not-exist: Cannot remove the configuration of a non-existent view.',\n\t\t\t\t[ this, view ]\n\t\t\t);\n\t\t}\n\n\t\tconst stack = this._viewToStack.get( view );\n\n\t\tif ( this._singleViewMode && this.visibleView === view ) {\n\t\t\tthis._singleViewMode = false;\n\t\t}\n\n\t\t// When visible view will be removed we need to show a preceding view or next stack\n\t\t// if a view is the only view in the stack.\n\t\tif ( this.visibleView === view ) {\n\t\t\tif ( stack.size === 1 ) {\n\t\t\t\tif ( this._idToStack.size > 1 ) {\n\t\t\t\t\tthis._showNextStack();\n\t\t\t\t} else {\n\t\t\t\t\tthis.view.hide();\n\t\t\t\t\tthis.visibleView = null;\n\t\t\t\t\tthis._rotatorView.hideView();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._showView( Array.from( stack.values() )[ stack.size - 2 ] );\n\t\t\t}\n\t\t}\n\n\t\tif ( stack.size === 1 ) {\n\t\t\tthis._idToStack.delete( this._getStackId( stack ) );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\t\t} else {\n\t\t\tstack.delete( view );\n\t\t}\n\n\t\tthis._viewToStack.delete( view );\n\t}\n\n\t/**\n\t * Updates the position of the balloon using the position data of the first visible view in the stack.\n\t * When new position data is given, the position data of the currently visible view will be updated.\n\t *\n\t * @param {module:utils/dom/position~Options} [position] position options.\n\t */\n\tupdatePosition( position ) {\n\t\tif ( position ) {\n\t\t\tthis._visibleStack.get( this.visibleView ).position = position;\n\t\t}\n\n\t\tthis.view.pin( this._getBalloonPosition() );\n\t\tthis._fakePanelsView.updatePosition();\n\t}\n\n\t/**\n\t * Shows the last view from the stack of a given ID.\n\t *\n\t * @param {String} id\n\t */\n\tshowStack( id ) {\n\t\tthis.visibleStack = id;\n\t\tconst stack = this._idToStack.get( id );\n\n\t\tif ( !stack ) {\n\t\t\t/**\n\t\t\t * Trying to show a stack that does not exist.\n\t\t\t *\n\t\t\t * @error contextualballoon-showstack-stack-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-showstack-stack-not-exist: Cannot show a stack that does not exist.',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( this._visibleStack === stack ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._showView( Array.from( stack.values() ).pop() );\n\t}\n\n\t/**\n\t * Returns the stack of the currently visible view.\n\t *\n\t * @private\n\t * @type {Set}\n\t */\n\tget _visibleStack() {\n\t\treturn this._viewToStack.get( this.visibleView );\n\t}\n\n\t/**\n\t * Returns the ID of the given stack.\n\t *\n\t * @private\n\t * @param {Set} stack\n\t * @returns {String}\n\t */\n\t_getStackId( stack ) {\n\t\tconst entry = Array.from( this._idToStack.entries() ).find( entry => entry[ 1 ] === stack );\n\n\t\treturn entry[ 0 ];\n\t}\n\n\t/**\n\t * Shows the last view from the next stack.\n\t *\n\t * @private\n\t */\n\t_showNextStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) + 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = 0;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Shows the last view from the previous stack.\n\t *\n\t * @private\n\t */\n\t_showPrevStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) - 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = stacks.length - 1;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Creates a rotator view.\n\t *\n\t * @private\n\t * @returns {module:ui/panel/balloon/contextualballoon~RotatorView}\n\t */\n\t_createRotatorView() {\n\t\tconst view = new RotatorView( this.editor.locale );\n\t\tconst t = this.editor.locale.t;\n\n\t\tthis.view.content.add( view );\n\n\t\t// Hide navigation when there is only a one stack & not in single view mode.\n\t\tview.bind( 'isNavigationVisible' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( value, isSingleViewMode ) => {\n\t\t\treturn !isSingleViewMode && value > 1;\n\t\t} );\n\n\t\t// Update balloon position after toggling navigation.\n\t\tview.on( 'change:isNavigationVisible', () => ( this.updatePosition() ), { priority: 'low' } );\n\n\t\t// Update stacks counter value.\n\t\tview.bind( 'counter' ).to( this, 'visibleView', this, '_numberOfStacks', ( visibleView, numberOfStacks ) => {\n\t\t\tif ( numberOfStacks < 2 ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst current = Array.from( this._idToStack.values() ).indexOf( this._visibleStack ) + 1;\n\n\t\t\treturn t( '%0 of %1', [ current, numberOfStacks ] );\n\t\t} );\n\n\t\tview.buttonNextView.on( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showNextStack();\n\t\t} );\n\n\t\tview.buttonPrevView.on( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showPrevStack();\n\t\t} );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * @returns {module:ui/view~View}\n\t */\n\t_createFakePanelsView() {\n\t\tconst view = new FakePanelsView( this.editor.locale, this.view );\n\n\t\tview.bind( 'numberOfPanels' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( number, isSingleViewMode ) => {\n\t\t\tconst showPanels = !isSingleViewMode && number >= 2;\n\n\t\t\treturn showPanels ? Math.min( number - 1, 2 ) : 0;\n\t\t} );\n\n\t\tview.listenTo( this.view, 'change:top', () => view.updatePosition() );\n\t\tview.listenTo( this.view, 'change:left', () => view.updatePosition() );\n\n\t\tthis.editor.ui.view.body.add( view );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * Sets the view as the content of the balloon and attaches the balloon using position\n\t * options of the first view.\n\t *\n\t * @private\n\t * @param {Object} data Configuration.\n\t * @param {module:ui/view~View} [data.view] The view to show in the balloon.\n\t * @param {String} [data.balloonClassName=''] Additional class name which will be added to the {@link #view balloon}.\n\t * @param {Boolean} [data.withArrow=true] Whether the {@link #view balloon} should be rendered with an arrow.\n\t */\n\t_showView( { view, balloonClassName = '', withArrow = true, singleViewMode = false } ) {\n\t\tthis.view.class = balloonClassName;\n\t\tthis.view.withArrow = withArrow;\n\n\t\tthis._rotatorView.showView( view );\n\t\tthis.visibleView = view;\n\t\tthis.view.pin( this._getBalloonPosition() );\n\t\tthis._fakePanelsView.updatePosition();\n\n\t\tif ( singleViewMode ) {\n\t\t\tthis._singleViewMode = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns position options of the last view in the stack.\n\t * This keeps the balloon in the same position when the view is changed.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPosition() {\n\t\tlet position = Array.from( this._visibleStack.values() ).pop().position;\n\n\t\t// Use the default limiter if none has been specified.\n\t\tif ( position && !position.limiter ) {\n\t\t\t// Don't modify the original options object.\n\t\t\tposition = Object.assign( {}, position, {\n\t\t\t\tlimiter: this.positionLimiter\n\t\t\t} );\n\t\t}\n\n\t\treturn position;\n\t}\n}\n\n/**\n * Rotator view is a helper class for the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon}.\n * It is used for displaying the last view from the current stack and providing navigation buttons for switching stacks.\n * See the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon} documentation to learn more.\n *\n * @extends module:ui/view~View\n */\nclass RotatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Defines whether navigation is visible or not.\n\t\t *\n\t\t * @member {Boolean} #isNavigationVisible\n\t\t */\n\t\tthis.set( 'isNavigationVisible', true );\n\n\t\t/**\n\t\t * Used for checking if a view is focused or not.\n\t\t *\n\t\t * @type {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Navigation button for switching the stack to the previous one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonPrevView = this._createButtonView( t( 'Previous' ), prevIcon );\n\n\t\t/**\n\t\t * Navigation button for switching the stack to the next one.\n\t\t *\n\t\t * @type {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonNextView = this._createButtonView( t( 'Next' ), nextIcon );\n\n\t\t/**\n\t\t * A collection of the child views that creates the rotator content.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-rotator'\n\t\t\t\t],\n\t\t\t\t'z-index': '-1'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck-balloon-rotator__navigation',\n\t\t\t\t\t\t\tbind.to( 'isNavigationVisible', value => value ? '' : 'ck-hidden' )\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.buttonPrevView,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t\t\t'ck-balloon-rotator__counter'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: bind.to( 'counter' )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.buttonNextView,\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-balloon-rotator__content'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.content\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.element );\n\t}\n\n\t/**\n\t * Shows a given view.\n\t *\n\t * @param {module:ui/view~View} view The view to show.\n\t */\n\tshowView( view ) {\n\t\tthis.hideView();\n\t\tthis.content.add( view );\n\t}\n\n\t/**\n\t * Hides the currently displayed view.\n\t */\n\thideView() {\n\t\tthis.content.clear();\n\t}\n\n\t/**\n\t * Creates a navigation button view.\n\t *\n\t * @private\n\t * @param {String} label The button label.\n\t * @param {String} icon The button icon.\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createButtonView( label, icon ) {\n\t\tconst view = new ButtonView( this.locale );\n\n\t\tview.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\treturn view;\n\t}\n}\n\n// Displays additional layers under the balloon when multiple stacks are added to the balloon.\n//\n// @private\n// @extends module:ui/view~View\nclass FakePanelsView extends View {\n\t// @inheritDoc\n\tconstructor( locale, balloonPanelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Fake panels top offset.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #top\n\t\tthis.set( 'top', 0 );\n\n\t\t// Fake panels left offset.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #left\n\t\tthis.set( 'left', 0 );\n\n\t\t// Fake panels height.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #height\n\t\tthis.set( 'height', 0 );\n\n\t\t// Fake panels width.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #width\n\t\tthis.set( 'width', 0 );\n\n\t\t// Number of rendered fake panels.\n\t\t//\n\t\t// @observable\n\t\t// @member {Number} #numberOfPanels\n\t\tthis.set( 'numberOfPanels', 0 );\n\n\t\t// Collection of the child views which creates fake panel content.\n\t\t//\n\t\t// @readonly\n\t\t// @type {module:ui/viewcollection~ViewCollection}\n\t\tthis.content = this.createCollection();\n\n\t\t// Context.\n\t\t//\n\t\t// @private\n\t\t// @type {module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n\t\tthis._balloonPanelView = balloonPanelView;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-fake-panel',\n\t\t\t\t\tbind.to( 'numberOfPanels', number => number ? '' : 'ck-hidden' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx ),\n\t\t\t\t\twidth: bind.to( 'width', toPx ),\n\t\t\t\t\theight: bind.to( 'height', toPx )\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildren: this.content\n\t\t} );\n\n\t\tthis.on( 'change:numberOfPanels', ( evt, name, next, prev ) => {\n\t\t\tif ( next > prev ) {\n\t\t\t\tthis._addPanels( next - prev );\n\t\t\t} else {\n\t\t\t\tthis._removePanels( prev - next );\n\t\t\t}\n\n\t\t\tthis.updatePosition();\n\t\t} );\n\t}\n\n\t// @private\n\t// @param {Number} number\n\t_addPanels( number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = new View();\n\n\t\t\tview.setTemplate( { tag: 'div' } );\n\n\t\t\tthis.content.add( view );\n\t\t\tthis.registerChild( view );\n\t\t}\n\t}\n\n\t// @private\n\t// @param {Number} number\n\t_removePanels( number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = this.content.last;\n\n\t\t\tthis.content.remove( view );\n\t\t\tthis.deregisterChild( view );\n\t\t\tview.destroy();\n\t\t}\n\t}\n\n\t// Updates coordinates of fake panels.\n\tupdatePosition() {\n\t\tif ( this.numberOfPanels ) {\n\t\t\tconst { top, left } = this._balloonPanelView;\n\t\t\tconst { width, height } = new Rect( this._balloonPanelView.element );\n\n\t\t\tObject.assign( this, { top, left, width, height } );\n\t\t}\n\t}\n}\n"]}]}