{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-core/src/pendingactions.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-core/src/pendingactions.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGNvcmUvcGVuZGluZ2FjdGlvbnMKICovCmltcG9ydCBQbHVnaW4gZnJvbSAnLi9wbHVnaW4nOwppbXBvcnQgT2JzZXJ2YWJsZU1peGluIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL29ic2VydmFibGVtaXhpbic7CmltcG9ydCBDb2xsZWN0aW9uIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2NvbGxlY3Rpb24nOwppbXBvcnQgQ0tFZGl0b3JFcnJvciBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9ja2VkaXRvcmVycm9yJzsKLyoqCiAqIFRoZSBsaXN0IG9mIHBlbmRpbmcgZWRpdG9yIGFjdGlvbnMuCiAqCiAqIFRoaXMgcGx1Z2luIHNob3VsZCBiZSB1c2VkIHRvIHN5bmNocm9uaXNlIHBsdWdpbnMgdGhhdCBleGVjdXRlIGxvbmctbGFzdGluZyBhY3Rpb25zCiAqIChlLmcuIGZpbGUgdXBsb2FkKSB3aXRoIHRoZSBlZGl0b3IgaW50ZWdyYXRpb24uIEl0IGdpdmVzIHRoZSBkZXZlbG9wZXIgd2hvIGludGVncmF0ZXMgdGhlIGVkaXRvcgogKiBhbiBlYXN5IHdheSB0byBjaGVjayBpZiB0aGVyZSBhcmUgYW55IGFjdGlvbnMgcGVuZGluZyB3aGVuZXZlciBzdWNoIGluZm9ybWF0aW9uIGlzIG5lZWRlZC4KICogQWxsIHBsdWdpbnMgdGhhdCByZWdpc3RlciBhIHBlbmRpbmcgYWN0aW9uIGFsc28gcHJvdmlkZSBhIG1lc3NhZ2UgYWJvdXQgdGhlIGFjdGlvbiB0aGF0IGlzIG9uZ29pbmcKICogd2hpY2ggY2FuIGJlIGRpc3BsYXllZCB0byB0aGUgdXNlci4gVGhpcyBsZXRzIHRoZW0gZGVjaWRlIGlmIHRoZXkgd2FudCB0byBpbnRlcnJ1cHQgdGhlIGFjdGlvbiBvciB3YWl0LgogKgogKiBBZGRpbmcgYW5kIHVwZGF0aW5nIGEgcGVuZGluZyBhY3Rpb246CiAqCiAqIAkJY29uc3QgcGVuZGluZ0FjdGlvbnMgPSBlZGl0b3IucGx1Z2lucy5nZXQoICdQZW5kaW5nQWN0aW9ucycgKTsKICogCQljb25zdCBhY3Rpb24gPSBwZW5kaW5nQWN0aW9ucy5hZGQoICdVcGxvYWQgaW4gcHJvZ3Jlc3M6IDAlLicgKTsKICoKICoJCS8vIFlvdSBjYW4gdXBkYXRlIHRoZSBtZXNzYWdlOgogKiAJCWFjdGlvbi5tZXNzYWdlID0gJ1VwbG9hZCBpbiBwcm9ncmVzczogMTAlLic7CiAqCiAqIFJlbW92aW5nIGEgcGVuZGluZyBhY3Rpb246CiAqCiAqIAkJY29uc3QgcGVuZGluZ0FjdGlvbnMgPSBlZGl0b3IucGx1Z2lucy5nZXQoICdQZW5kaW5nQWN0aW9ucycgKTsKICogCQljb25zdCBhY3Rpb24gPSBwZW5kaW5nQWN0aW9ucy5hZGQoICdVbnNhdmVkIGNoYW5nZXMuJyApOwogKgogKiAJCXBlbmRpbmdBY3Rpb25zLnJlbW92ZSggYWN0aW9uICk7CiAqCiAqIEdldHRpbmcgcGVuZGluZyBhY3Rpb25zOgogKgogKiAJCWNvbnN0IHBlbmRpbmdBY3Rpb25zID0gZWRpdG9yLnBsdWdpbnMuZ2V0KCAnUGVuZGluZ0FjdGlvbnMnICk7CiAqCiAqIAkJY29uc3QgYWN0aW9uMSA9IHBlbmRpbmdBY3Rpb25zLmFkZCggJ0FjdGlvbiAxJyApOwogKiAJCWNvbnN0IGFjdGlvbjIgPSBwZW5kaW5nQWN0aW9ucy5hZGQoICdBY3Rpb24gMicgKTsKICoKICogCQlwZW5kaW5nQWN0aW9ucy5maXJzdDsgLy8gUmV0dXJucyBhY3Rpb24xCiAqIAkJQXJyYXkuZnJvbSggcGVuZGluZ0FjdGlvbnMgKTsgLy8gUmV0dXJucyBbIGFjdGlvbjEsIGFjdGlvbjIgXQogKgogKiBUaGlzIHBsdWdpbiBpcyB1c2VkIGJ5IGZlYXR1cmVzIGxpa2Uge0BsaW5rIG1vZHVsZTp1cGxvYWQvZmlsZXJlcG9zaXRvcnl+RmlsZVJlcG9zaXRvcnl9IHRvIHJlZ2lzdGVyIHRoZWlyIG9uZ29pbmcgYWN0aW9ucwogKiBhbmQgYnkgZmVhdHVyZXMgbGlrZSB7QGxpbmsgbW9kdWxlOmF1dG9zYXZlL2F1dG9zYXZlfkF1dG9zYXZlfSB0byBkZXRlY3Qgd2hldGhlciB0aGVyZSBhcmUgYW55IG9uZ29pbmcgYWN0aW9ucy4KICogUmVhZCBtb3JlIGFib3V0IHNhdmluZyB0aGUgZGF0YSBpbiB0aGUge0BnbGluayBidWlsZHMvZ3VpZGVzL2ludGVncmF0aW9uL3NhdmluZy1kYXRhIFNhdmluZyBhbmQgZ2V0dGluZyBkYXRhfSBndWlkZS4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBlbmRpbmdBY3Rpb25zIGV4dGVuZHMgUGx1Z2luIHsKICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwogIHN0YXRpYyBnZXQgcGx1Z2luTmFtZSgpIHsKICAgIHJldHVybiAnUGVuZGluZ0FjdGlvbnMnOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgaW5pdCgpIHsKICAgIC8qKgogICAgICogRGVmaW5lcyB3aGV0aGVyIHRoZXJlIGlzIGFueSByZWdpc3RlcmVkIHBlbmRpbmcgYWN0aW9uLgogICAgICoKICAgICAqIEByZWFkb25seQogICAgICogQG9ic2VydmFibGUKICAgICAqIEBtZW1iZXIge0Jvb2xlYW59ICNoYXNBbnkKICAgICAqLwogICAgdGhpcy5zZXQoJ2hhc0FueScsIGZhbHNlKTsKICAgIC8qKgogICAgICogQSBsaXN0IG9mIHBlbmRpbmcgYWN0aW9ucy4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQHR5cGUge21vZHVsZTp1dGlscy9jb2xsZWN0aW9ufkNvbGxlY3Rpb259CiAgICAgKi8KCiAgICB0aGlzLl9hY3Rpb25zID0gbmV3IENvbGxlY3Rpb24oewogICAgICBpZFByb3BlcnR5OiAnX2lkJwogICAgfSk7CgogICAgdGhpcy5fYWN0aW9ucy5kZWxlZ2F0ZSgnYWRkJywgJ3JlbW92ZScpLnRvKHRoaXMpOwogIH0KICAvKioKICAgKiBBZGRzIGFuIGFjdGlvbiB0byB0aGUgbGlzdCBvZiBwZW5kaW5nIGFjdGlvbnMuCiAgICoKICAgKiBUaGlzIG1ldGhvZCByZXR1cm5zIGFuIGFjdGlvbiBvYmplY3Qgd2l0aCBhbiBvYnNlcnZhYmxlIG1lc3NhZ2UgcHJvcGVydHkuCiAgICogVGhlIGFjdGlvbiBvYmplY3QgY2FuIGJlIGxhdGVyIHVzZWQgaW4gdGhlIHtAbGluayAjcmVtb3ZlfSBtZXRob2QuIEl0IGFsc28gYWxsb3dzIHlvdSB0byBjaGFuZ2UgdGhlIG1lc3NhZ2UuCiAgICoKICAgKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZSBUaGUgYWN0aW9uIG1lc3NhZ2UuCiAgICogQHJldHVybnMge09iamVjdH0gQW4gb2JzZXJ2YWJsZSBvYmplY3QgdGhhdCByZXByZXNlbnRzIGEgcGVuZGluZyBhY3Rpb24uCiAgICovCgoKICBhZGQobWVzc2FnZSkgewogICAgaWYgKHR5cGVvZiBtZXNzYWdlICE9PSAnc3RyaW5nJykgewogICAgICAvKioKICAgICAgICogVGhlIG1lc3NhZ2UgbXVzdCBiZSBhIHN0cmluZy4KICAgICAgICoKICAgICAgICogQGVycm9yIHBlbmRpbmdhY3Rpb25zLWFkZC1pbnZhbGlkLW1lc3NhZ2UKICAgICAgICovCiAgICAgIHRocm93IG5ldyBDS0VkaXRvckVycm9yKCdwZW5kaW5nYWN0aW9ucy1hZGQtaW52YWxpZC1tZXNzYWdlOiBUaGUgbWVzc2FnZSBtdXN0IGJlIGEgc3RyaW5nLicsIHRoaXMpOwogICAgfQoKICAgIGNvbnN0IGFjdGlvbiA9IE9iamVjdC5jcmVhdGUoT2JzZXJ2YWJsZU1peGluKTsKICAgIGFjdGlvbi5zZXQoJ21lc3NhZ2UnLCBtZXNzYWdlKTsKCiAgICB0aGlzLl9hY3Rpb25zLmFkZChhY3Rpb24pOwoKICAgIHRoaXMuaGFzQW55ID0gdHJ1ZTsKICAgIHJldHVybiBhY3Rpb247CiAgfQogIC8qKgogICAqIFJlbW92ZXMgYW4gYWN0aW9uIGZyb20gdGhlIGxpc3Qgb2YgcGVuZGluZyBhY3Rpb25zLgogICAqCiAgICogQHBhcmFtIHtPYmplY3R9IGFjdGlvbiBBbiBhY3Rpb24gb2JqZWN0LgogICAqLwoKCiAgcmVtb3ZlKGFjdGlvbikgewogICAgdGhpcy5fYWN0aW9ucy5yZW1vdmUoYWN0aW9uKTsKCiAgICB0aGlzLmhhc0FueSA9ICEhdGhpcy5fYWN0aW9ucy5sZW5ndGg7CiAgfQogIC8qKgogICAqIFJldHVybnMgdGhlIGZpcnN0IGFjdGlvbiBmcm9tIHRoZSBsaXN0IG9yIG51bGwgd2hlbiBsaXN0IGlzIGVtcHR5CiAgICoKICAgKiByZXR1cm5zIHtPYmplY3R8bnVsbH0gVGhlIHBlbmRpbmcgYWN0aW9uIG9iamVjdC4KICAgKi8KCgogIGdldCBmaXJzdCgpIHsKICAgIHJldHVybiB0aGlzLl9hY3Rpb25zLmdldCgwKTsKICB9CiAgLyoqCiAgICogSXRlcmFibGUgaW50ZXJmYWNlLgogICAqCiAgICogQHJldHVybnMge0l0ZXJhYmxlLjwqPn0KICAgKi8KCgogIFtTeW1ib2wuaXRlcmF0b3JdKCkgewogICAgcmV0dXJuIHRoaXMuX2FjdGlvbnNbU3ltYm9sLml0ZXJhdG9yXSgpOwogIH0KICAvKioKICAgKiBGaXJlZCB3aGVuIGFuIGFjdGlvbiBpcyBhZGRlZCB0byB0aGUgbGlzdC4KICAgKgogICAqIEBldmVudCBhZGQKICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIFRoZSBhZGRlZCBhY3Rpb24uCiAgICovCgogIC8qKgogICAqIEZpcmVkIHdoZW4gYW4gYWN0aW9uIGlzIHJlbW92ZWQgZnJvbSB0aGUgbGlzdC4KICAgKgogICAqIEBldmVudCByZW1vdmUKICAgKiBAcGFyYW0ge09iamVjdH0gYWN0aW9uIFRoZSByZW1vdmVkIGFjdGlvbi4KICAgKi8KCgp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-core/src/pendingactions.js"],"names":["Plugin","ObservableMixin","Collection","CKEditorError","PendingActions","pluginName","init","set","_actions","idProperty","delegate","to","add","message","action","Object","create","hasAny","remove","length","first","get","Symbol","iterator"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,eAAP,MAA4B,+CAA5B;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,eAAe,MAAMC,cAAN,SAA6BJ,MAA7B,CAAoC;AAClD;;;AAGA,aAAWK,UAAX,GAAwB;AACvB,WAAO,gBAAP;AACA;AAED;;;;;AAGAC,EAAAA,IAAI,GAAG;AACN;;;;;;;AAOA,SAAKC,GAAL,CAAU,QAAV,EAAoB,KAApB;AAEA;;;;;;;AAMA,SAAKC,QAAL,GAAgB,IAAIN,UAAJ,CAAgB;AAAEO,MAAAA,UAAU,EAAE;AAAd,KAAhB,CAAhB;;AACA,SAAKD,QAAL,CAAcE,QAAd,CAAwB,KAAxB,EAA+B,QAA/B,EAA0CC,EAA1C,CAA8C,IAA9C;AACA;AAED;;;;;;;;;;;AASAC,EAAAA,GAAG,CAAEC,OAAF,EAAY;AACd,QAAK,OAAOA,OAAP,KAAmB,QAAxB,EAAmC;AAClC;;;;;AAKA,YAAM,IAAIV,aAAJ,CAAmB,mEAAnB,EAAwF,IAAxF,CAAN;AACA;;AAED,UAAMW,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAef,eAAf,CAAf;AAEAa,IAAAA,MAAM,CAACP,GAAP,CAAY,SAAZ,EAAuBM,OAAvB;;AACA,SAAKL,QAAL,CAAcI,GAAd,CAAmBE,MAAnB;;AACA,SAAKG,MAAL,GAAc,IAAd;AAEA,WAAOH,MAAP;AACA;AAED;;;;;;;AAKAI,EAAAA,MAAM,CAAEJ,MAAF,EAAW;AAChB,SAAKN,QAAL,CAAcU,MAAd,CAAsBJ,MAAtB;;AACA,SAAKG,MAAL,GAAc,CAAC,CAAC,KAAKT,QAAL,CAAcW,MAA9B;AACA;AAED;;;;;;;AAKA,MAAIC,KAAJ,GAAY;AACX,WAAO,KAAKZ,QAAL,CAAca,GAAd,CAAmB,CAAnB,CAAP;AACA;AAED;;;;;;;AAKA,GAAEC,MAAM,CAACC,QAAT,IAAsB;AACrB,WAAO,KAAKf,QAAL,CAAec,MAAM,CAACC,QAAtB,GAAP;AACA;AAED;;;;;;;AAOA;;;;;;;;AA9FkD","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/pendingactions\n */\n\nimport Plugin from './plugin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * The list of pending editor actions.\n *\n * This plugin should be used to synchronise plugins that execute long-lasting actions\n * (e.g. file upload) with the editor integration. It gives the developer who integrates the editor\n * an easy way to check if there are any actions pending whenever such information is needed.\n * All plugins that register a pending action also provide a message about the action that is ongoing\n * which can be displayed to the user. This lets them decide if they want to interrupt the action or wait.\n *\n * Adding and updating a pending action:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n * \t\tconst action = pendingActions.add( 'Upload in progress: 0%.' );\n *\n *\t\t// You can update the message:\n * \t\taction.message = 'Upload in progress: 10%.';\n *\n * Removing a pending action:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n * \t\tconst action = pendingActions.add( 'Unsaved changes.' );\n *\n * \t\tpendingActions.remove( action );\n *\n * Getting pending actions:\n *\n * \t\tconst pendingActions = editor.plugins.get( 'PendingActions' );\n *\n * \t\tconst action1 = pendingActions.add( 'Action 1' );\n * \t\tconst action2 = pendingActions.add( 'Action 2' );\n *\n * \t\tpendingActions.first; // Returns action1\n * \t\tArray.from( pendingActions ); // Returns [ action1, action2 ]\n *\n * This plugin is used by features like {@link module:upload/filerepository~FileRepository} to register their ongoing actions\n * and by features like {@link module:autosave/autosave~Autosave} to detect whether there are any ongoing actions.\n * Read more about saving the data in the {@glink builds/guides/integration/saving-data Saving and getting data} guide.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class PendingActions extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'PendingActions';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\t/**\n\t\t * Defines whether there is any registered pending action.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #hasAny\n\t\t */\n\t\tthis.set( 'hasAny', false );\n\n\t\t/**\n\t\t * A list of pending actions.\n\t\t *\n\t\t * @private\n\t\t * @type {module:utils/collection~Collection}\n\t\t */\n\t\tthis._actions = new Collection( { idProperty: '_id' } );\n\t\tthis._actions.delegate( 'add', 'remove' ).to( this );\n\t}\n\n\t/**\n\t * Adds an action to the list of pending actions.\n\t *\n\t * This method returns an action object with an observable message property.\n\t * The action object can be later used in the {@link #remove} method. It also allows you to change the message.\n\t *\n\t * @param {String} message The action message.\n\t * @returns {Object} An observable object that represents a pending action.\n\t */\n\tadd( message ) {\n\t\tif ( typeof message !== 'string' ) {\n\t\t\t/**\n\t\t\t * The message must be a string.\n\t\t\t *\n\t\t\t * @error pendingactions-add-invalid-message\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'pendingactions-add-invalid-message: The message must be a string.', this );\n\t\t}\n\n\t\tconst action = Object.create( ObservableMixin );\n\n\t\taction.set( 'message', message );\n\t\tthis._actions.add( action );\n\t\tthis.hasAny = true;\n\n\t\treturn action;\n\t}\n\n\t/**\n\t * Removes an action from the list of pending actions.\n\t *\n\t * @param {Object} action An action object.\n\t */\n\tremove( action ) {\n\t\tthis._actions.remove( action );\n\t\tthis.hasAny = !!this._actions.length;\n\t}\n\n\t/**\n\t * Returns the first action from the list or null when list is empty\n\t *\n\t * returns {Object|null} The pending action object.\n\t */\n\tget first() {\n\t\treturn this._actions.get( 0 );\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this._actions[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Fired when an action is added to the list.\n\t *\n\t * @event add\n\t * @param {Object} action The added action.\n\t */\n\n\t/**\n\t * Fired when an action is removed from the list.\n\t *\n\t * @event remove\n\t * @param {Object} action The removed action.\n\t */\n}\n"]}]}