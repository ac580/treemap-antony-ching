{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGNvcmUvZWRpdGluZ2tleXN0cm9rZWhhbmRsZXIKICovCmltcG9ydCBLZXlzdHJva2VIYW5kbGVyIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2tleXN0cm9rZWhhbmRsZXInOwovKioKICogQSBrZXlzdHJva2UgaGFuZGxlciBmb3IgZWRpdG9yIGVkaXRpbmcuIEl0cyBpbnN0YW5jZSBpcyBhdmFpbGFibGUKICogaW4ge0BsaW5rIG1vZHVsZTpjb3JlL2VkaXRvci9lZGl0b3J+RWRpdG9yI2tleXN0cm9rZXN9IHNvIHBsdWdpbnMKICogY2FuIHJlZ2lzdGVyIHRoZWlyIGtleXN0cm9rZXMuCiAqCiAqIEUuZy4gYW4gdW5kbyBwbHVnaW4gd291bGQgZG8gdGhpczoKICoKICoJCWVkaXRvci5rZXlzdHJva2VzLnNldCggJ0N0cmwrWicsICd1bmRvJyApOwogKgkJZWRpdG9yLmtleXN0cm9rZXMuc2V0KCAnQ3RybCtTaGlmdCtaJywgJ3JlZG8nICk7CiAqCQllZGl0b3Iua2V5c3Ryb2tlcy5zZXQoICdDdHJsK1knLCAncmVkbycgKTsKICoKICogQGV4dGVuZHMgbW9kdWxlOnV0aWxzL2tleXN0cm9rZWhhbmRsZXJ+S2V5c3Ryb2tlSGFuZGxlcgogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVkaXRpbmdLZXlzdHJva2VIYW5kbGVyIGV4dGVuZHMgS2V5c3Ryb2tlSGFuZGxlciB7CiAgLyoqCiAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiB0aGUga2V5c3Ryb2tlIGhhbmRsZXIuCiAgICoKICAgKiBAcGFyYW0ge21vZHVsZTpjb3JlL2VkaXRvci9lZGl0b3J+RWRpdG9yfSBlZGl0b3IKICAgKi8KICBjb25zdHJ1Y3RvcihlZGl0b3IpIHsKICAgIHN1cGVyKCk7CiAgICAvKioKICAgICAqIFRoZSBlZGl0b3IgaW5zdGFuY2UuCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAbWVtYmVyIHttb2R1bGU6Y29yZS9lZGl0b3IvZWRpdG9yfkVkaXRvcn0KICAgICAqLwoKICAgIHRoaXMuZWRpdG9yID0gZWRpdG9yOwogIH0KICAvKioKICAgKiBSZWdpc3RlcnMgYSBoYW5kbGVyIGZvciB0aGUgc3BlY2lmaWVkIGtleXN0cm9rZS4KICAgKgogICAqIFRoZSBoYW5kbGVyIGNhbiBiZSBzcGVjaWZpZWQgYXMgYSBjb21tYW5kIG5hbWUgb3IgYSBjYWxsYmFjay4KICAgKgogICAqIEBwYXJhbSB7U3RyaW5nfEFycmF5LjxTdHJpbmd8TnVtYmVyPn0ga2V5c3Ryb2tlIEtleXN0cm9rZSBkZWZpbmVkIGluIGEgZm9ybWF0IGFjY2VwdGVkIGJ5CiAgICogdGhlIHtAbGluayBtb2R1bGU6dXRpbHMva2V5Ym9hcmR+cGFyc2VLZXlzdHJva2V9IGZ1bmN0aW9uLgogICAqIEBwYXJhbSB7RnVuY3Rpb258U3RyaW5nfSBjYWxsYmFjayBJZiBhIHN0cmluZyBpcyBwYXNzZWQsIHRoZW4gdGhlIGtleXN0cm9rZSB3aWxsCiAgICoge0BsaW5rIG1vZHVsZTpjb3JlL2VkaXRvci9lZGl0b3J+RWRpdG9yI2V4ZWN1dGUgZXhlY3V0ZSBhIGNvbW1hbmR9LgogICAqIElmIGEgZnVuY3Rpb24sIHRoZW4gaXQgd2lsbCBiZSBjYWxsZWQgd2l0aCB0aGUKICAgKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L29ic2VydmVyL2tleW9ic2VydmVyfktleUV2ZW50RGF0YSBrZXkgZXZlbnQgZGF0YX0gb2JqZWN0IGFuZAogICAqIGEgYGNhbmNlbCgpYCBoZWxwZXIgdG8gYm90aCBgcHJldmVudERlZmF1bHQoKWAgYW5kIGBzdG9wUHJvcGFnYXRpb24oKWAgb2YgdGhlIGV2ZW50LgogICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gQWRkaXRpb25hbCBvcHRpb25zLgogICAqIEBwYXJhbSB7bW9kdWxlOnV0aWxzL3ByaW9yaXRpZXN+UHJpb3JpdHlTdHJpbmd8TnVtYmVyfSBbb3B0aW9ucy5wcmlvcml0eT0nbm9ybWFsJ10gVGhlIHByaW9yaXR5IG9mIHRoZSBrZXlzdHJva2UKICAgKiBjYWxsYmFjay4gVGhlIGhpZ2hlciB0aGUgcHJpb3JpdHkgdmFsdWUgdGhlIHNvb25lciB0aGUgY2FsbGJhY2sgd2lsbCBiZSBleGVjdXRlZC4gS2V5c3Ryb2tlcyBoYXZpbmcgdGhlIHNhbWUgcHJpb3JpdHkKICAgKiBhcmUgY2FsbGVkIGluIHRoZSBvcmRlciB0aGV5IHdlcmUgYWRkZWQuCiAgICovCgoKICBzZXQoa2V5c3Ryb2tlLCBjYWxsYmFjaywgb3B0aW9ucyA9IHt9KSB7CiAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09ICdzdHJpbmcnKSB7CiAgICAgIGNvbnN0IGNvbW1hbmROYW1lID0gY2FsbGJhY2s7CgogICAgICBjYWxsYmFjayA9IChldnREYXRhLCBjYW5jZWwpID0+IHsKICAgICAgICB0aGlzLmVkaXRvci5leGVjdXRlKGNvbW1hbmROYW1lKTsKICAgICAgICBjYW5jZWwoKTsKICAgICAgfTsKICAgIH0KCiAgICBzdXBlci5zZXQoa2V5c3Ryb2tlLCBjYWxsYmFjaywgb3B0aW9ucyk7CiAgfQoKfQ=="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js"],"names":["KeystrokeHandler","EditingKeystrokeHandler","constructor","editor","set","keystroke","callback","options","commandName","evtData","cancel","execute"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,gBAAP,MAA6B,gDAA7B;AAEA;;;;;;;;;;;;;;AAaA,eAAe,MAAMC,uBAAN,SAAsCD,gBAAtC,CAAuD;AACrE;;;;;AAKAE,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB;AAEA;;;;;;;AAMA,SAAKA,MAAL,GAAcA,MAAd;AACA;AAED;;;;;;;;;;;;;;;;;;;AAiBAC,EAAAA,GAAG,CAAEC,SAAF,EAAaC,QAAb,EAAuBC,OAAO,GAAG,EAAjC,EAAsC;AACxC,QAAK,OAAOD,QAAP,IAAmB,QAAxB,EAAmC;AAClC,YAAME,WAAW,GAAGF,QAApB;;AAEAA,MAAAA,QAAQ,GAAG,CAAEG,OAAF,EAAWC,MAAX,KAAuB;AACjC,aAAKP,MAAL,CAAYQ,OAAZ,CAAqBH,WAArB;AACAE,QAAAA,MAAM;AACN,OAHD;AAIA;;AAED,UAAMN,GAAN,CAAWC,SAAX,EAAsBC,QAAtB,EAAgCC,OAAhC;AACA;;AA9CoE","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editingkeystrokehandler\n */\n\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\n/**\n * A keystroke handler for editor editing. Its instance is available\n * in {@link module:core/editor/editor~Editor#keystrokes} so plugins\n * can register their keystrokes.\n *\n * E.g. an undo plugin would do this:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+Z', 'undo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Shift+Z', 'redo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Y', 'redo' );\n *\n * @extends module:utils/keystrokehandler~KeystrokeHandler\n */\nexport default class EditingKeystrokeHandler extends KeystrokeHandler {\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor\n\t */\n\tconstructor( editor ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The editor instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:core/editor/editor~Editor}\n\t\t */\n\t\tthis.editor = editor;\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * The handler can be specified as a command name or a callback.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function|String} callback If a string is passed, then the keystroke will\n\t * {@link module:core/editor/editor~Editor#execute execute a command}.\n\t * If a function, then it will be called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a `cancel()` helper to both `preventDefault()` and `stopPropagation()` of the event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n\t * are called in the order they were added.\n\t */\n\tset( keystroke, callback, options = {} ) {\n\t\tif ( typeof callback == 'string' ) {\n\t\t\tconst commandName = callback;\n\n\t\t\tcallback = ( evtData, cancel ) => {\n\t\t\t\tthis.editor.execute( commandName );\n\t\t\t\tcancel();\n\t\t\t};\n\t\t}\n\n\t\tsuper.set( keystroke, callback, options );\n\t}\n}\n"]}]}