{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/fontsize/fontsizeui.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/fontsize/fontsizeui.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGZvbnQvZm9udHNpemUvZm9udHNpemV1aQogKi8KaW1wb3J0IFBsdWdpbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LWNvcmUvc3JjL3BsdWdpbic7CmltcG9ydCBNb2RlbCBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXVpL3NyYy9tb2RlbCc7CmltcG9ydCBDb2xsZWN0aW9uIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2NvbGxlY3Rpb24nOwppbXBvcnQgeyBjcmVhdGVEcm9wZG93biwgYWRkTGlzdFRvRHJvcGRvd24gfSBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXVpL3NyYy9kcm9wZG93bi91dGlscyc7CmltcG9ydCB7IG5vcm1hbGl6ZU9wdGlvbnMgfSBmcm9tICcuL3V0aWxzJzsKaW1wb3J0IHsgRk9OVF9TSVpFIH0gZnJvbSAnLi4vdXRpbHMnOwppbXBvcnQgZm9udFNpemVJY29uIGZyb20gJy4uLy4uL3RoZW1lL2ljb25zL2ZvbnQtc2l6ZS5zdmcnOwppbXBvcnQgJy4uLy4uL3RoZW1lL2ZvbnRzaXplLmNzcyc7Ci8qKgogKiBUaGUgZm9udCBzaXplIFVJIHBsdWdpbi4gSXQgaW50cm9kdWNlcyB0aGUgYCdmb250U2l6ZSdgIGRyb3Bkb3duLgogKgogKiBAZXh0ZW5kcyBtb2R1bGU6Y29yZS9wbHVnaW5+UGx1Z2luCiAqLwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9udFNpemVVSSBleHRlbmRzIFBsdWdpbiB7CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KICBpbml0KCkgewogICAgY29uc3QgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICBjb25zdCB0ID0gZWRpdG9yLnQ7CgogICAgY29uc3Qgb3B0aW9ucyA9IHRoaXMuX2dldExvY2FsaXplZE9wdGlvbnMoKTsKCiAgICBjb25zdCBjb21tYW5kID0gZWRpdG9yLmNvbW1hbmRzLmdldChGT05UX1NJWkUpOyAvLyBSZWdpc3RlciBVSSBjb21wb25lbnQuCgogICAgZWRpdG9yLnVpLmNvbXBvbmVudEZhY3RvcnkuYWRkKEZPTlRfU0laRSwgbG9jYWxlID0+IHsKICAgICAgY29uc3QgZHJvcGRvd25WaWV3ID0gY3JlYXRlRHJvcGRvd24obG9jYWxlKTsKICAgICAgYWRkTGlzdFRvRHJvcGRvd24oZHJvcGRvd25WaWV3LCBfcHJlcGFyZUxpc3RPcHRpb25zKG9wdGlvbnMsIGNvbW1hbmQpKTsgLy8gQ3JlYXRlIGRyb3Bkb3duIG1vZGVsLgoKICAgICAgZHJvcGRvd25WaWV3LmJ1dHRvblZpZXcuc2V0KHsKICAgICAgICBsYWJlbDogdCgnRm9udCBTaXplJyksCiAgICAgICAgaWNvbjogZm9udFNpemVJY29uLAogICAgICAgIHRvb2x0aXA6IHRydWUKICAgICAgfSk7CiAgICAgIGRyb3Bkb3duVmlldy5leHRlbmRUZW1wbGF0ZSh7CiAgICAgICAgYXR0cmlidXRlczogewogICAgICAgICAgY2xhc3M6IFsnY2stZm9udC1zaXplLWRyb3Bkb3duJ10KICAgICAgICB9CiAgICAgIH0pOwogICAgICBkcm9wZG93blZpZXcuYmluZCgnaXNFbmFibGVkJykudG8oY29tbWFuZCk7IC8vIEV4ZWN1dGUgY29tbWFuZCB3aGVuIGFuIGl0ZW0gZnJvbSB0aGUgZHJvcGRvd24gaXMgc2VsZWN0ZWQuCgogICAgICB0aGlzLmxpc3RlblRvKGRyb3Bkb3duVmlldywgJ2V4ZWN1dGUnLCBldnQgPT4gewogICAgICAgIGVkaXRvci5leGVjdXRlKGV2dC5zb3VyY2UuY29tbWFuZE5hbWUsIHsKICAgICAgICAgIHZhbHVlOiBldnQuc291cmNlLmNvbW1hbmRQYXJhbQogICAgICAgIH0pOwogICAgICAgIGVkaXRvci5lZGl0aW5nLnZpZXcuZm9jdXMoKTsKICAgICAgfSk7CiAgICAgIHJldHVybiBkcm9wZG93blZpZXc7CiAgICB9KTsKICB9CiAgLyoqCiAgICogUmV0dXJucyBvcHRpb25zIGFzIGRlZmluZWQgaW4gYGNvbmZpZy5mb250U2l6ZS5vcHRpb25zYCBidXQgcHJvY2Vzc2VkIHRvIGFjY291bnQgZm9yCiAgICogZWRpdG9yIGxvY2FsaXphdGlvbiwgaS5lLiB0byBkaXNwbGF5IHtAbGluayBtb2R1bGU6Zm9udC9mb250c2l6ZX5Gb250U2l6ZU9wdGlvbn0KICAgKiBpbiB0aGUgY29ycmVjdCBsYW5ndWFnZS4KICAgKgogICAqIE5vdGU6IFRoZSByZWFzb24gYmVoaW5kIHRoaXMgbWV0aG9kIGlzIHRoYXQgdGhlcmUgaXMgbm8gd2F5IHRvIHVzZSB7QGxpbmsgbW9kdWxlOnV0aWxzL2xvY2FsZX5Mb2NhbGUjdH0KICAgKiB3aGVuIHRoZSB1c2VyIGNvbmZpZ3VyYXRpb24gaXMgZGVmaW5lZCBiZWNhdXNlIHRoZSBlZGl0b3IgZG9lcyBub3QgZXhpc3QgeWV0LgogICAqCiAgICogQHByaXZhdGUKICAgKiBAcmV0dXJucyB7QXJyYXkuPG1vZHVsZTpmb250L2ZvbnRzaXplfkZvbnRTaXplT3B0aW9uPn0uCiAgICovCgoKICBfZ2V0TG9jYWxpemVkT3B0aW9ucygpIHsKICAgIGNvbnN0IGVkaXRvciA9IHRoaXMuZWRpdG9yOwogICAgY29uc3QgdCA9IGVkaXRvci50OwogICAgY29uc3QgbG9jYWxpemVkVGl0bGVzID0gewogICAgICBEZWZhdWx0OiB0KCdEZWZhdWx0JyksCiAgICAgIFRpbnk6IHQoJ1RpbnknKSwKICAgICAgU21hbGw6IHQoJ1NtYWxsJyksCiAgICAgIEJpZzogdCgnQmlnJyksCiAgICAgIEh1Z2U6IHQoJ0h1Z2UnKQogICAgfTsKICAgIGNvbnN0IG9wdGlvbnMgPSBub3JtYWxpemVPcHRpb25zKGVkaXRvci5jb25maWcuZ2V0KEZPTlRfU0laRSkub3B0aW9ucyk7CiAgICByZXR1cm4gb3B0aW9ucy5tYXAob3B0aW9uID0+IHsKICAgICAgY29uc3QgdGl0bGUgPSBsb2NhbGl6ZWRUaXRsZXNbb3B0aW9uLnRpdGxlXTsKCiAgICAgIGlmICh0aXRsZSAmJiB0aXRsZSAhPSBvcHRpb24udGl0bGUpIHsKICAgICAgICAvLyBDbG9uZSB0aGUgb3B0aW9uIHRvIGF2b2lkIGFsdGVyaW5nIHRoZSBvcmlnaW5hbCBgbmFtZWRQcmVzZXRzYCBmcm9tIGAuL3V0aWxzLmpzYC4KICAgICAgICBvcHRpb24gPSBPYmplY3QuYXNzaWduKHt9LCBvcHRpb24sIHsKICAgICAgICAgIHRpdGxlCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBvcHRpb247CiAgICB9KTsKICB9Cgp9IC8vIFByZXBhcmVzIEZvbnRTaXplIGRyb3Bkb3duIGl0ZW1zLgovLyBAcHJpdmF0ZQovLyBAcGFyYW0ge0FycmF5Ljxtb2R1bGU6Zm9udC9mb250c2l6ZX5Gb250U2l6ZU9wdGlvbj59IG9wdGlvbnMKLy8gQHBhcmFtIHttb2R1bGU6Zm9udC9mb250c2l6ZS9mb250c2l6ZWNvbW1hbmR+Rm9udFNpemVDb21tYW5kfSBjb21tYW5kCgpmdW5jdGlvbiBfcHJlcGFyZUxpc3RPcHRpb25zKG9wdGlvbnMsIGNvbW1hbmQpIHsKICBjb25zdCBpdGVtRGVmaW5pdGlvbnMgPSBuZXcgQ29sbGVjdGlvbigpOwoKICBmb3IgKGNvbnN0IG9wdGlvbiBvZiBvcHRpb25zKSB7CiAgICBjb25zdCBkZWYgPSB7CiAgICAgIHR5cGU6ICdidXR0b24nLAogICAgICBtb2RlbDogbmV3IE1vZGVsKHsKICAgICAgICBjb21tYW5kTmFtZTogRk9OVF9TSVpFLAogICAgICAgIGNvbW1hbmRQYXJhbTogb3B0aW9uLm1vZGVsLAogICAgICAgIGxhYmVsOiBvcHRpb24udGl0bGUsCiAgICAgICAgY2xhc3M6ICdjay1mb250c2l6ZS1vcHRpb24nLAogICAgICAgIHdpdGhUZXh0OiB0cnVlCiAgICAgIH0pCiAgICB9OwoKICAgIGlmIChvcHRpb24udmlldyAmJiBvcHRpb24udmlldy5zdHlsZXMpIHsKICAgICAgZGVmLm1vZGVsLnNldCgnbGFiZWxTdHlsZScsIGBmb250LXNpemU6JHtvcHRpb24udmlldy5zdHlsZXNbJ2ZvbnQtc2l6ZSddfWApOwogICAgfQoKICAgIGlmIChvcHRpb24udmlldyAmJiBvcHRpb24udmlldy5jbGFzc2VzKSB7CiAgICAgIGRlZi5tb2RlbC5zZXQoJ2NsYXNzJywgYCR7ZGVmLm1vZGVsLmNsYXNzfSAke29wdGlvbi52aWV3LmNsYXNzZXN9YCk7CiAgICB9CgogICAgZGVmLm1vZGVsLmJpbmQoJ2lzT24nKS50byhjb21tYW5kLCAndmFsdWUnLCB2YWx1ZSA9PiB2YWx1ZSA9PT0gb3B0aW9uLm1vZGVsKTsgLy8gQWRkIHRoZSBvcHRpb24gdG8gdGhlIGNvbGxlY3Rpb24uCgogICAgaXRlbURlZmluaXRpb25zLmFkZChkZWYpOwogIH0KCiAgcmV0dXJuIGl0ZW1EZWZpbml0aW9uczsKfQ=="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/fontsize/fontsizeui.js"],"names":["Plugin","Model","Collection","createDropdown","addListToDropdown","normalizeOptions","FONT_SIZE","fontSizeIcon","FontSizeUI","init","editor","t","options","_getLocalizedOptions","command","commands","get","ui","componentFactory","add","locale","dropdownView","_prepareListOptions","buttonView","set","label","icon","tooltip","extendTemplate","attributes","class","bind","to","listenTo","evt","execute","source","commandName","value","commandParam","editing","view","focus","localizedTitles","Default","Tiny","Small","Big","Huge","config","map","option","title","Object","assign","itemDefinitions","def","type","model","withText","styles","classes"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontsize/fontsizeui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n\nimport { createDropdown, addListToDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { normalizeOptions } from './utils';\nimport { FONT_SIZE } from '../utils';\n\nimport fontSizeIcon from '../../theme/icons/font-size.svg';\nimport '../../theme/fontsize.css';\n\n/**\n * The font size UI plugin. It introduces the `'fontSize'` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontSizeUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst options = this._getLocalizedOptions();\n\n\t\tconst command = editor.commands.get( FONT_SIZE );\n\n\t\t// Register UI component.\n\t\teditor.ui.componentFactory.add( FONT_SIZE, locale => {\n\t\t\tconst dropdownView = createDropdown( locale );\n\t\t\taddListToDropdown( dropdownView, _prepareListOptions( options, command ) );\n\n\t\t\t// Create dropdown model.\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\tlabel: t( 'Font Size' ),\n\t\t\t\ticon: fontSizeIcon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tdropdownView.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck-font-size-dropdown'\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdropdownView.bind( 'isEnabled' ).to( command );\n\n\t\t\t// Execute command when an item from the dropdown is selected.\n\t\t\tthis.listenTo( dropdownView, 'execute', evt => {\n\t\t\t\teditor.execute( evt.source.commandName, { value: evt.source.commandParam } );\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\t}\n\n\t/**\n\t * Returns options as defined in `config.fontSize.options` but processed to account for\n\t * editor localization, i.e. to display {@link module:font/fontsize~FontSizeOption}\n\t * in the correct language.\n\t *\n\t * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n\t * when the user configuration is defined because the editor does not exist yet.\n\t *\n\t * @private\n\t * @returns {Array.<module:font/fontsize~FontSizeOption>}.\n\t */\n\t_getLocalizedOptions() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst localizedTitles = {\n\t\t\tDefault: t( 'Default' ),\n\t\t\tTiny: t( 'Tiny' ),\n\t\t\tSmall: t( 'Small' ),\n\t\t\tBig: t( 'Big' ),\n\t\t\tHuge: t( 'Huge' )\n\t\t};\n\n\t\tconst options = normalizeOptions( editor.config.get( FONT_SIZE ).options );\n\n\t\treturn options.map( option => {\n\t\t\tconst title = localizedTitles[ option.title ];\n\n\t\t\tif ( title && title != option.title ) {\n\t\t\t\t// Clone the option to avoid altering the original `namedPresets` from `./utils.js`.\n\t\t\t\toption = Object.assign( {}, option, { title } );\n\t\t\t}\n\n\t\t\treturn option;\n\t\t} );\n\t}\n}\n\n// Prepares FontSize dropdown items.\n// @private\n// @param {Array.<module:font/fontsize~FontSizeOption>} options\n// @param {module:font/fontsize/fontsizecommand~FontSizeCommand} command\nfunction _prepareListOptions( options, command ) {\n\tconst itemDefinitions = new Collection();\n\n\tfor ( const option of options ) {\n\t\tconst def = {\n\t\t\ttype: 'button',\n\t\t\tmodel: new Model( {\n\t\t\t\tcommandName: FONT_SIZE,\n\t\t\t\tcommandParam: option.model,\n\t\t\t\tlabel: option.title,\n\t\t\t\tclass: 'ck-fontsize-option',\n\t\t\t\twithText: true\n\t\t\t} )\n\t\t};\n\n\t\tif ( option.view && option.view.styles ) {\n\t\t\tdef.model.set( 'labelStyle', `font-size:${ option.view.styles[ 'font-size' ] }` );\n\t\t}\n\n\t\tif ( option.view && option.view.classes ) {\n\t\t\tdef.model.set( 'class', `${ def.model.class } ${ option.view.classes }` );\n\t\t}\n\n\t\tdef.model.bind( 'isOn' ).to( command, 'value', value => value === option.model );\n\n\t\t// Add the option to the collection.\n\t\titemDefinitions.add( def );\n\t}\n\n\treturn itemDefinitions;\n}\n"]}]}