{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadcommand.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadcommand.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KaW1wb3J0IEZpbGVSZXBvc2l0b3J5IGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXBsb2FkL3NyYy9maWxlcmVwb3NpdG9yeSc7CmltcG9ydCBDb21tYW5kIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtY29yZS9zcmMvY29tbWFuZCc7CmltcG9ydCB7IGluc2VydEltYWdlLCBpc0ltYWdlQWxsb3dlZCB9IGZyb20gJy4uL2ltYWdlL3V0aWxzJzsKLyoqCiAqIEBtb2R1bGUgaW1hZ2UvaW1hZ2V1cGxvYWQvaW1hZ2V1cGxvYWRjb21tYW5kCiAqLwoKLyoqCiAqIFRoZSBpbWFnZSB1cGxvYWQgY29tbWFuZC4KICoKICogVGhlIGNvbW1hbmQgaXMgcmVnaXN0ZXJlZCBieSB0aGUge0BsaW5rIG1vZHVsZTppbWFnZS9pbWFnZXVwbG9hZC9pbWFnZXVwbG9hZGVkaXRpbmd+SW1hZ2VVcGxvYWRFZGl0aW5nfSBwbHVnaW4gYXMgYCdpbWFnZVVwbG9hZCdgLgogKgogKiBJbiBvcmRlciB0byB1cGxvYWQgYW4gaW1hZ2UgYXQgdGhlIGN1cnJlbnQgc2VsZWN0aW9uIHBvc2l0aW9uCiAqIChhY2NvcmRpbmcgdG8gdGhlIHtAbGluayBtb2R1bGU6d2lkZ2V0L3V0aWxzfmZpbmRPcHRpbWFsSW5zZXJ0aW9uUG9zaXRpb259IGFsZ29yaXRobSksCiAqIGV4ZWN1dGUgdGhlIGNvbW1hbmQgYW5kIHBhc3MgdGhlIG5hdGl2ZSBpbWFnZSBmaWxlIGluc3RhbmNlOgogKgogKgkJdGhpcy5saXN0ZW5UbyggZWRpdG9yLmVkaXRpbmcudmlldy5kb2N1bWVudCwgJ2NsaXBib2FyZElucHV0JywgKCBldnQsIGRhdGEgKSA9PiB7CiAqCQkJLy8gQXNzdW1pbmcgdGhhdCBvbmx5IGltYWdlcyB3ZXJlIHBhc3RlZDoKICoJCQljb25zdCBpbWFnZXMgPSBBcnJheS5mcm9tKCBkYXRhLmRhdGFUcmFuc2Zlci5maWxlcyApOwogKgogKgkJCS8vIFVwbG9hZCB0aGUgZmlyc3QgaW1hZ2U6CiAqCQkJZWRpdG9yLmV4ZWN1dGUoICdpbWFnZVVwbG9hZCcsIHsgZmlsZTogaW1hZ2VzWyAwIF0gfSApOwogKgkJfSApOwogKgogKiBJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGluc2VydCBtdWx0aXBsZSBpbWFnZXMgYXQgb25jZToKICoKICoJCWVkaXRvci5leGVjdXRlKCAnaW1hZ2VVcGxvYWQnLCB7CiAqCQkJZmlsZTogWwogKgkJCQlmaWxlMSwKICoJCQkJZmlsZTIKICoJCQldCiAqCQl9ICk7CiAqCiAqIEBleHRlbmRzIG1vZHVsZTpjb3JlL2NvbW1hbmR+Q29tbWFuZAogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEltYWdlVXBsb2FkQ29tbWFuZCBleHRlbmRzIENvbW1hbmQgewogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgcmVmcmVzaCgpIHsKICAgIHRoaXMuaXNFbmFibGVkID0gaXNJbWFnZUFsbG93ZWQodGhpcy5lZGl0b3IubW9kZWwpOwogIH0KICAvKioKICAgKiBFeGVjdXRlcyB0aGUgY29tbWFuZC4KICAgKgogICAqIEBmaXJlcyBleGVjdXRlCiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgT3B0aW9ucyBmb3IgdGhlIGV4ZWN1dGVkIGNvbW1hbmQuCiAgICogQHBhcmFtIHtGaWxlfEFycmF5LjxGaWxlPn0gb3B0aW9ucy5maWxlIFRoZSBpbWFnZSBmaWxlIG9yIGFuIGFycmF5IG9mIGltYWdlIGZpbGVzIHRvIHVwbG9hZC4KICAgKi8KCgogIGV4ZWN1dGUob3B0aW9ucykgewogICAgY29uc3QgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICBjb25zdCBtb2RlbCA9IGVkaXRvci5tb2RlbDsKICAgIGNvbnN0IGZpbGVSZXBvc2l0b3J5ID0gZWRpdG9yLnBsdWdpbnMuZ2V0KEZpbGVSZXBvc2l0b3J5KTsKICAgIG1vZGVsLmNoYW5nZSh3cml0ZXIgPT4gewogICAgICBjb25zdCBmaWxlc1RvVXBsb2FkID0gQXJyYXkuaXNBcnJheShvcHRpb25zLmZpbGUpID8gb3B0aW9ucy5maWxlIDogW29wdGlvbnMuZmlsZV07CgogICAgICBmb3IgKGNvbnN0IGZpbGUgb2YgZmlsZXNUb1VwbG9hZCkgewogICAgICAgIHVwbG9hZEltYWdlKHdyaXRlciwgbW9kZWwsIGZpbGVSZXBvc2l0b3J5LCBmaWxlKTsKICAgICAgfQogICAgfSk7CiAgfQoKfSAvLyBIYW5kbGVzIHVwbG9hZGluZyBzaW5nbGUgZmlsZS4KLy8KLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL3dyaXRlcn53cml0ZXJ9IHdyaXRlcgovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvbW9kZWx+TW9kZWx9IG1vZGVsCi8vIEBwYXJhbSB7RmlsZX0gZmlsZQoKZnVuY3Rpb24gdXBsb2FkSW1hZ2Uod3JpdGVyLCBtb2RlbCwgZmlsZVJlcG9zaXRvcnksIGZpbGUpIHsKICBjb25zdCBsb2FkZXIgPSBmaWxlUmVwb3NpdG9yeS5jcmVhdGVMb2FkZXIoZmlsZSk7IC8vIERvIG5vdCB0aHJvdyB3aGVuIHVwbG9hZCBhZGFwdGVyIGlzIG5vdCBzZXQuIEZpbGVSZXBvc2l0b3J5IHdpbGwgbG9nIGFuIGVycm9yIGFueXdheS4KCiAgaWYgKCFsb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIGluc2VydEltYWdlKHdyaXRlciwgbW9kZWwsIHsKICAgIHVwbG9hZElkOiBsb2FkZXIuaWQKICB9KTsKfQ=="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-image/src/imageupload/imageuploadcommand.js"],"names":["FileRepository","Command","insertImage","isImageAllowed","ImageUploadCommand","refresh","isEnabled","editor","model","execute","options","fileRepository","plugins","get","change","writer","filesToUpload","Array","isArray","file","uploadImage","loader","createLoader","uploadId","id"],"mappings":"AAAA;;;;AAKA,OAAOA,cAAP,MAA2B,+CAA3B;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,gBAA5C;AAEA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,eAAe,MAAMC,kBAAN,SAAiCH,OAAjC,CAAyC;AACvD;;;AAGAI,EAAAA,OAAO,GAAG;AACT,SAAKC,SAAL,GAAiBH,cAAc,CAAE,KAAKI,MAAL,CAAYC,KAAd,CAA/B;AACA;AAED;;;;;;;;;AAOAC,EAAAA,OAAO,CAAEC,OAAF,EAAY;AAClB,UAAMH,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AAEA,UAAMG,cAAc,GAAGJ,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAoBb,cAApB,CAAvB;AAEAQ,IAAAA,KAAK,CAACM,MAAN,CAAcC,MAAM,IAAI;AACvB,YAAMC,aAAa,GAAGC,KAAK,CAACC,OAAN,CAAeR,OAAO,CAACS,IAAvB,IAAgCT,OAAO,CAACS,IAAxC,GAA+C,CAAET,OAAO,CAACS,IAAV,CAArE;;AAEA,WAAM,MAAMA,IAAZ,IAAoBH,aAApB,EAAoC;AACnCI,QAAAA,WAAW,CAAEL,MAAF,EAAUP,KAAV,EAAiBG,cAAjB,EAAiCQ,IAAjC,CAAX;AACA;AACD,KAND;AAOA;;AA5BsD,C,CA+BxD;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAsBL,MAAtB,EAA8BP,KAA9B,EAAqCG,cAArC,EAAqDQ,IAArD,EAA4D;AAC3D,QAAME,MAAM,GAAGV,cAAc,CAACW,YAAf,CAA6BH,IAA7B,CAAf,CAD2D,CAG3D;;AACA,MAAK,CAACE,MAAN,EAAe;AACd;AACA;;AAEDnB,EAAAA,WAAW,CAAEa,MAAF,EAAUP,KAAV,EAAiB;AAAEe,IAAAA,QAAQ,EAAEF,MAAM,CAACG;AAAnB,GAAjB,CAAX;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport FileRepository from '@ckeditor/ckeditor5-upload/src/filerepository';\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { insertImage, isImageAllowed } from '../image/utils';\n\n/**\n * @module image/imageupload/imageuploadcommand\n */\n\n/**\n * The image upload command.\n *\n * The command is registered by the {@link module:image/imageupload/imageuploadediting~ImageUploadEditing} plugin as `'imageUpload'`.\n *\n * In order to upload an image at the current selection position\n * (according to the {@link module:widget/utils~findOptimalInsertionPosition} algorithm),\n * execute the command and pass the native image file instance:\n *\n *\t\tthis.listenTo( editor.editing.view.document, 'clipboardInput', ( evt, data ) => {\n *\t\t\t// Assuming that only images were pasted:\n *\t\t\tconst images = Array.from( data.dataTransfer.files );\n *\n *\t\t\t// Upload the first image:\n *\t\t\teditor.execute( 'imageUpload', { file: images[ 0 ] } );\n *\t\t} );\n *\n * It is also possible to insert multiple images at once:\n *\n *\t\teditor.execute( 'imageUpload', {\n *\t\t\tfile: [\n *\t\t\t\tfile1,\n *\t\t\t\tfile2\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:core/command~Command\n */\nexport default class ImageUploadCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = isImageAllowed( this.editor.model );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} options Options for the executed command.\n\t * @param {File|Array.<File>} options.file The image file or an array of image files to upload.\n\t */\n\texecute( options ) {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tconst fileRepository = editor.plugins.get( FileRepository );\n\n\t\tmodel.change( writer => {\n\t\t\tconst filesToUpload = Array.isArray( options.file ) ? options.file : [ options.file ];\n\n\t\t\tfor ( const file of filesToUpload ) {\n\t\t\t\tuploadImage( writer, model, fileRepository, file );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n// Handles uploading single file.\n//\n// @param {module:engine/model/writer~writer} writer\n// @param {module:engine/model/model~Model} model\n// @param {File} file\nfunction uploadImage( writer, model, fileRepository, file ) {\n\tconst loader = fileRepository.createLoader( file );\n\n\t// Do not throw when upload adapter is not set. FileRepository will log an error anyway.\n\tif ( !loader ) {\n\t\treturn;\n\t}\n\n\tinsertImage( writer, model, { uploadId: loader.id } );\n}\n"]}]}