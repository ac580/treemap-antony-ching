{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-media-embed/src/mediaregistry.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-media-embed/src/mediaregistry.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-media-embed/src/mediaregistry.js"],"names":["mediaPlaceholderIcon","TooltipView","IconView","Template","attachLinkToDocumentation","mediaPlaceholderIconViewBox","MediaRegistry","constructor","locale","config","providers","extraProviders","removedProviders","Set","removeProviders","providerDefinitions","concat","filter","provider","name","console","warn","has","hasMedia","url","_getMedia","getMediaViewElement","writer","options","getViewElement","Media","trim","definition","previewRenderer","html","pattern","Array","isArray","subPattern","match","_getUrlMatches","rawUrl","replace","_getValidUrl","_t","t","_match","_previewRenderer","attributes","renderForEditingView","renderMediaPreview","class","mediaHtml","_getPreviewHtml","createUIElement","domDocument","domElement","toDomElement","innerHTML","createEmptyElement","_getPlaceholderHtml","tooltip","icon","text","content","viewBox","placeholder","tag","children","target","rel","href","render","outerHTML"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/mediaregistry\n */\n\n/* globals console */\n\nimport mediaPlaceholderIcon from '../theme/icons/media-placeholder.svg';\nimport TooltipView from '@ckeditor/ckeditor5-ui/src/tooltip/tooltipview';\nimport IconView from '@ckeditor/ckeditor5-ui/src/icon/iconview';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport { attachLinkToDocumentation } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nconst mediaPlaceholderIconViewBox = '0 0 64 42';\n\n/**\n * A bridge between the raw media content provider definitions and the editor view content.\n *\n * It helps translating media URLs to corresponding {@link module:engine/view/element~Element view elements}.\n *\n * Mostly used by the {@link module:media-embed/mediaembedediting~MediaEmbedEditing} plugin.\n */\nexport default class MediaRegistry {\n\t/**\n\t * Creates an instance of the {@link module:media-embed/mediaregistry~MediaRegistry} class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The localization services instance.\n\t * @param {module:media-embed/mediaembed~MediaEmbedConfig} config The configuration of the media embed feature.\n\t */\n\tconstructor( locale, config ) {\n\t\tconst providers = config.providers;\n\t\tconst extraProviders = config.extraProviders || [];\n\t\tconst removedProviders = new Set( config.removeProviders );\n\t\tconst providerDefinitions = providers\n\t\t\t.concat( extraProviders )\n\t\t\t.filter( provider => {\n\t\t\t\tconst name = provider.name;\n\n\t\t\t\tif ( !name ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * One of the providers (or extra providers) specified in the media embed configuration\n\t\t\t\t\t * has no name and will not be used by the editor. In order to get this media\n\t\t\t\t\t * provider working, double check your editor configuration.\n\t\t\t\t\t *\n\t\t\t\t\t * @warning media-embed-no-provider-name\n\t\t\t\t\t */\n\t\t\t\t\tconsole.warn( attachLinkToDocumentation(\n\t\t\t\t\t\t'media-embed-no-provider-name: The configured media provider has no name and cannot be used.'\n\t\t\t\t\t), { provider } );\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn !removedProviders.has( name );\n\t\t\t} );\n\n\t\t/**\n\t\t * The locale {@link module:utils/locale~Locale} instance.\n\t\t *\n\t\t * @member {module:utils/locale~Locale}\n\t\t */\n\t\tthis.locale = locale;\n\n\t\t/**\n\t\t * The media provider definitions available for the registry. Usually corresponding with the\n\t\t * {@link module:media-embed/mediaembed~MediaEmbedConfig media configuration}.\n\t\t *\n\t\t * @member {Array}\n\t\t */\n\t\tthis.providerDefinitions = providerDefinitions;\n\t}\n\n\t/**\n\t * Checks whether the passed URL is representing a certain media type allowed in the editor.\n\t *\n\t * @param {String} url The URL to be checked\n\t * @returns {Boolean}\n\t */\n\thasMedia( url ) {\n\t\treturn !!this._getMedia( url );\n\t}\n\n\t/**\n\t * For the given media URL string and options, it returns the {@link module:engine/view/element~Element view element}\n\t * representing that media.\n\t *\n\t * **Note:** If no URL is specified, an empty view element is returned.\n\t *\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer The view writer used to produce a view element.\n\t * @param {String} url The URL to be translated into a view element.\n\t * @param {Object} options\n\t * @param {String} [options.renderMediaPreview]\n\t * @param {String} [options.renderForEditingView]\n\t * @returns {module:engine/view/element~Element}\n\t */\n\tgetMediaViewElement( writer, url, options ) {\n\t\treturn this._getMedia( url ).getViewElement( writer, options );\n\t}\n\n\t/**\n\t * Returns a `Media` instance for the given URL.\n\t *\n\t * @protected\n\t * @param {String} url The URL of the media.\n\t * @returns {module:media-embed/mediaregistry~Media|null} The `Media` instance or `null` when there is none.\n\t */\n\t_getMedia( url ) {\n\t\tif ( !url ) {\n\t\t\treturn new Media( this.locale );\n\t\t}\n\n\t\turl = url.trim();\n\n\t\tfor ( const definition of this.providerDefinitions ) {\n\t\t\tconst previewRenderer = definition.html;\n\t\t\tlet pattern = definition.url;\n\n\t\t\tif ( !Array.isArray( pattern ) ) {\n\t\t\t\tpattern = [ pattern ];\n\t\t\t}\n\n\t\t\tfor ( const subPattern of pattern ) {\n\t\t\t\tconst match = this._getUrlMatches( url, subPattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\treturn new Media( this.locale, url, match, previewRenderer );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Tries to match `url` to `pattern`.\n\t *\n\t * @private\n\t * @param {String} url The URL of the media.\n\t * @param {RegExp} pattern The pattern that should accept the media URL.\n\t * @returns {Array|null}\n\t */\n\t_getUrlMatches( url, pattern ) {\n\t\t// 1. Try to match without stripping the protocol and \"www\" subdomain.\n\t\tlet match = url.match( pattern );\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\n\t\t// 2. Try to match after stripping the protocol.\n\t\tlet rawUrl = url.replace( /^https?:\\/\\//, '' );\n\t\tmatch = rawUrl.match( pattern );\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\n\t\t// 3. Try to match after stripping the \"www\" subdomain.\n\t\trawUrl = rawUrl.replace( /^www\\./, '' );\n\t\tmatch = rawUrl.match( pattern );\n\n\t\tif ( match ) {\n\t\t\treturn match;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n/**\n * Represents media defined by the provider configuration.\n *\n * It can be rendered to the {@link module:engine/view/element~Element view element} and used in the editing or data pipeline.\n *\n * @private\n */\nclass Media {\n\tconstructor( locale, url, match, previewRenderer ) {\n\t\t/**\n\t\t * The URL this Media instance represents.\n\t\t *\n\t\t * @member {String}\n\t\t */\n\t\tthis.url = this._getValidUrl( url );\n\n\t\t/**\n\t\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t\t *\n\t\t * @see module:utils/locale~Locale#t\n\t\t * @method\n\t\t */\n\t\tthis._t = locale.t;\n\n\t\t/**\n\t\t * The output of the `RegExp.match` which validated the {@link #url} of this media.\n\t\t *\n\t\t * @member {Object}\n\t\t */\n\t\tthis._match = match;\n\n\t\t/**\n\t\t * The function returning the HTML string preview of this media.\n\t\t *\n\t\t * @member {Function}\n\t\t */\n\t\tthis._previewRenderer = previewRenderer;\n\t}\n\n\t/**\n\t * Returns the view element representation of the media.\n\t *\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer The view writer used to produce a view element.\n\t * @param {Object} options\n\t * @param {String} [options.renderMediaPreview]\n\t * @param {String} [options.renderForEditingView]\n\t * @returns {module:engine/view/element~Element}\n\t */\n\tgetViewElement( writer, options ) {\n\t\tconst attributes = {};\n\n\t\tif ( options.renderForEditingView || ( options.renderMediaPreview && this.url && this._previewRenderer ) ) {\n\t\t\tif ( this.url ) {\n\t\t\t\tattributes[ 'data-oembed-url' ] = this.url;\n\t\t\t}\n\n\t\t\tif ( options.renderForEditingView ) {\n\t\t\t\tattributes.class = 'ck-media__wrapper';\n\t\t\t}\n\n\t\t\tconst mediaHtml = this._getPreviewHtml( options );\n\n\t\t\treturn writer.createUIElement( 'div', attributes, function( domDocument ) {\n\t\t\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t\t\tdomElement.innerHTML = mediaHtml;\n\n\t\t\t\treturn domElement;\n\t\t\t} );\n\t\t} else {\n\t\t\tif ( this.url ) {\n\t\t\t\tattributes.url = this.url;\n\t\t\t}\n\n\t\t\treturn writer.createEmptyElement( 'oembed', attributes );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the HTML string of the media content preview.\n\t *\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer The view writer used to produce a view element.\n\t * @param {Object} options\n\t * @param {String} [options.renderForEditingView]\n\t * @returns {String}\n\t */\n\t_getPreviewHtml( options ) {\n\t\tif ( this._previewRenderer ) {\n\t\t\treturn this._previewRenderer( this._match );\n\t\t} else {\n\t\t\t// The placeholder only makes sense for editing view and media which have URLs.\n\t\t\t// Placeholder is never displayed in data and URL-less media have no content.\n\t\t\tif ( this.url && options.renderForEditingView ) {\n\t\t\t\treturn this._getPlaceholderHtml();\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\t}\n\n\t/**\n\t * Returns the placeholder HTML when the media has no content preview.\n\t *\n\t * @returns {String}\n\t */\n\t_getPlaceholderHtml() {\n\t\tconst tooltip = new TooltipView();\n\t\tconst icon = new IconView();\n\n\t\ttooltip.text = this._t( 'Open media in new tab' );\n\t\ticon.content = mediaPlaceholderIcon;\n\t\ticon.viewBox = mediaPlaceholderIconViewBox;\n\n\t\tconst placeholder = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck ck-reset_all ck-media__placeholder'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-media__placeholder__icon'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [ icon ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-media__placeholder__url',\n\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\trel: 'noopener noreferrer',\n\t\t\t\t\t\thref: this.url\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttag: 'span',\n\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\tclass: 'ck-media__placeholder__url__text'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tchildren: [ this.url ]\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttooltip\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t} ).render();\n\n\t\treturn placeholder.outerHTML;\n\t}\n\n\t/**\n\t * Returns the full URL to the specified media.\n\t *\n\t * @param {String} url The URL of the media.\n\t * @returns {String|null}\n\t */\n\t_getValidUrl( url ) {\n\t\tif ( !url ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( url.match( /^https?/ ) ) {\n\t\t\treturn url;\n\t\t}\n\n\t\treturn 'https://' + url;\n\t}\n}\n"]}]}