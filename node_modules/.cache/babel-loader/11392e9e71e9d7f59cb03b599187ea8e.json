{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGVuZ2luZS9jb250cm9sbGVyL2VkaXRpbmdjb250cm9sbGVyCiAqLwppbXBvcnQgUm9vdEVkaXRhYmxlRWxlbWVudCBmcm9tICcuLi92aWV3L3Jvb3RlZGl0YWJsZWVsZW1lbnQnOwppbXBvcnQgVmlldyBmcm9tICcuLi92aWV3L3ZpZXcnOwppbXBvcnQgTWFwcGVyIGZyb20gJy4uL2NvbnZlcnNpb24vbWFwcGVyJzsKaW1wb3J0IERvd25jYXN0RGlzcGF0Y2hlciBmcm9tICcuLi9jb252ZXJzaW9uL2Rvd25jYXN0ZGlzcGF0Y2hlcic7CmltcG9ydCB7IGNsZWFyQXR0cmlidXRlcywgY29udmVydENvbGxhcHNlZFNlbGVjdGlvbiwgY29udmVydFJhbmdlU2VsZWN0aW9uLCBpbnNlcnRUZXh0LCByZW1vdmUgfSBmcm9tICcuLi9jb252ZXJzaW9uL2Rvd25jYXN0aGVscGVycyc7CmltcG9ydCBPYnNlcnZhYmxlTWl4aW4gZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS11dGlscy9zcmMvb2JzZXJ2YWJsZW1peGluJzsKaW1wb3J0IG1peCBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXV0aWxzL3NyYy9taXgnOwppbXBvcnQgeyBjb252ZXJ0U2VsZWN0aW9uQ2hhbmdlIH0gZnJvbSAnLi4vY29udmVyc2lvbi91cGNhc3RoZWxwZXJzJzsgLy8gQGlmIENLX0RFQlVHX0VOR0lORSAvLyBjb25zdCB7IGR1bXBUcmVlcywgaW5pdERvY3VtZW50RHVtcGluZyB9ID0gcmVxdWlyZSggJy4uL2Rldi11dGlscy91dGlscycgKTsKCi8qKgogKiBDb250cm9sbGVyIGZvciB0aGUgZWRpdGluZyBwaXBlbGluZS4gVGhlIGVkaXRpbmcgcGlwZWxpbmUgY29udHJvbHMge0BsaW5rIH5FZGl0aW5nQ29udHJvbGxlciNtb2RlbCBtb2RlbH0gcmVuZGVyaW5nLAogKiBpbmNsdWRpbmcgc2VsZWN0aW9uIGhhbmRsaW5nLiBJdCBhbHNvIGNyZWF0ZXMgdGhlIHtAbGluayB+RWRpdGluZ0NvbnRyb2xsZXIjdmlldyB2aWV3fSB3aGljaCBidWlsZHMgYQogKiBicm93c2VyLWluZGVwZW5kZW50IHZpcnR1YWxpemF0aW9uIG92ZXIgdGhlIERPTSBlbGVtZW50cy4gVGhlIGVkaXRpbmcgY29udHJvbGxlciBhbHNvIGF0dGFjaGVzIGRlZmF1bHQgY29udmVydGVycy4KICoKICogQG1peGVzIG1vZHVsZTp1dGlscy9vYnNlcnZhYmxlbWl4aW5+T2JzZXJ2YWJsZU1peGluCiAqLwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgRWRpdGluZ0NvbnRyb2xsZXIgewogIC8qKgogICAqIENyZWF0ZXMgYW4gZWRpdGluZyBjb250cm9sbGVyIGluc3RhbmNlLgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL21vZGVsfk1vZGVsfSBtb2RlbCBFZGl0aW5nIG1vZGVsLgogICAqLwogIGNvbnN0cnVjdG9yKG1vZGVsKSB7CiAgICAvKioKICAgICAqIEVkaXRvciBtb2RlbC4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBtZW1iZXIge21vZHVsZTplbmdpbmUvbW9kZWwvbW9kZWx+TW9kZWx9CiAgICAgKi8KICAgIHRoaXMubW9kZWwgPSBtb2RlbDsKICAgIC8qKgogICAgICogRWRpdGluZyB2aWV3IGNvbnRyb2xsZXIuCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAbWVtYmVyIHttb2R1bGU6ZW5naW5lL3ZpZXcvdmlld35WaWV3fQogICAgICovCgogICAgdGhpcy52aWV3ID0gbmV3IFZpZXcoKTsKICAgIC8qKgogICAgICogTWFwcGVyIHdoaWNoIGRlc2NyaWJlcyB0aGUgbW9kZWwtdmlldyBiaW5kaW5nLgogICAgICoKICAgICAqIEByZWFkb25seQogICAgICogQG1lbWJlciB7bW9kdWxlOmVuZ2luZS9jb252ZXJzaW9uL21hcHBlcn5NYXBwZXJ9CiAgICAgKi8KCiAgICB0aGlzLm1hcHBlciA9IG5ldyBNYXBwZXIoKTsKICAgIC8qKgogICAgICogRG93bmNhc3QgZGlzcGF0Y2hlciB0aGF0IGNvbnZlcnRzIGNoYW5nZXMgZnJvbSB0aGUgbW9kZWwgdG8ge0BsaW5rICN2aWV3IHRoZSBlZGl0aW5nIHZpZXd9LgogICAgICoKICAgICAqIEByZWFkb25seQogICAgICogQG1lbWJlciB7bW9kdWxlOmVuZ2luZS9jb252ZXJzaW9uL2Rvd25jYXN0ZGlzcGF0Y2hlcn5Eb3duY2FzdERpc3BhdGNoZXJ9ICNkb3duY2FzdERpc3BhdGNoZXIKICAgICAqLwoKICAgIHRoaXMuZG93bmNhc3REaXNwYXRjaGVyID0gbmV3IERvd25jYXN0RGlzcGF0Y2hlcih7CiAgICAgIG1hcHBlcjogdGhpcy5tYXBwZXIKICAgIH0pOwogICAgY29uc3QgZG9jID0gdGhpcy5tb2RlbC5kb2N1bWVudDsKICAgIGNvbnN0IHNlbGVjdGlvbiA9IGRvYy5zZWxlY3Rpb247CiAgICBjb25zdCBtYXJrZXJzID0gdGhpcy5tb2RlbC5tYXJrZXJzOyAvLyBXaGVuIHBsdWdpbnMgbGlzdGVuIG9uIG1vZGVsIGNoYW5nZXMgKG9uIHNlbGVjdGlvbiBjaGFuZ2UsIHBvc3QgZml4ZXJzLCBldGMpIGFuZCBjaGFuZ2UgdGhlIHZpZXcgYXMgYSByZXN1bHQgb2YKICAgIC8vIG1vZGVsJ3MgY2hhbmdlLCB0aGV5IG1pZ2h0IHRyaWdnZXIgdmlldyByZW5kZXJpbmcgYmVmb3JlIHRoZSBjb252ZXJzaW9uIGlzIGNvbXBsZXRlZCAoZS5nLiBiZWZvcmUgdGhlIHNlbGVjdGlvbgogICAgLy8gaXMgY29udmVydGVkKS4gV2UgZGlzYWJsZSByZW5kZXJpbmcgZm9yIHRoZSBsZW5ndGggb2YgdGhlIG91dGVybW9zdCBtb2RlbCBjaGFuZ2UoKSBibG9jayB0byBwcmV2ZW50IHRoYXQuCiAgICAvLwogICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ja2VkaXRvci9ja2VkaXRvcjUtZW5naW5lL2lzc3Vlcy8xNTI4CgogICAgdGhpcy5saXN0ZW5Ubyh0aGlzLm1vZGVsLCAnX2JlZm9yZUNoYW5nZXMnLCAoKSA9PiB7CiAgICAgIHRoaXMudmlldy5fZGlzYWJsZVJlbmRlcmluZyh0cnVlKTsKICAgIH0sIHsKICAgICAgcHJpb3JpdHk6ICdoaWdoZXN0JwogICAgfSk7CiAgICB0aGlzLmxpc3RlblRvKHRoaXMubW9kZWwsICdfYWZ0ZXJDaGFuZ2VzJywgKCkgPT4gewogICAgICB0aGlzLnZpZXcuX2Rpc2FibGVSZW5kZXJpbmcoZmFsc2UpOwogICAgfSwgewogICAgICBwcmlvcml0eTogJ2xvd2VzdCcKICAgIH0pOyAvLyBXaGVuZXZlciBtb2RlbCBkb2N1bWVudCBpcyBjaGFuZ2VkLCBjb252ZXJ0IHRob3NlIGNoYW5nZXMgdG8gdGhlIHZpZXcgKHVzaW5nIG1vZGVsLkRvY3VtZW50I2RpZmZlcikuCiAgICAvLyBEbyBpdCBvbiAnbG93JyBwcmlvcml0eSwgc28gY2hhbmdlcyBhcmUgY29udmVydGVkIGFmdGVyIG90aGVyIGxpc3RlbmVycyBkaWQgdGhlaXIgam9iLgogICAgLy8gQWxzbyBjb252ZXJ0IG1vZGVsIHNlbGVjdGlvbi4KCiAgICB0aGlzLmxpc3RlblRvKGRvYywgJ2NoYW5nZScsICgpID0+IHsKICAgICAgdGhpcy52aWV3LmNoYW5nZSh3cml0ZXIgPT4gewogICAgICAgIHRoaXMuZG93bmNhc3REaXNwYXRjaGVyLmNvbnZlcnRDaGFuZ2VzKGRvYy5kaWZmZXIsIG1hcmtlcnMsIHdyaXRlcik7CiAgICAgICAgdGhpcy5kb3duY2FzdERpc3BhdGNoZXIuY29udmVydFNlbGVjdGlvbihzZWxlY3Rpb24sIG1hcmtlcnMsIHdyaXRlcik7CiAgICAgIH0pOwogICAgfSwgewogICAgICBwcmlvcml0eTogJ2xvdycKICAgIH0pOyAvLyBDb252ZXJ0IHNlbGVjdGlvbiBmcm9tIHRoZSB2aWV3IHRvIHRoZSBtb2RlbCB3aGVuIGl0IGNoYW5nZXMgaW4gdGhlIHZpZXcuCgogICAgdGhpcy5saXN0ZW5Ubyh0aGlzLnZpZXcuZG9jdW1lbnQsICdzZWxlY3Rpb25DaGFuZ2UnLCBjb252ZXJ0U2VsZWN0aW9uQ2hhbmdlKHRoaXMubW9kZWwsIHRoaXMubWFwcGVyKSk7IC8vIEF0dGFjaCBkZWZhdWx0IG1vZGVsIGNvbnZlcnRlcnMuCgogICAgdGhpcy5kb3duY2FzdERpc3BhdGNoZXIub24oJ2luc2VydDokdGV4dCcsIGluc2VydFRleHQoKSwgewogICAgICBwcmlvcml0eTogJ2xvd2VzdCcKICAgIH0pOwogICAgdGhpcy5kb3duY2FzdERpc3BhdGNoZXIub24oJ3JlbW92ZScsIHJlbW92ZSgpLCB7CiAgICAgIHByaW9yaXR5OiAnbG93JwogICAgfSk7IC8vIEF0dGFjaCBkZWZhdWx0IG1vZGVsIHNlbGVjdGlvbiBjb252ZXJ0ZXJzLgoKICAgIHRoaXMuZG93bmNhc3REaXNwYXRjaGVyLm9uKCdzZWxlY3Rpb24nLCBjbGVhckF0dHJpYnV0ZXMoKSwgewogICAgICBwcmlvcml0eTogJ2xvdycKICAgIH0pOwogICAgdGhpcy5kb3duY2FzdERpc3BhdGNoZXIub24oJ3NlbGVjdGlvbicsIGNvbnZlcnRSYW5nZVNlbGVjdGlvbigpLCB7CiAgICAgIHByaW9yaXR5OiAnbG93JwogICAgfSk7CiAgICB0aGlzLmRvd25jYXN0RGlzcGF0Y2hlci5vbignc2VsZWN0aW9uJywgY29udmVydENvbGxhcHNlZFNlbGVjdGlvbigpLCB7CiAgICAgIHByaW9yaXR5OiAnbG93JwogICAgfSk7IC8vIEJpbmRzIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvZG9jdW1lbnR+RG9jdW1lbnQjcm9vdHMgdmlldyByb290cyBjb2xsZWN0aW9ufSB0bwogICAgLy8ge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvZG9jdW1lbnR+RG9jdW1lbnQjcm9vdHMgbW9kZWwgcm9vdHMgY29sbGVjdGlvbn0gc28gY3JlYXRpbmcKICAgIC8vIG1vZGVsIHJvb3QgYXV0b21hdGljYWxseSBjcmVhdGVzIGNvcnJlc3BvbmRpbmcgdmlldyByb290LgoKICAgIHRoaXMudmlldy5kb2N1bWVudC5yb290cy5iaW5kVG8odGhpcy5tb2RlbC5kb2N1bWVudC5yb290cykudXNpbmcocm9vdCA9PiB7CiAgICAgIC8vICRncmF2ZXlhcmQgaXMgYSBzcGVjaWFsIHJvb3QgdGhhdCBoYXMgbm8gcmVmbGVjdGlvbiBpbiB0aGUgdmlldy4KICAgICAgaWYgKHJvb3Qucm9vdE5hbWUgPT0gJyRncmF2ZXlhcmQnKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIGNvbnN0IHZpZXdSb290ID0gbmV3IFJvb3RFZGl0YWJsZUVsZW1lbnQocm9vdC5uYW1lKTsKICAgICAgdmlld1Jvb3Qucm9vdE5hbWUgPSByb290LnJvb3ROYW1lOwogICAgICB2aWV3Um9vdC5fZG9jdW1lbnQgPSB0aGlzLnZpZXcuZG9jdW1lbnQ7CiAgICAgIHRoaXMubWFwcGVyLmJpbmRFbGVtZW50cyhyb290LCB2aWV3Um9vdCk7CiAgICAgIHJldHVybiB2aWV3Um9vdDsKICAgIH0pOyAvLyBAaWYgQ0tfREVCVUdfRU5HSU5FIC8vIGluaXREb2N1bWVudER1bXBpbmcoIHRoaXMubW9kZWwuZG9jdW1lbnQgKTsKICAgIC8vIEBpZiBDS19ERUJVR19FTkdJTkUgLy8gaW5pdERvY3VtZW50RHVtcGluZyggdGhpcy52aWV3LmRvY3VtZW50ICk7CiAgICAvLyBAaWYgQ0tfREVCVUdfRU5HSU5FIC8vIGR1bXBUcmVlcyggdGhpcy5tb2RlbC5kb2N1bWVudCwgdGhpcy5tb2RlbC5kb2N1bWVudC52ZXJzaW9uICk7CiAgICAvLyBAaWYgQ0tfREVCVUdfRU5HSU5FIC8vIGR1bXBUcmVlcyggdGhpcy52aWV3LmRvY3VtZW50LCB0aGlzLm1vZGVsLmRvY3VtZW50LnZlcnNpb24gKTsKICAgIC8vIEBpZiBDS19ERUJVR19FTkdJTkUgLy8gdGhpcy5tb2RlbC5kb2N1bWVudC5vbiggJ2NoYW5nZScsICgpID0+IHsKICAgIC8vIEBpZiBDS19ERUJVR19FTkdJTkUgLy8JZHVtcFRyZWVzKCB0aGlzLnZpZXcuZG9jdW1lbnQsIHRoaXMubW9kZWwuZG9jdW1lbnQudmVyc2lvbiApOwogICAgLy8gQGlmIENLX0RFQlVHX0VOR0lORSAvLyB9LCB7IHByaW9yaXR5OiAnbG93ZXN0JyB9ICk7CiAgfQogIC8qKgogICAqIFJlbW92ZXMgYWxsIGV2ZW50IGxpc3RlbmVycyBhdHRhY2hlZCB0byB0aGUgYEVkaXRpbmdDb250cm9sbGVyYC4gRGVzdHJveXMgYWxsIG9iamVjdHMgY3JlYXRlZAogICAqIGJ5IGBFZGl0aW5nQ29udHJvbGxlcmAgdGhhdCBuZWVkIHRvIGJlIGRlc3Ryb3llZC4KICAgKi8KCgogIGRlc3Ryb3koKSB7CiAgICB0aGlzLnZpZXcuZGVzdHJveSgpOwogICAgdGhpcy5zdG9wTGlzdGVuaW5nKCk7CiAgfQoKfQptaXgoRWRpdGluZ0NvbnRyb2xsZXIsIE9ic2VydmFibGVNaXhpbik7"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js"],"names":["RootEditableElement","View","Mapper","DowncastDispatcher","clearAttributes","convertCollapsedSelection","convertRangeSelection","insertText","remove","ObservableMixin","mix","convertSelectionChange","EditingController","constructor","model","view","mapper","downcastDispatcher","doc","document","selection","markers","listenTo","_disableRendering","priority","change","writer","convertChanges","differ","convertSelection","on","roots","bindTo","using","root","rootName","viewRoot","name","_document","bindElements","destroy","stopListening"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/controller/editingcontroller\n */\n\nimport RootEditableElement from '../view/rooteditableelement';\nimport View from '../view/view';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { clearAttributes, convertCollapsedSelection, convertRangeSelection, insertText, remove } from '../conversion/downcasthelpers';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { convertSelectionChange } from '../conversion/upcasthelpers';\n\n// @if CK_DEBUG_ENGINE // const { dumpTrees, initDocumentDumping } = require( '../dev-utils/utils' );\n\n/**\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\n * including selection handling. It also creates the {@link ~EditingController#view view} which builds a\n * browser-independent virtualization over the DOM elements. The editing controller also attaches default converters.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class EditingController {\n\t/**\n\t * Creates an editing controller instance.\n\t *\n\t * @param {module:engine/model/model~Model} model Editing model.\n\t */\n\tconstructor( model ) {\n\t\t/**\n\t\t * Editor model.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model}\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * Editing view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View}\n\t\t */\n\t\tthis.view = new View();\n\n\t\t/**\n\t\t * Mapper which describes the model-view binding.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/mapper~Mapper}\n\t\t */\n\t\tthis.mapper = new Mapper();\n\n\t\t/**\n\t\t * Downcast dispatcher that converts changes from the model to {@link #view the editing view}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #downcastDispatcher\n\t\t */\n\t\tthis.downcastDispatcher = new DowncastDispatcher( {\n\t\t\tmapper: this.mapper\n\t\t} );\n\n\t\tconst doc = this.model.document;\n\t\tconst selection = doc.selection;\n\t\tconst markers = this.model.markers;\n\n\t\t// When plugins listen on model changes (on selection change, post fixers, etc) and change the view as a result of\n\t\t// model's change, they might trigger view rendering before the conversion is completed (e.g. before the selection\n\t\t// is converted). We disable rendering for the length of the outermost model change() block to prevent that.\n\t\t//\n\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/1528\n\t\tthis.listenTo( this.model, '_beforeChanges', () => {\n\t\t\tthis.view._disableRendering( true );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this.model, '_afterChanges', () => {\n\t\t\tthis.view._disableRendering( false );\n\t\t}, { priority: 'lowest' } );\n\n\t\t// Whenever model document is changed, convert those changes to the view (using model.Document#differ).\n\t\t// Do it on 'low' priority, so changes are converted after other listeners did their job.\n\t\t// Also convert model selection.\n\t\tthis.listenTo( doc, 'change', () => {\n\t\t\tthis.view.change( writer => {\n\t\t\t\tthis.downcastDispatcher.convertChanges( doc.differ, markers, writer );\n\t\t\t\tthis.downcastDispatcher.convertSelection( selection, markers, writer );\n\t\t\t} );\n\t\t}, { priority: 'low' } );\n\n\t\t// Convert selection from the view to the model when it changes in the view.\n\t\tthis.listenTo( this.view.document, 'selectionChange', convertSelectionChange( this.model, this.mapper ) );\n\n\t\t// Attach default model converters.\n\t\tthis.downcastDispatcher.on( 'insert:$text', insertText(), { priority: 'lowest' } );\n\t\tthis.downcastDispatcher.on( 'remove', remove(), { priority: 'low' } );\n\n\t\t// Attach default model selection converters.\n\t\tthis.downcastDispatcher.on( 'selection', clearAttributes(), { priority: 'low' } );\n\t\tthis.downcastDispatcher.on( 'selection', convertRangeSelection(), { priority: 'low' } );\n\t\tthis.downcastDispatcher.on( 'selection', convertCollapsedSelection(), { priority: 'low' } );\n\n\t\t// Binds {@link module:engine/view/document~Document#roots view roots collection} to\n\t\t// {@link module:engine/model/document~Document#roots model roots collection} so creating\n\t\t// model root automatically creates corresponding view root.\n\t\tthis.view.document.roots.bindTo( this.model.document.roots ).using( root => {\n\t\t\t// $graveyard is a special root that has no reflection in the view.\n\t\t\tif ( root.rootName == '$graveyard' ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst viewRoot = new RootEditableElement( root.name );\n\n\t\t\tviewRoot.rootName = root.rootName;\n\t\t\tviewRoot._document = this.view.document;\n\t\t\tthis.mapper.bindElements( root, viewRoot );\n\n\t\t\treturn viewRoot;\n\t\t} );\n\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.model.document );\n\t\t// @if CK_DEBUG_ENGINE // initDocumentDumping( this.view.document );\n\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.model.document, this.model.document.version );\n\t\t// @if CK_DEBUG_ENGINE // dumpTrees( this.view.document, this.model.document.version );\n\n\t\t// @if CK_DEBUG_ENGINE // this.model.document.on( 'change', () => {\n\t\t// @if CK_DEBUG_ENGINE //\tdumpTrees( this.view.document, this.model.document.version );\n\t\t// @if CK_DEBUG_ENGINE // }, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Removes all event listeners attached to the `EditingController`. Destroys all objects created\n\t * by `EditingController` that need to be destroyed.\n\t */\n\tdestroy() {\n\t\tthis.view.destroy();\n\t\tthis.stopListening();\n\t}\n}\n\nmix( EditingController, ObservableMixin );\n"]}]}