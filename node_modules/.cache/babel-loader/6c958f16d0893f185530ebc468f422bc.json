{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHVuZG8vcmVkb2NvbW1hbmQKICovCmltcG9ydCBCYXNlQ29tbWFuZCBmcm9tICcuL2Jhc2Vjb21tYW5kJzsKLyoqCiAqIFRoZSByZWRvIGNvbW1hbmQgc3RvcmVzIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL2JhdGNofkJhdGNoIGJhdGNoZXN9IHRoYXQgd2VyZSB1c2VkIHRvIHVuZG8gYSBiYXRjaCBieQogKiB7QGxpbmsgbW9kdWxlOnVuZG8vdW5kb2NvbW1hbmR+VW5kb0NvbW1hbmR9LiBJdCBpcyBhYmxlIHRvIHJlZG8gYSBwcmV2aW91c2x5IHVuZG9uZSBiYXRjaCBieSByZXZlcnNpbmcgdGhlIHVuZG9pbmcKICogYmF0Y2hlcyBjcmVhdGVkIGJ5IGBVbmRvQ29tbWFuZGAuIFRoZSByZXZlcnNlZCBiYXRjaCBpcyB0cmFuc2Zvcm1lZCBieSBhbGwgdGhlIGJhdGNoZXMgZnJvbQogKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS9tb2RlbC9kb2N1bWVudH5Eb2N1bWVudCNoaXN0b3J5IGhpc3Rvcnl9IHRoYXQgaGFwcGVuZWQgYWZ0ZXIgdGhlIHJldmVyc2VkIHVuZG8gYmF0Y2guCiAqCiAqIFRoZSByZWRvIGNvbW1hbmQgYWxzbyB0YWtlcyBjYXJlIG9mIHJlc3RvcmluZyB0aGUge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvZG9jdW1lbnR+RG9jdW1lbnQjc2VsZWN0aW9uIGRvY3VtZW50IHNlbGVjdGlvbn0uCiAqCiAqIEBleHRlbmRzIG1vZHVsZTp1bmRvL2Jhc2Vjb21tYW5kfkJhc2VDb21tYW5kCiAqLwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVkb0NvbW1hbmQgZXh0ZW5kcyBCYXNlQ29tbWFuZCB7CiAgLyoqCiAgICogRXhlY3V0ZXMgdGhlIGNvbW1hbmQuIFRoaXMgbWV0aG9kIHJldmVydHMgdGhlIGxhc3Qge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvYmF0Y2h+QmF0Y2ggYmF0Y2h9IGFkZGVkIHRvCiAgICogdGhlIGNvbW1hbmQncyBzdGFjaywgYXBwbGllcyB0aGUgcmV2ZXJ0ZWQgYW5kIHRyYW5zZm9ybWVkIHZlcnNpb24gb24gdGhlCiAgICoge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvZG9jdW1lbnR+RG9jdW1lbnQgZG9jdW1lbnR9IGFuZCByZW1vdmVzIHRoZSBiYXRjaCBmcm9tIHRoZSBzdGFjay4KICAgKiBUaGVuLCBpdCByZXN0b3JlcyB0aGUge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvZG9jdW1lbnR+RG9jdW1lbnQjc2VsZWN0aW9uIGRvY3VtZW50IHNlbGVjdGlvbn0uCiAgICoKICAgKiBAZmlyZXMgZXhlY3V0ZQogICAqLwogIGV4ZWN1dGUoKSB7CiAgICBjb25zdCBpdGVtID0gdGhpcy5fc3RhY2sucG9wKCk7CgogICAgY29uc3QgcmVkb2luZ0JhdGNoID0gdGhpcy5lZGl0b3IubW9kZWwuY3JlYXRlQmF0Y2goJ3RyYW5zcGFyZW50Jyk7IC8vIEFsbCBjaGFuZ2VzIGhhdmUgdG8gYmUgZG9uZSBpbiBvbmUgYGVucXVldWVDaGFuZ2VgIGNhbGxiYWNrIHNvIG90aGVyIGxpc3RlbmVycyB3aWxsIG5vdCBzdGVwIGJldHdlZW4gY29uc2VjdXRpdmUKICAgIC8vIG9wZXJhdGlvbnMsIG9yIHdvbid0IGRvIGNoYW5nZXMgdG8gdGhlIGRvY3VtZW50IGJlZm9yZSBzZWxlY3Rpb24gaXMgcHJvcGVybHkgcmVzdG9yZWQuCgogICAgdGhpcy5lZGl0b3IubW9kZWwuZW5xdWV1ZUNoYW5nZShyZWRvaW5nQmF0Y2gsICgpID0+IHsKICAgICAgY29uc3QgbGFzdE9wZXJhdGlvbiA9IGl0ZW0uYmF0Y2gub3BlcmF0aW9uc1tpdGVtLmJhdGNoLm9wZXJhdGlvbnMubGVuZ3RoIC0gMV07CiAgICAgIGNvbnN0IG5leHRCYXNlVmVyc2lvbiA9IGxhc3RPcGVyYXRpb24uYmFzZVZlcnNpb24gKyAxOwogICAgICBjb25zdCBvcGVyYXRpb25zID0gdGhpcy5lZGl0b3IubW9kZWwuZG9jdW1lbnQuaGlzdG9yeS5nZXRPcGVyYXRpb25zKG5leHRCYXNlVmVyc2lvbik7CgogICAgICB0aGlzLl9yZXN0b3JlU2VsZWN0aW9uKGl0ZW0uc2VsZWN0aW9uLnJhbmdlcywgaXRlbS5zZWxlY3Rpb24uaXNCYWNrd2FyZCwgb3BlcmF0aW9ucyk7CgogICAgICB0aGlzLl91bmRvKGl0ZW0uYmF0Y2gsIHJlZG9pbmdCYXRjaCk7CiAgICB9KTsKICAgIHRoaXMucmVmcmVzaCgpOwogIH0KCn0="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js"],"names":["BaseCommand","RedoCommand","execute","item","_stack","pop","redoingBatch","editor","model","createBatch","enqueueChange","lastOperation","batch","operations","length","nextBaseVersion","baseVersion","document","history","getOperations","_restoreSelection","selection","ranges","isBackward","_undo","refresh"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,WAAP,MAAwB,eAAxB;AAEA;;;;;;;;;;;AAUA,eAAe,MAAMC,WAAN,SAA0BD,WAA1B,CAAsC;AACpD;;;;;;;;AAQAE,EAAAA,OAAO,GAAG;AACT,UAAMC,IAAI,GAAG,KAAKC,MAAL,CAAYC,GAAZ,EAAb;;AACA,UAAMC,YAAY,GAAG,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,WAAlB,CAA+B,aAA/B,CAArB,CAFS,CAIT;AACA;;AACA,SAAKF,MAAL,CAAYC,KAAZ,CAAkBE,aAAlB,CAAiCJ,YAAjC,EAA+C,MAAM;AACpD,YAAMK,aAAa,GAAGR,IAAI,CAACS,KAAL,CAAWC,UAAX,CAAuBV,IAAI,CAACS,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,GAA+B,CAAtD,CAAtB;AACA,YAAMC,eAAe,GAAGJ,aAAa,CAACK,WAAd,GAA4B,CAApD;AACA,YAAMH,UAAU,GAAG,KAAKN,MAAL,CAAYC,KAAZ,CAAkBS,QAAlB,CAA2BC,OAA3B,CAAmCC,aAAnC,CAAkDJ,eAAlD,CAAnB;;AAEA,WAAKK,iBAAL,CAAwBjB,IAAI,CAACkB,SAAL,CAAeC,MAAvC,EAA+CnB,IAAI,CAACkB,SAAL,CAAeE,UAA9D,EAA0EV,UAA1E;;AACA,WAAKW,KAAL,CAAYrB,IAAI,CAACS,KAAjB,EAAwBN,YAAxB;AACA,KAPD;AASA,SAAKmB,OAAL;AACA;;AAzBmD","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/redocommand\n */\n\nimport BaseCommand from './basecommand';\n\n/**\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\n * batches created by `UndoCommand`. The reversed batch is transformed by all the batches from\n * {@link module:engine/model/document~Document#history history} that happened after the reversed undo batch.\n *\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\nexport default class RedoCommand extends BaseCommand {\n\t/**\n\t * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\n\t * the command's stack, applies the reverted and transformed version on the\n\t * {@link module:engine/model/document~Document document} and removes the batch from the stack.\n\t * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst item = this._stack.pop();\n\t\tconst redoingBatch = this.editor.model.createBatch( 'transparent' );\n\n\t\t// All changes have to be done in one `enqueueChange` callback so other listeners will not step between consecutive\n\t\t// operations, or won't do changes to the document before selection is properly restored.\n\t\tthis.editor.model.enqueueChange( redoingBatch, () => {\n\t\t\tconst lastOperation = item.batch.operations[ item.batch.operations.length - 1 ];\n\t\t\tconst nextBaseVersion = lastOperation.baseVersion + 1;\n\t\t\tconst operations = this.editor.model.document.history.getOperations( nextBaseVersion );\n\n\t\t\tthis._restoreSelection( item.selection.ranges, item.selection.isBackward, operations );\n\t\t\tthis._undo( item.batch, redoingBatch );\n\t\t} );\n\n\t\tthis.refresh();\n\t}\n}\n"]}]}