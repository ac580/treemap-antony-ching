{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-table/src/commands/removecolumncommand.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-table/src/commands/removecolumncommand.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHRhYmxlL2NvbW1hbmRzL3JlbW92ZWNvbHVtbmNvbW1hbmQKICovCmltcG9ydCBDb21tYW5kIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtY29yZS9zcmMvY29tbWFuZCc7CmltcG9ydCBUYWJsZVdhbGtlciBmcm9tICcuLi90YWJsZXdhbGtlcic7CmltcG9ydCB7IGZpbmRBbmNlc3RvciwgdXBkYXRlTnVtZXJpY0F0dHJpYnV0ZSB9IGZyb20gJy4vdXRpbHMnOwovKioKICogVGhlIHJlbW92ZSBjb2x1bW4gY29tbWFuZC4KICoKICogVGhlIGNvbW1hbmQgaXMgcmVnaXN0ZXJlZCBieSB7QGxpbmsgbW9kdWxlOnRhYmxlL3RhYmxlZWRpdGluZ35UYWJsZUVkaXRpbmd9IGFzIGAncmVtb3ZlVGFibGVDb2x1bW4nYCBlZGl0b3IgY29tbWFuZC4KICoKICogVG8gcmVtb3ZlIHRoZSBjb2x1bW4gY29udGFpbmluZyB0aGUgc2VsZWN0ZWQgY2VsbCwgZXhlY3V0ZSB0aGUgY29tbWFuZDoKICoKICoJCWVkaXRvci5leGVjdXRlKCAncmVtb3ZlVGFibGVDb2x1bW4nICk7CiAqCiAqIEBleHRlbmRzIG1vZHVsZTpjb3JlL2NvbW1hbmR+Q29tbWFuZAogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlbW92ZUNvbHVtbkNvbW1hbmQgZXh0ZW5kcyBDb21tYW5kIHsKICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwogIHJlZnJlc2goKSB7CiAgICBjb25zdCBlZGl0b3IgPSB0aGlzLmVkaXRvcjsKICAgIGNvbnN0IHNlbGVjdGlvbiA9IGVkaXRvci5tb2RlbC5kb2N1bWVudC5zZWxlY3Rpb247CiAgICBjb25zdCB0YWJsZVV0aWxzID0gZWRpdG9yLnBsdWdpbnMuZ2V0KCdUYWJsZVV0aWxzJyk7CiAgICBjb25zdCB0YWJsZUNlbGwgPSBmaW5kQW5jZXN0b3IoJ3RhYmxlQ2VsbCcsIHNlbGVjdGlvbi5nZXRGaXJzdFBvc2l0aW9uKCkpOwogICAgdGhpcy5pc0VuYWJsZWQgPSAhIXRhYmxlQ2VsbCAmJiB0YWJsZVV0aWxzLmdldENvbHVtbnModGFibGVDZWxsLnBhcmVudC5wYXJlbnQpID4gMTsKICB9CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KCgogIGV4ZWN1dGUoKSB7CiAgICBjb25zdCBtb2RlbCA9IHRoaXMuZWRpdG9yLm1vZGVsOwogICAgY29uc3Qgc2VsZWN0aW9uID0gbW9kZWwuZG9jdW1lbnQuc2VsZWN0aW9uOwogICAgY29uc3QgZmlyc3RQb3NpdGlvbiA9IHNlbGVjdGlvbi5nZXRGaXJzdFBvc2l0aW9uKCk7CiAgICBjb25zdCB0YWJsZUNlbGwgPSBmaW5kQW5jZXN0b3IoJ3RhYmxlQ2VsbCcsIGZpcnN0UG9zaXRpb24pOwogICAgY29uc3QgdGFibGVSb3cgPSB0YWJsZUNlbGwucGFyZW50OwogICAgY29uc3QgdGFibGUgPSB0YWJsZVJvdy5wYXJlbnQ7CiAgICBjb25zdCBoZWFkaW5nQ29sdW1ucyA9IHRhYmxlLmdldEF0dHJpYnV0ZSgnaGVhZGluZ0NvbHVtbnMnKSB8fCAwOwogICAgY29uc3Qgcm93ID0gdGFibGUuZ2V0Q2hpbGRJbmRleCh0YWJsZVJvdyk7IC8vIENhY2hlIHRoZSB0YWJsZSBiZWZvcmUgcmVtb3Zpbmcgb3IgdXBkYXRpbmcgY29sc3BhbnMuCgogICAgY29uc3QgdGFibGVNYXAgPSBbLi4ubmV3IFRhYmxlV2Fsa2VyKHRhYmxlKV07IC8vIEdldCBjb2x1bW4gaW5kZXggb2YgcmVtb3ZlZCBjb2x1bW4uCgogICAgY29uc3QgY2VsbERhdGEgPSB0YWJsZU1hcC5maW5kKHZhbHVlID0+IHZhbHVlLmNlbGwgPT09IHRhYmxlQ2VsbCk7CiAgICBjb25zdCByZW1vdmVkQ29sdW1uID0gY2VsbERhdGEuY29sdW1uOwogICAgbW9kZWwuY2hhbmdlKHdyaXRlciA9PiB7CiAgICAgIC8vIFVwZGF0ZSBoZWFkaW5nIGNvbHVtbnMgYXR0cmlidXRlIGlmIHJlbW92aW5nIGEgcm93IGZyb20gaGVhZCBzZWN0aW9uLgogICAgICBpZiAoaGVhZGluZ0NvbHVtbnMgJiYgcm93IDw9IGhlYWRpbmdDb2x1bW5zKSB7CiAgICAgICAgd3JpdGVyLnNldEF0dHJpYnV0ZSgnaGVhZGluZ0NvbHVtbnMnLCBoZWFkaW5nQ29sdW1ucyAtIDEsIHRhYmxlKTsKICAgICAgfQoKICAgICAgZm9yIChjb25zdCB7CiAgICAgICAgY2VsbCwKICAgICAgICBjb2x1bW4sCiAgICAgICAgY29sc3BhbgogICAgICB9IG9mIHRhYmxlTWFwKSB7CiAgICAgICAgLy8gSWYgY29sc3BhbmVkIGNlbGwgb3ZlcmxhcHMgcmVtb3ZlZCBjb2x1bW4gZGVjcmVhc2UgaXQncyBzcGFuLgogICAgICAgIGlmIChjb2x1bW4gPD0gcmVtb3ZlZENvbHVtbiAmJiBjb2xzcGFuID4gMSAmJiBjb2x1bW4gKyBjb2xzcGFuID4gcmVtb3ZlZENvbHVtbikgewogICAgICAgICAgdXBkYXRlTnVtZXJpY0F0dHJpYnV0ZSgnY29sc3BhbicsIGNvbHNwYW4gLSAxLCBjZWxsLCB3cml0ZXIpOwogICAgICAgIH0gZWxzZSBpZiAoY29sdW1uID09PSByZW1vdmVkQ29sdW1uKSB7CiAgICAgICAgICAvLyBUaGUgY2VsbCBpbiByZW1vdmVkIGNvbHVtbiBoYXMgY29sc3BhbiBvZiAxLgogICAgICAgICAgd3JpdGVyLnJlbW92ZShjZWxsKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0KCn0="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-table/src/commands/removecolumncommand.js"],"names":["Command","TableWalker","findAncestor","updateNumericAttribute","RemoveColumnCommand","refresh","editor","selection","model","document","tableUtils","plugins","get","tableCell","getFirstPosition","isEnabled","getColumns","parent","execute","firstPosition","tableRow","table","headingColumns","getAttribute","row","getChildIndex","tableMap","cellData","find","value","cell","removedColumn","column","change","writer","setAttribute","colspan","remove"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,OAAP,MAAoB,sCAApB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,YAAT,EAAuBC,sBAAvB,QAAqD,SAArD;AAEA;;;;;;;;;;;;AAWA,eAAe,MAAMC,mBAAN,SAAkCJ,OAAlC,CAA0C;AACxD;;;AAGAK,EAAAA,OAAO,GAAG;AACT,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAaC,QAAb,CAAsBF,SAAxC;AACA,UAAMG,UAAU,GAAGJ,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAoB,YAApB,CAAnB;AAEA,UAAMC,SAAS,GAAGX,YAAY,CAAE,WAAF,EAAeK,SAAS,CAACO,gBAAV,EAAf,CAA9B;AAEA,SAAKC,SAAL,GAAiB,CAAC,CAACF,SAAF,IAAeH,UAAU,CAACM,UAAX,CAAuBH,SAAS,CAACI,MAAV,CAAiBA,MAAxC,IAAmD,CAAnF;AACA;AAED;;;;;AAGAC,EAAAA,OAAO,GAAG;AACT,UAAMV,KAAK,GAAG,KAAKF,MAAL,CAAYE,KAA1B;AACA,UAAMD,SAAS,GAAGC,KAAK,CAACC,QAAN,CAAeF,SAAjC;AAEA,UAAMY,aAAa,GAAGZ,SAAS,CAACO,gBAAV,EAAtB;AAEA,UAAMD,SAAS,GAAGX,YAAY,CAAE,WAAF,EAAeiB,aAAf,CAA9B;AACA,UAAMC,QAAQ,GAAGP,SAAS,CAACI,MAA3B;AACA,UAAMI,KAAK,GAAGD,QAAQ,CAACH,MAAvB;AAEA,UAAMK,cAAc,GAAGD,KAAK,CAACE,YAAN,CAAoB,gBAApB,KAA0C,CAAjE;AACA,UAAMC,GAAG,GAAGH,KAAK,CAACI,aAAN,CAAqBL,QAArB,CAAZ,CAXS,CAaT;;AACA,UAAMM,QAAQ,GAAG,CAAE,GAAG,IAAIzB,WAAJ,CAAiBoB,KAAjB,CAAL,CAAjB,CAdS,CAgBT;;AACA,UAAMM,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAeC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAejB,SAAvC,CAAjB;AACA,UAAMkB,aAAa,GAAGJ,QAAQ,CAACK,MAA/B;AAEAxB,IAAAA,KAAK,CAACyB,MAAN,CAAcC,MAAM,IAAI;AACvB;AACA,UAAKZ,cAAc,IAAIE,GAAG,IAAIF,cAA9B,EAA+C;AAC9CY,QAAAA,MAAM,CAACC,YAAP,CAAqB,gBAArB,EAAuCb,cAAc,GAAG,CAAxD,EAA2DD,KAA3D;AACA;;AAED,WAAM,MAAM;AAAES,QAAAA,IAAF;AAAQE,QAAAA,MAAR;AAAgBI,QAAAA;AAAhB,OAAZ,IAAyCV,QAAzC,EAAoD;AACnD;AACA,YAAKM,MAAM,IAAID,aAAV,IAA2BK,OAAO,GAAG,CAArC,IAA0CJ,MAAM,GAAGI,OAAT,GAAmBL,aAAlE,EAAkF;AACjF5B,UAAAA,sBAAsB,CAAE,SAAF,EAAaiC,OAAO,GAAG,CAAvB,EAA0BN,IAA1B,EAAgCI,MAAhC,CAAtB;AACA,SAFD,MAEO,IAAKF,MAAM,KAAKD,aAAhB,EAAgC;AACtC;AACAG,UAAAA,MAAM,CAACG,MAAP,CAAeP,IAAf;AACA;AACD;AACD,KAfD;AAgBA;;AArDuD","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/removecolumncommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport TableWalker from '../tablewalker';\nimport { findAncestor, updateNumericAttribute } from './utils';\n\n/**\n * The remove column command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as `'removeTableColumn'` editor command.\n *\n * To remove the column containing the selected cell, execute the command:\n *\n *\t\teditor.execute( 'removeTableColumn' );\n *\n * @extends module:core/command~Command\n */\nexport default class RemoveColumnCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\t\tconst tableUtils = editor.plugins.get( 'TableUtils' );\n\n\t\tconst tableCell = findAncestor( 'tableCell', selection.getFirstPosition() );\n\n\t\tthis.isEnabled = !!tableCell && tableUtils.getColumns( tableCell.parent.parent ) > 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst firstPosition = selection.getFirstPosition();\n\n\t\tconst tableCell = findAncestor( 'tableCell', firstPosition );\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst headingColumns = table.getAttribute( 'headingColumns' ) || 0;\n\t\tconst row = table.getChildIndex( tableRow );\n\n\t\t// Cache the table before removing or updating colspans.\n\t\tconst tableMap = [ ...new TableWalker( table ) ];\n\n\t\t// Get column index of removed column.\n\t\tconst cellData = tableMap.find( value => value.cell === tableCell );\n\t\tconst removedColumn = cellData.column;\n\n\t\tmodel.change( writer => {\n\t\t\t// Update heading columns attribute if removing a row from head section.\n\t\t\tif ( headingColumns && row <= headingColumns ) {\n\t\t\t\twriter.setAttribute( 'headingColumns', headingColumns - 1, table );\n\t\t\t}\n\n\t\t\tfor ( const { cell, column, colspan } of tableMap ) {\n\t\t\t\t// If colspaned cell overlaps removed column decrease it's span.\n\t\t\t\tif ( column <= removedColumn && colspan > 1 && column + colspan > removedColumn ) {\n\t\t\t\t\tupdateNumericAttribute( 'colspan', colspan - 1, cell, writer );\n\t\t\t\t} else if ( column === removedColumn ) {\n\t\t\t\t\t// The cell in removed column has colspan of 1.\n\t\t\t\t\twriter.remove( cell );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n"]}]}