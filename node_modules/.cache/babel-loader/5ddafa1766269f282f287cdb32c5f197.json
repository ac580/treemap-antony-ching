{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/thread-loader/dist/cjs.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/antonyching/Desktop/project/new-builder-demo/src/views/Editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/src/views/Editor.vue","mtime":1619261172552},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Editor.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport $ from 'jquery'\r\nexport default {\r\n  name: \"editor\",\r\n  components: {\r\n  },\r\n  data: function(){\r\n      return{\r\n          title: \"Data\",\r\n          rowTitle: \"Row Number\",\r\n          resultTitle: \"Result\",\r\n          jsonModel: \"\",\r\n          isJsonNotValid: true,\r\n          isSizeInvalid: false,\r\n          isAnyNameOver50: false,\r\n          isAnyNameNotStr: false,\r\n          isAnyWeightNotInt: false,\r\n          isAnyValueNotInt: false,\r\n          jsonFormatted: null,\r\n          rowNum: 3,\r\n          containerStr: '',\r\n          showContainer: false,\r\n          sampleJson:[\r\n                { \"name\": \"A\", \"weight\": 3, \"value\": -0.02 }, \r\n                { \"name\": \"B\", \"weight\": 3, \"value\": 0.05 }, \r\n                { \"name\": \"C\", \"weight\": 6, \"value\": 0.015 }, \r\n                { \"name\": \"D\", \"weight\": 2, \"value\": -0.01 }, \r\n                { \"name\": \"E\", \"weight\": 3, \"value\": 0.01 }],    \r\n    }\r\n  },\r\n  created: function(){\r\n  },\r\n  methods: {\r\n        saveModel(){\r\n            this.jsonFormatted = JSON.parse(this.jsonModel);\r\n            if(this.rowNum < 1 || this.rowNum % 1 != 0 || this.rowNum > this.jsonFormatted.length){         \r\n                alert(\"Row Number must be \\n - An Integer that is greater than 0. \\n - Lesser or equal to the array length.\")\r\n            }else{\r\n                this.setupContainerProp();\r\n            }\r\n        },\r\n        setupContainerProp(){\r\n            let totalWeight = 0;\r\n            let rowNumberCeil = 0;\r\n            this.jsonFormatted.forEach(item => {\r\n                totalWeight += item.weight;\r\n            });\r\n\r\n\r\n            rowNumberCeil = Math.ceil(totalWeight/this.rowNum);\r\n\r\n            let filterOutOfBoundWeight = this.jsonFormatted.findIndex(item=>item['weight'] > Math.ceil(totalWeight/this.rowNum));\r\n            if(filterOutOfBoundWeight != -1){\r\n                alert(\"Weight:\"+this.jsonFormatted[filterOutOfBoundWeight]['weight']+\" is out of bound!, The maximum weight for this case is \"+Math.ceil(totalWeight/this.rowNum)\r\n                +\" otherwise one row's width will be greater than 100%.\");\r\n            }\r\n            else{\r\n                for(let i in this.jsonFormatted){\r\n                    this.jsonFormatted[i]['widthPercent'] = parseFloat((100/(rowNumberCeil/this.jsonFormatted[i]['weight'])).toFixed(1));\r\n                    this.jsonFormatted[i]['formatValue'] = (this.roundToTwo(this.jsonFormatted[i]['value']*100))+\"%\";\r\n                    if(this.jsonFormatted[i]['value'] >=0){\r\n                        this.jsonFormatted[i]['bgColor'] = 'green';\r\n                    }else{\r\n                        this.jsonFormatted[i]['bgColor'] = 'red';\r\n                    }\r\n                }\r\n\r\n                this.jsonFormatted = this.jsonFormatted.sort((a,b) => (a['widthPercent'] < b[['widthPercent']]) ? 1 : ((b['widthPercent'] < a['widthPercent']) ? -1 : 0));\r\n                this.renderContainer();\r\n            }\r\n        },\r\n        renderContainer(){\r\n            this.fixOrderInList();\r\n        \r\n            this.jsonFormatted = this.jsonFormatted.sort((a,b) => (a['order'] > b[['order']]) ? 1 : ((b['order'] > a['order']) ? -1 : 0));\r\n            let findOutOfBoundRow = this.jsonFormatted.findIndex(item=>item.order == this.rowNum);\r\n            if(findOutOfBoundRow != -1){\r\n                alert(\"Out of bound! Can't fill in all objects within \"+ this.rowNum +\" row(s).\")\r\n            }else{\r\n                this.showContainer = true;\r\n                this.containerStr = '';\r\n                for(let i in this.jsonFormatted){\r\n                    let item = this.jsonFormatted[i];\r\n\r\n                    this.containerStr += \r\n                    '<div class=\"display-flex-item\" style=\"outline: black solid 2px;width:'+item['widthPercent']+'%;background:'+item['bgColor']+';\">'+\r\n                        '<div class=\"item-name\">'+item['name']+'</div>'+\r\n                        '<div class=\"item-value\">'+item['formatValue']+'</div>'+\r\n                    '</div>';\r\n                }\r\n\r\n                console.log(\"render json\",this.jsonFormatted);\r\n            }\r\n\r\n        },\r\n        fixOrderInList(){\r\n            for(let i in this.jsonFormatted){\r\n                if(i-1 == -1){\r\n                    this.jsonFormatted[i]['order'] = 0;\r\n                }else{\r\n                    let getWidthPercentOrder = this.sumOfWidthPercent(this.jsonFormatted.filter((item)=>item['order']==this.jsonFormatted[i-1]['order']));\r\n                        \r\n                    if(getWidthPercentOrder+this.jsonFormatted[i]['widthPercent'] <= 100){\r\n                        this.jsonFormatted[i]['order'] = this.jsonFormatted[i-1]['order'];\r\n                    }else{   \r\n                        let prevOrderArr = [];\r\n                        for(let j=0; j<=this.jsonFormatted[i-1]['order']; j++){\r\n                            prevOrderArr.push(j);\r\n                        }\r\n\r\n                        for(let k in prevOrderArr){\r\n\r\n                            let getWidthPercentOrder = this.sumOfWidthPercent(this.jsonFormatted.filter((item)=>item['order']==prevOrderArr[k]));\r\n                                    \r\n                            if(getWidthPercentOrder+this.jsonFormatted[i]['widthPercent'] <= 100){\r\n                                this.jsonFormatted[i]['order'] = this.jsonFormatted[prevOrderArr[k]]['order'];\r\n                                break;\r\n                            }else{\r\n                                this.jsonFormatted[i]['order'] = this.jsonFormatted[i-1]['order'] +1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        sumOfWidthPercent(arr){\r\n            let sum = 0;\r\n            arr.forEach(item => {\r\n                sum += item.widthPercent;\r\n            });\r\n            return sum;\r\n        },\r\n        roundToTwo(num) {    \r\n            return +(Math.round(num + \"e+2\")  + \"e-2\");\r\n        },\r\n        isJsonString(str) {\r\n            try {\r\n                JSON.parse(str);\r\n\r\n                let parseJson = JSON.parse(str);\r\n                if(parseJson.length>50 || parseJson.length<1){\r\n                    this.isSizeInvalid = true;\r\n                }else{\r\n                    this.isSizeInvalid = false;\r\n\r\n                    let checkNameTypeStrFilter = parseJson.findIndex(item=>typeof(item.name) != 'string');\r\n                    if(checkNameTypeStrFilter!=-1){\r\n                        this.isAnyNameNotStr = true;\r\n                    }else{\r\n                        this.isAnyNameNotStr = false;\r\n\r\n                        let checkNameLengthFilter = parseJson.findIndex(item=>item.name.length > 50);\r\n                        if(checkNameLengthFilter!=-1){\r\n                            this.isAnyNameOver50 = true;\r\n                        }else{\r\n                            this.isAnyNameOver50 = false;\r\n\r\n                            let checkWeightIntFilter = parseJson.findIndex(item=>typeof(item.weight) != 'number' || item.weight < 1 || item.weight % 1 != 0);\r\n                            if(checkWeightIntFilter!=-1){\r\n                                this.isAnyWeightNotInt = true;\r\n                            }else{\r\n                                this.isAnyWeightNotInt = false;\r\n\r\n                                let checkValueIntFilter = parseJson.findIndex(item=>typeof(item.value) != 'number' || item.value > 1 || item.value < -1);\r\n                                if(checkValueIntFilter!=-1){\r\n                                    this.isAnyValueNotInt = true;\r\n                                }else{\r\n                                    this.isAnyValueNotInt = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.isJsonNotValid = false;\r\n            } catch (e) {\r\n                this.isJsonNotValid = true;\r\n            }\r\n        },\r\n        getSample(){\r\n            this.jsonModel = \"\";\r\n            this.jsonModel = JSON.stringify(this.sampleJson);\r\n        },\r\n        clearModel(){\r\n            this.jsonModel = \"\";\r\n            this.rowNum = 1;\r\n            this.showContainer = false;\r\n        },\r\n        validateJson(){\r\n            this.showContainer = false;\r\n            if(this.isJsonNotValid){\r\n                alert(\"Input JSON not valid, please check!\");\r\n            }else if(this.isSizeInvalid){\r\n                alert(\"Length of Array (Input JSON) must be equal/less than 50 and greater than 1!\");\r\n            }else if(this.isAnyNameOver50){\r\n                alert(\"Each name must not be longer than 50 characters!\");\r\n            }else if(this.isAnyNameNotStr){\r\n                alert(\"Only accept string type for name!\");\r\n            }else if(this.isAnyWeightNotInt){\r\n                alert(\"Only accept integer type for weight and it must be greater than 0!\");\r\n            }else if(this.isAnyValueNotInt){\r\n                alert(\"Value must be an integer: \\n - Not greater than 1. \\n - Not lesser than -1.\");\r\n            }\r\n            else{\r\n                this.saveModel();\r\n            }\r\n        },\r\n        goTop(){\r\n            $('html,body').stop().animate({\r\n                scrollTop: 0\r\n            }, 'slow', 'swing');\r\n        }\r\n  },\r\n  computed:{\r\n      \r\n\r\n  },\r\n  watch:{\r\n    jsonModel: function () {\r\n        this.isJsonString(this.jsonModel);\r\n    }   \r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"editor\">\r\n    <div class=\"editor-left\">\r\n        <p>{{title}}</p>\r\n        <textarea class=\"editor-textarea\" v-model=\"jsonModel\" rows=\"20\" cols=\"100\">\r\n        </textarea>\r\n        <br>\r\n        <button class=\"action-button\" v-on:click=\"getSample()\">Get Sample Json</button>\r\n        <br>\r\n        <p>{{rowTitle}}</p>\r\n        <input type=\"number\" v-model=\"rowNum\"/>\r\n\r\n        <div class=\"button-class\">\r\n            <button class=\"action-button\" :disabled=\"jsonModel == ''\" v-on:click=\"validateJson()\">Save</button>\r\n            <button class=\"action-button next-button\" v-on:click=\"clearModel()\">Clear</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"editor-right\">\r\n        <p class=\"hide-on-mobile\">{{resultTitle}}</p>\r\n        <p class=\"show-on-mobile\"  v-if=\"showContainer\">{{resultTitle}}</p>\r\n        <div class=\"result-container\" v-if=\"showContainer\">\r\n            <div class=\"format-flex-row\" v-html=\"containerStr\"></div>\r\n            <div class=\"show-on-mobile button-top-class\">\r\n                <button class=\"action-button top-button\" v-on:click=\"goTop()\">Back to top</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>"],"sourceRoot":"src/views"}]}