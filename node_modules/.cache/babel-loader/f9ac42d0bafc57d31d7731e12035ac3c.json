{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGVuZ2luZS9tb2RlbC9oaXN0b3J5CiAqLwoKLyoqCiAqIGBIaXN0b3J5YCBrZWVwcyB0aGUgdHJhY2sgb2YgYWxsIHRoZSBvcGVyYXRpb25zIGFwcGxpZWQgdG8gdGhlIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL2RvY3VtZW50fkRvY3VtZW50IGRvY3VtZW50fS4KICovCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhpc3RvcnkgewogIC8qKgogICAqIENyZWF0ZXMgYW4gZW1wdHkgSGlzdG9yeSBpbnN0YW5jZS4KICAgKi8KICBjb25zdHJ1Y3RvcigpIHsKICAgIC8qKgogICAgICogT3BlcmF0aW9ucyBhZGRlZCB0byB0aGUgaGlzdG9yeS4KICAgICAqCiAgICAgKiBAcHJvdGVjdGVkCiAgICAgKiBAbWVtYmVyIHtBcnJheS48bW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbj59IG1vZHVsZTplbmdpbmUvbW9kZWwvaGlzdG9yeX5IaXN0b3J5I19vcGVyYXRpb25zCiAgICAgKi8KICAgIHRoaXMuX29wZXJhdGlvbnMgPSBbXTsKICAgIC8qKgogICAgICogSG9sZHMgYW4gaW5mb3JtYXRpb24gd2hpY2gge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvb3BlcmF0aW9uL29wZXJhdGlvbn5PcGVyYXRpb24gb3BlcmF0aW9ufSB1bmRvZXMgd2hpY2gKICAgICAqIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9uIG9wZXJhdGlvbn0uCiAgICAgKgogICAgICogS2V5cyBvZiB0aGUgbWFwIGFyZSAidW5kb2luZyBvcGVyYXRpb25zIiwgdGhhdCBpcyBvcGVyYXRpb25zIHRoYXQgdW5kb25lIHNvbWUgb3RoZXIgb3BlcmF0aW9ucy4gRm9yIGVhY2gga2V5LCB0aGUKICAgICAqIHZhbHVlIGlzIGFuIG9wZXJhdGlvbiB0aGF0IGhhcyBiZWVuIHVuZG9uZSBieSB0aGUgInVuZG9pbmcgb3BlcmF0aW9uIi4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQG1lbWJlciB7TWFwfSBtb2R1bGU6ZW5naW5lL21vZGVsL2hpc3Rvcnl+SGlzdG9yeSNfdW5kb1BhaXJzCiAgICAgKi8KCiAgICB0aGlzLl91bmRvUGFpcnMgPSBuZXcgTWFwKCk7CiAgICAvKioKICAgICAqIEhvbGRzIGFsbCB1bmRvbmUgb3BlcmF0aW9ucy4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQG1lbWJlciB7U2V0Ljxtb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9uPn0gbW9kdWxlOmVuZ2luZS9tb2RlbC9oaXN0b3J5fkhpc3RvcnkjX3VuZG9uZU9wZXJhdGlvbnMKICAgICAqLwoKICAgIHRoaXMuX3VuZG9uZU9wZXJhdGlvbnMgPSBuZXcgU2V0KCk7CiAgfQogIC8qKgogICAqIEFkZHMgYW4gb3BlcmF0aW9uIHRvIHRoZSBoaXN0b3J5LgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufSBvcGVyYXRpb24gT3BlcmF0aW9uIHRvIGFkZC4KICAgKi8KCgogIGFkZE9wZXJhdGlvbihvcGVyYXRpb24pIHsKICAgIGlmICh0aGlzLl9vcGVyYXRpb25zLmluY2x1ZGVzKG9wZXJhdGlvbikpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRoaXMuX29wZXJhdGlvbnMucHVzaChvcGVyYXRpb24pOwogIH0KICAvKioKICAgKiBSZXR1cm5zIG9wZXJhdGlvbnMgYWRkZWQgdG8gdGhlIGhpc3RvcnkuCiAgICoKICAgKiBAcGFyYW0ge051bWJlcn0gW2Zyb209MF0gQmFzZSB2ZXJzaW9uIGZyb20gd2hpY2ggb3BlcmF0aW9ucyBzaG91bGQgYmUgcmV0dXJuZWQgKGluY2x1c2l2ZSkuIERlZmF1bHRzIHRvIGAwYCwgd2hpY2ggbWVhbnMKICAgKiB0aGF0IG9wZXJhdGlvbnMgZnJvbSB0aGUgZmlyc3Qgb25lIHdpbGwgYmUgcmV0dXJuZWQuCiAgICogQHBhcmFtIHtOdW1iZXJ9IFt0bz1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFldIEJhc2UgdmVyc2lvbiB1cCB0byB3aGljaCBvcGVyYXRpb25zIHNob3VsZCBiZSByZXR1cm5lZCAoZXhjbHVzaXZlKS4KICAgKiBEZWZhdWx0cyB0byBgTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZYCB3aGljaCBtZWFucyB0aGF0IG9wZXJhdGlvbnMgdXAgdG8gdGhlIGxhc3Qgb25lIHdpbGwgYmUgcmV0dXJuZWQuCiAgICogQHJldHVybnMge0l0ZXJhYmxlLjxtb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9uPn0gT3BlcmF0aW9ucyBhZGRlZCB0byB0aGUgaGlzdG9yeS4KICAgKi8KCgogIGdldE9wZXJhdGlvbnMoZnJvbSA9IDAsIHRvID0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZKSB7CiAgICBpZiAoZnJvbSA8IDApIHsKICAgICAgcmV0dXJuIFtdOwogICAgfQoKICAgIHJldHVybiB0aGlzLl9vcGVyYXRpb25zLnNsaWNlKGZyb20sIHRvKTsKICB9CiAgLyoqCiAgICogUmV0dXJucyBvcGVyYXRpb24gZnJvbSB0aGUgaGlzdG9yeSB0aGF0IGJhc2VzIG9uIGdpdmVuIGBiYXNlVmVyc2lvbmAuCiAgICoKICAgKiBAcGFyYW0ge051bWJlcn0gYmFzZVZlcnNpb24gQmFzZSB2ZXJzaW9uIG9mIHRoZSBvcGVyYXRpb24gdG8gZ2V0LgogICAqIEByZXR1cm5zIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufG51bGx9IE9wZXJhdGlvbiB3aXRoIGdpdmVuIGJhc2UgdmVyc2lvbiBvciBgbnVsbGAgaWYKICAgKiB0aGVyZSBpcyBubyBzdWNoIG9wZXJhdGlvbiBpbiBoaXN0b3J5LgogICAqLwoKCiAgZ2V0T3BlcmF0aW9uKGJhc2VWZXJzaW9uKSB7CiAgICByZXR1cm4gdGhpcy5fb3BlcmF0aW9uc1tiYXNlVmVyc2lvbl07CiAgfQogIC8qKgogICAqIE1hcmtzIGluIGhpc3RvcnkgdGhhdCBvbmUgb3BlcmF0aW9uIGlzIGFuIG9wZXJhdGlvbiB0aGF0IGlzIHVuZG9pbmcgdGhlIG90aGVyIG9wZXJhdGlvbi4gQnkgbWFya2luZyBvcGVyYXRpb24gdGhpcyB3YXksCiAgICogaGlzdG9yeSBpcyBrZWVwaW5nIG1vcmUgY29udGV4dCBpbmZvcm1hdGlvbiBhYm91dCBvcGVyYXRpb25zLCB3aGljaCBoZWxwcyBpbiBvcGVyYXRpb25hbCB0cmFuc2Zvcm1hdGlvbi4KICAgKgogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbn0gdW5kb25lT3BlcmF0aW9uIE9wZXJhdGlvbiB3aGljaCBpcyB1bmRvbmUgYnkgYHVuZG9pbmdPcGVyYXRpb25gLgogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbn0gdW5kb2luZ09wZXJhdGlvbiBPcGVyYXRpb24gd2hpY2ggdW5kb2VzIGB1bmRvbmVPcGVyYXRpb25gLgogICAqLwoKCiAgc2V0T3BlcmF0aW9uQXNVbmRvbmUodW5kb25lT3BlcmF0aW9uLCB1bmRvaW5nT3BlcmF0aW9uKSB7CiAgICB0aGlzLl91bmRvUGFpcnMuc2V0KHVuZG9pbmdPcGVyYXRpb24sIHVuZG9uZU9wZXJhdGlvbik7CgogICAgdGhpcy5fdW5kb25lT3BlcmF0aW9ucy5hZGQodW5kb25lT3BlcmF0aW9uKTsKICB9CiAgLyoqCiAgICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gYG9wZXJhdGlvbmAgaXMgdW5kb2luZyBhbnkgb3RoZXIgb3BlcmF0aW9uLgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufSBvcGVyYXRpb24gT3BlcmF0aW9uIHRvIGNoZWNrLgogICAqIEByZXR1cm5zIHtCb29sZWFufSBgdHJ1ZWAgaWYgZ2l2ZW4gYG9wZXJhdGlvbmAgaXMgdW5kb2luZyBhbnkgb3RoZXIgb3BlcmF0aW9uLCBgZmFsc2VgIG90aGVyd2lzZS4KICAgKi8KCgogIGlzVW5kb2luZ09wZXJhdGlvbihvcGVyYXRpb24pIHsKICAgIHJldHVybiB0aGlzLl91bmRvUGFpcnMuaGFzKG9wZXJhdGlvbik7CiAgfQogIC8qKgogICAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIGBvcGVyYXRpb25gIGhhcyBiZWVuIHVuZG9uZSBieSBhbnkgb3RoZXIgb3BlcmF0aW9uLgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufSBvcGVyYXRpb24gT3BlcmF0aW9uIHRvIGNoZWNrLgogICAqIEByZXR1cm5zIHtCb29sZWFufSBgdHJ1ZWAgaWYgZ2l2ZW4gYG9wZXJhdGlvbmAgaGFzIGJlZW4gdW5kb25lIGFueSBvdGhlciBvcGVyYXRpb24sIGBmYWxzZWAgb3RoZXJ3aXNlLgogICAqLwoKCiAgaXNVbmRvbmVPcGVyYXRpb24ob3BlcmF0aW9uKSB7CiAgICByZXR1cm4gdGhpcy5fdW5kb25lT3BlcmF0aW9ucy5oYXMob3BlcmF0aW9uKTsKICB9CiAgLyoqCiAgICogRm9yIGdpdmVuIGB1bmRvaW5nT3BlcmF0aW9uYCwgcmV0dXJucyB0aGUgb3BlcmF0aW9uIHdoaWNoIGhhcyBiZWVuIHVuZG9uZSBieSBpdC4KICAgKgogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9vcGVyYXRpb24vb3BlcmF0aW9ufk9wZXJhdGlvbn0gdW5kb2luZ09wZXJhdGlvbgogICAqIEByZXR1cm5zIHttb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9ufHVuZGVmaW5lZH0gT3BlcmF0aW9uIHRoYXQgaGFzIGJlZW4gdW5kb25lIGJ5IGdpdmVuCiAgICogYHVuZG9pbmdPcGVyYXRpb25gIG9yIGB1bmRlZmluZWRgIGlmIGdpdmVuIGB1bmRvaW5nT3BlcmF0aW9uYCBpcyBub3QgdW5kb2luZyBhbnkgb3RoZXIgb3BlcmF0aW9uLgogICAqLwoKCiAgZ2V0VW5kb25lT3BlcmF0aW9uKHVuZG9pbmdPcGVyYXRpb24pIHsKICAgIHJldHVybiB0aGlzLl91bmRvUGFpcnMuZ2V0KHVuZG9pbmdPcGVyYXRpb24pOwogIH0KCn0="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/history.js"],"names":["History","constructor","_operations","_undoPairs","Map","_undoneOperations","Set","addOperation","operation","includes","push","getOperations","from","to","Number","POSITIVE_INFINITY","slice","getOperation","baseVersion","setOperationAsUndone","undoneOperation","undoingOperation","set","add","isUndoingOperation","has","isUndoneOperation","getUndoneOperation","get"],"mappings":"AAAA;;;;;AAKA;;;;AAIA;;;AAGA,eAAe,MAAMA,OAAN,CAAc;AAC5B;;;AAGAC,EAAAA,WAAW,GAAG;AACb;;;;;;AAMA,SAAKC,WAAL,GAAmB,EAAnB;AAEA;;;;;;;;;;;AAUA,SAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AAEA;;;;;;;AAMA,SAAKC,iBAAL,GAAyB,IAAIC,GAAJ,EAAzB;AACA;AAED;;;;;;;AAKAC,EAAAA,YAAY,CAAEC,SAAF,EAAc;AACzB,QAAK,KAAKN,WAAL,CAAiBO,QAAjB,CAA2BD,SAA3B,CAAL,EAA8C;AAC7C;AACA;;AAED,SAAKN,WAAL,CAAiBQ,IAAjB,CAAuBF,SAAvB;AACA;AAED;;;;;;;;;;;AASAG,EAAAA,aAAa,CAAEC,IAAI,GAAG,CAAT,EAAYC,EAAE,GAAGC,MAAM,CAACC,iBAAxB,EAA4C;AACxD,QAAKH,IAAI,GAAG,CAAZ,EAAgB;AACf,aAAO,EAAP;AACA;;AAED,WAAO,KAAKV,WAAL,CAAiBc,KAAjB,CAAwBJ,IAAxB,EAA8BC,EAA9B,CAAP;AACA;AAED;;;;;;;;;AAOAI,EAAAA,YAAY,CAAEC,WAAF,EAAgB;AAC3B,WAAO,KAAKhB,WAAL,CAAkBgB,WAAlB,CAAP;AACA;AAED;;;;;;;;;AAOAC,EAAAA,oBAAoB,CAAEC,eAAF,EAAmBC,gBAAnB,EAAsC;AACzD,SAAKlB,UAAL,CAAgBmB,GAAhB,CAAqBD,gBAArB,EAAuCD,eAAvC;;AACA,SAAKf,iBAAL,CAAuBkB,GAAvB,CAA4BH,eAA5B;AACA;AAED;;;;;;;;AAMAI,EAAAA,kBAAkB,CAAEhB,SAAF,EAAc;AAC/B,WAAO,KAAKL,UAAL,CAAgBsB,GAAhB,CAAqBjB,SAArB,CAAP;AACA;AAED;;;;;;;;AAMAkB,EAAAA,iBAAiB,CAAElB,SAAF,EAAc;AAC9B,WAAO,KAAKH,iBAAL,CAAuBoB,GAAvB,CAA4BjB,SAA5B,CAAP;AACA;AAED;;;;;;;;;AAOAmB,EAAAA,kBAAkB,CAAEN,gBAAF,EAAqB;AACtC,WAAO,KAAKlB,UAAL,CAAgByB,GAAhB,CAAqBP,gBAArB,CAAP;AACA;;AApH2B","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/history\n */\n\n/**\n * `History` keeps the track of all the operations applied to the {@link module:engine/model/document~Document document}.\n */\nexport default class History {\n\t/**\n\t * Creates an empty History instance.\n\t */\n\tconstructor() {\n\t\t/**\n\t\t * Operations added to the history.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_operations\n\t\t */\n\t\tthis._operations = [];\n\n\t\t/**\n\t\t * Holds an information which {@link module:engine/model/operation/operation~Operation operation} undoes which\n\t\t * {@link module:engine/model/operation/operation~Operation operation}.\n\t\t *\n\t\t * Keys of the map are \"undoing operations\", that is operations that undone some other operations. For each key, the\n\t\t * value is an operation that has been undone by the \"undoing operation\".\n\t\t *\n\t\t * @private\n\t\t * @member {Map} module:engine/model/history~History#_undoPairs\n\t\t */\n\t\tthis._undoPairs = new Map();\n\n\t\t/**\n\t\t * Holds all undone operations.\n\t\t *\n\t\t * @private\n\t\t * @member {Set.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_undoneOperations\n\t\t */\n\t\tthis._undoneOperations = new Set();\n\t}\n\n\t/**\n\t * Adds an operation to the history.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to add.\n\t */\n\taddOperation( operation ) {\n\t\tif ( this._operations.includes( operation ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._operations.push( operation );\n\t}\n\n\t/**\n\t * Returns operations added to the history.\n\t *\n\t * @param {Number} [from=0] Base version from which operations should be returned (inclusive). Defaults to `0`, which means\n\t * that operations from the first one will be returned.\n\t * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which operations should be returned (exclusive).\n\t * Defaults to `Number.POSITIVE_INFINITY` which means that operations up to the last one will be returned.\n\t * @returns {Iterable.<module:engine/model/operation/operation~Operation>} Operations added to the history.\n\t */\n\tgetOperations( from = 0, to = Number.POSITIVE_INFINITY ) {\n\t\tif ( from < 0 ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this._operations.slice( from, to );\n\t}\n\n\t/**\n\t * Returns operation from the history that bases on given `baseVersion`.\n\t *\n\t * @param {Number} baseVersion Base version of the operation to get.\n\t * @returns {module:engine/model/operation/operation~Operation|null} Operation with given base version or `null` if\n\t * there is no such operation in history.\n\t */\n\tgetOperation( baseVersion ) {\n\t\treturn this._operations[ baseVersion ];\n\t}\n\n\t/**\n\t * Marks in history that one operation is an operation that is undoing the other operation. By marking operation this way,\n\t * history is keeping more context information about operations, which helps in operational transformation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoneOperation Operation which is undone by `undoingOperation`.\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation Operation which undoes `undoneOperation`.\n\t */\n\tsetOperationAsUndone( undoneOperation, undoingOperation ) {\n\t\tthis._undoPairs.set( undoingOperation, undoneOperation );\n\t\tthis._undoneOperations.add( undoneOperation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` is undoing any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` is undoing any other operation, `false` otherwise.\n\t */\n\tisUndoingOperation( operation ) {\n\t\treturn this._undoPairs.has( operation );\n\t}\n\n\t/**\n\t * Checks whether given `operation` has been undone by any other operation.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n\t * @returns {Boolean} `true` if given `operation` has been undone any other operation, `false` otherwise.\n\t */\n\tisUndoneOperation( operation ) {\n\t\treturn this._undoneOperations.has( operation );\n\t}\n\n\t/**\n\t * For given `undoingOperation`, returns the operation which has been undone by it.\n\t *\n\t * @param {module:engine/model/operation/operation~Operation} undoingOperation\n\t * @returns {module:engine/model/operation/operation~Operation|undefined} Operation that has been undone by given\n\t * `undoingOperation` or `undefined` if given `undoingOperation` is not undoing any other operation.\n\t */\n\tgetUndoneOperation( undoingOperation ) {\n\t\treturn this._undoPairs.get( undoingOperation );\n\t}\n}\n"]}]}