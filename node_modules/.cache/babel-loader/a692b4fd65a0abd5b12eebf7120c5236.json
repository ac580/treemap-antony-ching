{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHVwbG9hZC9hZGFwdGVycy9iYXNlNjR1cGxvYWRhZGFwdGVyCiAqLwoKLyogZ2xvYmFscyB3aW5kb3cgKi8KaW1wb3J0IFBsdWdpbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LWNvcmUvc3JjL3BsdWdpbic7CmltcG9ydCBGaWxlUmVwb3NpdG9yeSBmcm9tICcuLi9maWxlcmVwb3NpdG9yeSc7Ci8qKgogKiBBIHBsdWdpbiB0aGF0IGNvbnZlcnRzIGltYWdlcyBpbnNlcnRlZCBpbnRvIHRoZSBlZGl0b3IgaW50byBbQmFzZTY0IHN0cmluZ3NdKGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0Jhc2U2NCkKICogaW4gdGhlIHtAZ2xpbmsgYnVpbGRzL2d1aWRlcy9pbnRlZ3JhdGlvbi9zYXZpbmctZGF0YSBlZGl0b3Igb3V0cHV0fS4KICoKICogVGhpcyBraW5kIG9mIGltYWdlIHVwbG9hZCBkb2VzIG5vdCByZXF1aXJlIHNlcnZlciBwcm9jZXNzaW5nIOKAkyBpbWFnZXMgYXJlIHN0b3JlZCB3aXRoIHRoZSByZXN0IG9mIHRoZSB0ZXh0IGFuZAogKiBkaXNwbGF5ZWQgYnkgdGhlIHdlYiBicm93c2VyIHdpdGhvdXQgYWRkaXRpb25hbCByZXF1ZXN0cy4KICoKICogQ2hlY2sgb3V0IHRoZSB7QGdsaW5rIGZlYXR1cmVzL2ltYWdlLXVwbG9hZC9pbWFnZS11cGxvYWQgY29tcHJlaGVuc2l2ZSAiSW1hZ2UgdXBsb2FkIG92ZXJ2aWV3In0gdG8gbGVhcm4gYWJvdXQKICogb3RoZXIgd2F5cyB0byB1cGxvYWQgaW1hZ2VzIGludG8gQ0tFZGl0b3IgNS4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2U2NFVwbG9hZEFkYXB0ZXIgZXh0ZW5kcyBQbHVnaW4gewogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgc3RhdGljIGdldCByZXF1aXJlcygpIHsKICAgIHJldHVybiBbRmlsZVJlcG9zaXRvcnldOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgc3RhdGljIGdldCBwbHVnaW5OYW1lKCkgewogICAgcmV0dXJuICdCYXNlNjRVcGxvYWRBZGFwdGVyJzsKICB9CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KCgogIGluaXQoKSB7CiAgICB0aGlzLmVkaXRvci5wbHVnaW5zLmdldChGaWxlUmVwb3NpdG9yeSkuY3JlYXRlVXBsb2FkQWRhcHRlciA9IGxvYWRlciA9PiBuZXcgQWRhcHRlcihsb2FkZXIpOwogIH0KCn0KLyoqCiAqIFRoZSB1cGxvYWQgYWRhcHRlciB0aGF0IGNvbnZlcnRzIGltYWdlcyBpbnNlcnRlZCBpbnRvIHRoZSBlZGl0b3IgaW50byBCYXNlNjQgc3RyaW5ncy4KICoKICogQHByaXZhdGUKICogQGltcGxlbWVudHMgbW9kdWxlOnVwbG9hZC9maWxlcmVwb3NpdG9yeX5VcGxvYWRBZGFwdGVyCiAqLwoKY2xhc3MgQWRhcHRlciB7CiAgLyoqCiAgICogQ3JlYXRlcyBhIG5ldyBhZGFwdGVyIGluc3RhbmNlLgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6dXBsb2FkL2ZpbGVyZXBvc2l0b3J5fkZpbGVMb2FkZXJ9IGxvYWRlcgogICAqLwogIGNvbnN0cnVjdG9yKGxvYWRlcikgewogICAgLyoqCiAgICAgKiBgRmlsZUxvYWRlcmAgaW5zdGFuY2UgdG8gdXNlIGR1cmluZyB0aGUgdXBsb2FkLgogICAgICoKICAgICAqIEBtZW1iZXIge21vZHVsZTp1cGxvYWQvZmlsZXJlcG9zaXRvcnl+RmlsZUxvYWRlcn0gI2xvYWRlcgogICAgICovCiAgICB0aGlzLmxvYWRlciA9IGxvYWRlcjsKICB9CiAgLyoqCiAgICogU3RhcnRzIHRoZSB1cGxvYWQgcHJvY2Vzcy4KICAgKgogICAqIEBzZWUgbW9kdWxlOnVwbG9hZC9maWxlcmVwb3NpdG9yeX5VcGxvYWRBZGFwdGVyI3VwbG9hZAogICAqIEByZXR1cm5zIHtQcm9taXNlfQogICAqLwoKCiAgdXBsb2FkKCkgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gdGhpcy5yZWFkZXIgPSBuZXcgd2luZG93LkZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7CiAgICAgICAgcmVzb2x2ZSh7CiAgICAgICAgICBkZWZhdWx0OiByZWFkZXIucmVzdWx0CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICByZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBlcnIgPT4gewogICAgICAgIHJlamVjdChlcnIpOwogICAgICB9KTsKICAgICAgcmVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgKCkgPT4gewogICAgICAgIHJlamVjdCgpOwogICAgICB9KTsKICAgICAgdGhpcy5sb2FkZXIuZmlsZS50aGVuKGZpbGUgPT4gewogICAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOwogICAgICB9KTsKICAgIH0pOwogIH0KICAvKioKICAgKiBBYm9ydHMgdGhlIHVwbG9hZCBwcm9jZXNzLgogICAqCiAgICogQHNlZSBtb2R1bGU6dXBsb2FkL2ZpbGVyZXBvc2l0b3J5flVwbG9hZEFkYXB0ZXIjYWJvcnQKICAgKiBAcmV0dXJucyB7UHJvbWlzZX0KICAgKi8KCgogIGFib3J0KCkgewogICAgdGhpcy5yZWFkZXIuYWJvcnQoKTsKICB9Cgp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter.js"],"names":["Plugin","FileRepository","Base64UploadAdapter","requires","pluginName","init","editor","plugins","get","createUploadAdapter","loader","Adapter","constructor","upload","Promise","resolve","reject","reader","window","FileReader","addEventListener","default","result","err","file","then","readAsDataURL","abort"],"mappings":"AAAA;;;;;AAKA;;;;AAIA;AAEA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA;;;;;;;;;;;;;AAYA,eAAe,MAAMC,mBAAN,SAAkCF,MAAlC,CAAyC;AACvD;;;AAGA,aAAWG,QAAX,GAAsB;AACrB,WAAO,CAAEF,cAAF,CAAP;AACA;AAED;;;;;AAGA,aAAWG,UAAX,GAAwB;AACvB,WAAO,qBAAP;AACA;AAED;;;;;AAGAC,EAAAA,IAAI,GAAG;AACN,SAAKC,MAAL,CAAYC,OAAZ,CAAoBC,GAApB,CAAyBP,cAAzB,EAA0CQ,mBAA1C,GAAgEC,MAAM,IAAI,IAAIC,OAAJ,CAAaD,MAAb,CAA1E;AACA;;AApBsD;AAuBxD;;;;;;;AAMA,MAAMC,OAAN,CAAc;AACb;;;;;AAKAC,EAAAA,WAAW,CAAEF,MAAF,EAAW;AACrB;;;;;AAKA,SAAKA,MAAL,GAAcA,MAAd;AACA;AAED;;;;;;;;AAMAG,EAAAA,MAAM,GAAG;AACR,WAAO,IAAIC,OAAJ,CAAa,CAAEC,OAAF,EAAWC,MAAX,KAAuB;AAC1C,YAAMC,MAAM,GAAG,KAAKA,MAAL,GAAc,IAAIC,MAAM,CAACC,UAAX,EAA7B;AAEAF,MAAAA,MAAM,CAACG,gBAAP,CAAyB,MAAzB,EAAiC,MAAM;AACtCL,QAAAA,OAAO,CAAE;AAAEM,UAAAA,OAAO,EAAEJ,MAAM,CAACK;AAAlB,SAAF,CAAP;AACA,OAFD;AAIAL,MAAAA,MAAM,CAACG,gBAAP,CAAyB,OAAzB,EAAkCG,GAAG,IAAI;AACxCP,QAAAA,MAAM,CAAEO,GAAF,CAAN;AACA,OAFD;AAIAN,MAAAA,MAAM,CAACG,gBAAP,CAAyB,OAAzB,EAAkC,MAAM;AACvCJ,QAAAA,MAAM;AACN,OAFD;AAIA,WAAKN,MAAL,CAAYc,IAAZ,CAAiBC,IAAjB,CAAuBD,IAAI,IAAI;AAC9BP,QAAAA,MAAM,CAACS,aAAP,CAAsBF,IAAtB;AACA,OAFD;AAGA,KAlBM,CAAP;AAmBA;AAED;;;;;;;;AAMAG,EAAAA,KAAK,GAAG;AACP,SAAKV,MAAL,CAAYU,KAAZ;AACA;;AAnDY","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module upload/adapters/base64uploadadapter\n */\n\n/* globals window */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FileRepository from '../filerepository';\n\n/**\n * A plugin that converts images inserted into the editor into [Base64 strings](https://en.wikipedia.org/wiki/Base64)\n * in the {@glink builds/guides/integration/saving-data editor output}.\n *\n * This kind of image upload does not require server processing â€“ images are stored with the rest of the text and\n * displayed by the web browser without additional requests.\n *\n * Check out the {@glink features/image-upload/image-upload comprehensive \"Image upload overview\"} to learn about\n * other ways to upload images into CKEditor 5.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Base64UploadAdapter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FileRepository ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Base64UploadAdapter';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis.editor.plugins.get( FileRepository ).createUploadAdapter = loader => new Adapter( loader );\n\t}\n}\n\n/**\n * The upload adapter that converts images inserted into the editor into Base64 strings.\n *\n * @private\n * @implements module:upload/filerepository~UploadAdapter\n */\nclass Adapter {\n\t/**\n\t * Creates a new adapter instance.\n\t *\n\t * @param {module:upload/filerepository~FileLoader} loader\n\t */\n\tconstructor( loader ) {\n\t\t/**\n\t\t * `FileLoader` instance to use during the upload.\n\t\t *\n\t\t * @member {module:upload/filerepository~FileLoader} #loader\n\t\t */\n\t\tthis.loader = loader;\n\t}\n\n\t/**\n\t * Starts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#upload\n\t * @returns {Promise}\n\t */\n\tupload() {\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\tconst reader = this.reader = new window.FileReader();\n\n\t\t\treader.addEventListener( 'load', () => {\n\t\t\t\tresolve( { default: reader.result } );\n\t\t\t} );\n\n\t\t\treader.addEventListener( 'error', err => {\n\t\t\t\treject( err );\n\t\t\t} );\n\n\t\t\treader.addEventListener( 'abort', () => {\n\t\t\t\treject();\n\t\t\t} );\n\n\t\t\tthis.loader.file.then( file => {\n\t\t\t\treader.readAsDataURL( file );\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Aborts the upload process.\n\t *\n\t * @see module:upload/filerepository~UploadAdapter#abort\n\t * @returns {Promise}\n\t */\n\tabort() {\n\t\tthis.reader.abort();\n\t}\n}\n"]}]}