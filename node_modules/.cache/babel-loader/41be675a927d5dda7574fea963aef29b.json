{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-media-embed/src/utils.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-media-embed/src/utils.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIG1lZGlhLWVtYmVkL3V0aWxzCiAqLwppbXBvcnQgeyBpc1dpZGdldCwgdG9XaWRnZXQgfSBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXdpZGdldC9zcmMvdXRpbHMnOwovKioKICogQ29udmVydHMgYSBnaXZlbiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L2VsZW1lbnR+RWxlbWVudH0gdG8gYSBtZWRpYSBlbWJlZCB3aWRnZXQ6CiAqICogQWRkcyBhIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvZWxlbWVudH5FbGVtZW50I19zZXRDdXN0b21Qcm9wZXJ0eSBjdXN0b20gcHJvcGVydHl9IGFsbG93aW5nIHRvIHJlY29nbml6ZSB0aGUgbWVkaWEgd2lkZ2V0IGVsZW1lbnQuCiAqICogQ2FsbHMgdGhlIHtAbGluayBtb2R1bGU6d2lkZ2V0L3V0aWxzfnRvV2lkZ2V0fSBmdW5jdGlvbiB3aXRoIHRoZSBwcm9wZXIgZWxlbWVudCdzIGxhYmVsIGNyZWF0b3IuCiAqCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L2VsZW1lbnR+RWxlbWVudH0gdmlld0VsZW1lbnQKICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvZG93bmNhc3R3cml0ZXJ+RG93bmNhc3RXcml0ZXJ9IHdyaXRlciBBbiBpbnN0YW5jZSBvZiB0aGUgdmlldyB3cml0ZXIuCiAqIEBwYXJhbSB7U3RyaW5nfSBsYWJlbCBUaGUgZWxlbWVudCdzIGxhYmVsLgogKiBAcmV0dXJucyB7bW9kdWxlOmVuZ2luZS92aWV3L2VsZW1lbnR+RWxlbWVudH0KICovCgpleHBvcnQgZnVuY3Rpb24gdG9NZWRpYVdpZGdldCh2aWV3RWxlbWVudCwgd3JpdGVyLCBsYWJlbCkgewogIHdyaXRlci5zZXRDdXN0b21Qcm9wZXJ0eSgnbWVkaWEnLCB0cnVlLCB2aWV3RWxlbWVudCk7CiAgcmV0dXJuIHRvV2lkZ2V0KHZpZXdFbGVtZW50LCB3cml0ZXIsIHsKICAgIGxhYmVsCiAgfSk7Cn0KLyoqCiAqIFJldHVybnMgYSBtZWRpYSB3aWRnZXQgZWRpdGluZyB2aWV3IGVsZW1lbnQgaWYgb25lIGlzIHNlbGVjdGVkLgogKgogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy9zZWxlY3Rpb25+U2VsZWN0aW9ufG1vZHVsZTplbmdpbmUvdmlldy9kb2N1bWVudHNlbGVjdGlvbn5Eb2N1bWVudFNlbGVjdGlvbn0gc2VsZWN0aW9uCiAqIEByZXR1cm5zIHttb2R1bGU6ZW5naW5lL3ZpZXcvZWxlbWVudH5FbGVtZW50fG51bGx9CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGdldFNlbGVjdGVkTWVkaWFWaWV3V2lkZ2V0KHNlbGVjdGlvbikgewogIGNvbnN0IHZpZXdFbGVtZW50ID0gc2VsZWN0aW9uLmdldFNlbGVjdGVkRWxlbWVudCgpOwoKICBpZiAodmlld0VsZW1lbnQgJiYgaXNNZWRpYVdpZGdldCh2aWV3RWxlbWVudCkpIHsKICAgIHJldHVybiB2aWV3RWxlbWVudDsKICB9CgogIHJldHVybiBudWxsOwp9Ci8qKgogKiBDaGVja3MgaWYgYSBnaXZlbiB2aWV3IGVsZW1lbnQgaXMgYSBtZWRpYSB3aWRnZXQuCiAqCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L2VsZW1lbnR+RWxlbWVudH0gdmlld0VsZW1lbnQKICogQHJldHVybnMge0Jvb2xlYW59CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGlzTWVkaWFXaWRnZXQodmlld0VsZW1lbnQpIHsKICByZXR1cm4gISF2aWV3RWxlbWVudC5nZXRDdXN0b21Qcm9wZXJ0eSgnbWVkaWEnKSAmJiBpc1dpZGdldCh2aWV3RWxlbWVudCk7Cn0KLyoqCiAqIENyZWF0ZXMgYSB2aWV3IGVsZW1lbnQgcmVwcmVzZW50aW5nIHRoZSBtZWRpYS4gRWl0aGVyICJzZW1hbnRpYyIgb25lIGZvciB0aGUgZGF0YSBwaXBlbGluZToKICoKICoJCTxmaWd1cmUgY2xhc3M9Im1lZGlhIj4KICoJCQk8b2VtYmVkIHVybD0iZm9vIj48L29lbWJlZD4KICoJCTwvZmlndXJlPgogKgogKiBvciAibm9uLXNlbWFudGljIiAoZm9yIHRoZSBlZGl0aW5nIHZpZXcgcGlwZWxpbmUpOgogKgogKgkJPGZpZ3VyZSBjbGFzcz0ibWVkaWEiPgogKgkJCTxkaXYgZGF0YS1vZW1iZWQtdXJsPSJmb28iPlsgbm9uLXNlbWFudGljIG1lZGlhIHByZXZpZXcgZm9yICJmb28iIF08L2Rpdj4KICoJCTwvZmlndXJlPgogKgogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy9kb3duY2FzdHdyaXRlcn5Eb3duY2FzdFdyaXRlcn0gd3JpdGVyCiAqIEBwYXJhbSB7bW9kdWxlOm1lZGlhLWVtYmVkL21lZGlhcmVnaXN0cnl+TWVkaWFSZWdpc3RyeX0gcmVnaXN0cnkKICogQHBhcmFtIHtTdHJpbmd9IHVybAogKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucwogKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMudXNlU2VtYW50aWNXcmFwcGVyXQogKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMucmVuZGVyRm9yRWRpdGluZ1ZpZXddCiAqIEByZXR1cm5zIHttb2R1bGU6ZW5naW5lL3ZpZXcvY29udGFpbmVyZWxlbWVudH5Db250YWluZXJFbGVtZW50fQogKi8KCmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNZWRpYUZpZ3VyZUVsZW1lbnQod3JpdGVyLCByZWdpc3RyeSwgdXJsLCBvcHRpb25zKSB7CiAgY29uc3QgZmlndXJlID0gd3JpdGVyLmNyZWF0ZUNvbnRhaW5lckVsZW1lbnQoJ2ZpZ3VyZScsIHsKICAgIGNsYXNzOiAnbWVkaWEnCiAgfSk7IC8vIFRPRE86IFRoaXMgaXMgYSBoYWNrLiBXaXRob3V0IGl0LCB0aGUgZmlndXJlIGluIHRoZSBkYXRhIHBpcGVsaW5lIHdpbGwgY29udGFpbiAmbmJzcDsgYmVjYXVzZQogIC8vIGl0cyBvbmx5IGNoaWxkIGlzIHRoZSBVSUVsZW1lbnQgKHdyYXBwZXIpLgogIC8vCiAgLy8gTm90ZTogVGhlIGhhY2sgaXMgYSBjb3B5JnBhc3RlIGZyb20gd2lkZ2V0IHV0aWxzOyBpdCBtYWtlcyB0aGUgZmlndXJlIGFjdCBsaWtlIGl0J3MgYSB3aWRnZXQuCgogIGZpZ3VyZS5nZXRGaWxsZXJPZmZzZXQgPSBnZXRGaWxsZXJPZmZzZXQ7CiAgd3JpdGVyLmluc2VydCh3cml0ZXIuY3JlYXRlUG9zaXRpb25BdChmaWd1cmUsIDApLCByZWdpc3RyeS5nZXRNZWRpYVZpZXdFbGVtZW50KHdyaXRlciwgdXJsLCBvcHRpb25zKSk7CiAgcmV0dXJuIGZpZ3VyZTsKfQovKioKICogUmV0dXJucyBhIHNlbGVjdGVkIG1lZGlhIGVsZW1lbnQgaW4gdGhlIG1vZGVsLCBpZiBhbnkuCiAqCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9zZWxlY3Rpb25+U2VsZWN0aW9ufSBzZWxlY3Rpb24KICogQHJldHVybnMge21vZHVsZTplbmdpbmUvbW9kZWwvZWxlbWVudH5FbGVtZW50fG51bGx9CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGdldFNlbGVjdGVkTWVkaWFNb2RlbFdpZGdldChzZWxlY3Rpb24pIHsKICBjb25zdCBzZWxlY3RlZEVsZW1lbnQgPSBzZWxlY3Rpb24uZ2V0U2VsZWN0ZWRFbGVtZW50KCk7CgogIGlmIChzZWxlY3RlZEVsZW1lbnQgJiYgc2VsZWN0ZWRFbGVtZW50LmlzKCdtZWRpYScpKSB7CiAgICByZXR1cm4gc2VsZWN0ZWRFbGVtZW50OwogIH0KCiAgcmV0dXJuIG51bGw7Cn0KLyoqCiAqIENyZWF0ZXMgYSBtZWRpYSBlbGVtZW50IGFuZCBpbnNlcnRzIGl0IGludG8gdGhlIG1vZGVsLgogKgogKiAqKk5vdGUqKjogVGhpcyBtZXRob2Qgd2lsbCB1c2Uge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvbW9kZWx+TW9kZWwjaW5zZXJ0Q29udGVudCBgbW9kZWwuaW5zZXJ0Q29udGVudCgpYH0gbG9naWMgb2YgaW5zZXJ0aW5nIGNvbnRlbnQKICogaWYgbm8gYGluc2VydFBvc2l0aW9uYCBpcyBwYXNzZWQuCiAqCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9tb2RlbH5Nb2RlbH0gbW9kZWwKICogQHBhcmFtIHtTdHJpbmd9IHVybCBBbiBVUkwgb2YgYW4gZW1iZWRkYWJsZSBtZWRpYS4KICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL3Bvc2l0aW9uflBvc2l0aW9ufSBbaW5zZXJ0UG9zaXRpb25dIFBvc2l0aW9uIHRvIGluc2VydCBtZWRpYS4gSWYgbm90IHNwZWNpZmllZCwKICogdGhlIGRlZmF1bHQgYmVoYXZpb3Igb2Yge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvbW9kZWx+TW9kZWwjaW5zZXJ0Q29udGVudCBgbW9kZWwuaW5zZXJ0Q29udGVudCgpYH0gd2lsbAogKiBiZSBhcHBsaWVkLgogKi8KCmV4cG9ydCBmdW5jdGlvbiBpbnNlcnRNZWRpYShtb2RlbCwgdXJsLCBpbnNlcnRQb3NpdGlvbikgewogIG1vZGVsLmNoYW5nZSh3cml0ZXIgPT4gewogICAgY29uc3QgbWVkaWFFbGVtZW50ID0gd3JpdGVyLmNyZWF0ZUVsZW1lbnQoJ21lZGlhJywgewogICAgICB1cmwKICAgIH0pOwogICAgbW9kZWwuaW5zZXJ0Q29udGVudChtZWRpYUVsZW1lbnQsIGluc2VydFBvc2l0aW9uKTsKICAgIHdyaXRlci5zZXRTZWxlY3Rpb24obWVkaWFFbGVtZW50LCAnb24nKTsKICB9KTsKfQoKZnVuY3Rpb24gZ2V0RmlsbGVyT2Zmc2V0KCkgewogIHJldHVybiBudWxsOwp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-media-embed/src/utils.js"],"names":["isWidget","toWidget","toMediaWidget","viewElement","writer","label","setCustomProperty","getSelectedMediaViewWidget","selection","getSelectedElement","isMediaWidget","getCustomProperty","createMediaFigureElement","registry","url","options","figure","createContainerElement","class","getFillerOffset","insert","createPositionAt","getMediaViewElement","getSelectedMediaModelWidget","selectedElement","is","insertMedia","model","insertPosition","change","mediaElement","createElement","insertContent","setSelection"],"mappings":"AAAA;;;;;AAKA;;;AAIA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,sCAAnC;AAEA;;;;;;;;;;;AAUA,OAAO,SAASC,aAAT,CAAwBC,WAAxB,EAAqCC,MAArC,EAA6CC,KAA7C,EAAqD;AAC3DD,EAAAA,MAAM,CAACE,iBAAP,CAA0B,OAA1B,EAAmC,IAAnC,EAAyCH,WAAzC;AAEA,SAAOF,QAAQ,CAAEE,WAAF,EAAeC,MAAf,EAAuB;AAAEC,IAAAA;AAAF,GAAvB,CAAf;AACA;AAED;;;;;;;AAMA,OAAO,SAASE,0BAAT,CAAqCC,SAArC,EAAiD;AACvD,QAAML,WAAW,GAAGK,SAAS,CAACC,kBAAV,EAApB;;AAEA,MAAKN,WAAW,IAAIO,aAAa,CAAEP,WAAF,CAAjC,EAAmD;AAClD,WAAOA,WAAP;AACA;;AAED,SAAO,IAAP;AACA;AAED;;;;;;;AAMA,OAAO,SAASO,aAAT,CAAwBP,WAAxB,EAAsC;AAC5C,SAAO,CAAC,CAACA,WAAW,CAACQ,iBAAZ,CAA+B,OAA/B,CAAF,IAA8CX,QAAQ,CAAEG,WAAF,CAA7D;AACA;AAED;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAO,SAASS,wBAAT,CAAmCR,MAAnC,EAA2CS,QAA3C,EAAqDC,GAArD,EAA0DC,OAA1D,EAAoE;AAC1E,QAAMC,MAAM,GAAGZ,MAAM,CAACa,sBAAP,CAA+B,QAA/B,EAAyC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAzC,CAAf,CAD0E,CAG1E;AACA;AACA;AACA;;AACAF,EAAAA,MAAM,CAACG,eAAP,GAAyBA,eAAzB;AAEAf,EAAAA,MAAM,CAACgB,MAAP,CAAehB,MAAM,CAACiB,gBAAP,CAAyBL,MAAzB,EAAiC,CAAjC,CAAf,EAAqDH,QAAQ,CAACS,mBAAT,CAA8BlB,MAA9B,EAAsCU,GAAtC,EAA2CC,OAA3C,CAArD;AAEA,SAAOC,MAAP;AACA;AAED;;;;;;;AAMA,OAAO,SAASO,2BAAT,CAAsCf,SAAtC,EAAkD;AACxD,QAAMgB,eAAe,GAAGhB,SAAS,CAACC,kBAAV,EAAxB;;AAEA,MAAKe,eAAe,IAAIA,eAAe,CAACC,EAAhB,CAAoB,OAApB,CAAxB,EAAwD;AACvD,WAAOD,eAAP;AACA;;AAED,SAAO,IAAP;AACA;AAED;;;;;;;;;;;;;AAYA,OAAO,SAASE,WAAT,CAAsBC,KAAtB,EAA6Bb,GAA7B,EAAkCc,cAAlC,EAAmD;AACzDD,EAAAA,KAAK,CAACE,MAAN,CAAczB,MAAM,IAAI;AACvB,UAAM0B,YAAY,GAAG1B,MAAM,CAAC2B,aAAP,CAAsB,OAAtB,EAA+B;AAAEjB,MAAAA;AAAF,KAA/B,CAArB;AAEAa,IAAAA,KAAK,CAACK,aAAN,CAAqBF,YAArB,EAAmCF,cAAnC;AAEAxB,IAAAA,MAAM,CAAC6B,YAAP,CAAqBH,YAArB,EAAmC,IAAnC;AACA,GAND;AAOA;;AAED,SAASX,eAAT,GAA2B;AAC1B,SAAO,IAAP;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/utils\n */\n\nimport { isWidget, toWidget } from '@ckeditor/ckeditor5-widget/src/utils';\n\n/**\n * Converts a given {@link module:engine/view/element~Element} to a media embed widget:\n * * Adds a {@link module:engine/view/element~Element#_setCustomProperty custom property} allowing to recognize the media widget element.\n * * Calls the {@link module:widget/utils~toWidget} function with the proper element's label creator.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer An instance of the view writer.\n * @param {String} label The element's label.\n * @returns {module:engine/view/element~Element}\n */\nexport function toMediaWidget( viewElement, writer, label ) {\n\twriter.setCustomProperty( 'media', true, viewElement );\n\n\treturn toWidget( viewElement, writer, { label } );\n}\n\n/**\n * Returns a media widget editing view element if one is selected.\n *\n * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} selection\n * @returns {module:engine/view/element~Element|null}\n */\nexport function getSelectedMediaViewWidget( selection ) {\n\tconst viewElement = selection.getSelectedElement();\n\n\tif ( viewElement && isMediaWidget( viewElement ) ) {\n\t\treturn viewElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Checks if a given view element is a media widget.\n *\n * @param {module:engine/view/element~Element} viewElement\n * @returns {Boolean}\n */\nexport function isMediaWidget( viewElement ) {\n\treturn !!viewElement.getCustomProperty( 'media' ) && isWidget( viewElement );\n}\n\n/**\n * Creates a view element representing the media. Either \"semantic\" one for the data pipeline:\n *\n *\t\t<figure class=\"media\">\n *\t\t\t<oembed url=\"foo\"></oembed>\n *\t\t</figure>\n *\n * or \"non-semantic\" (for the editing view pipeline):\n *\n *\t\t<figure class=\"media\">\n *\t\t\t<div data-oembed-url=\"foo\">[ non-semantic media preview for \"foo\" ]</div>\n *\t\t</figure>\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:media-embed/mediaregistry~MediaRegistry} registry\n * @param {String} url\n * @param {Object} options\n * @param {String} [options.useSemanticWrapper]\n * @param {String} [options.renderForEditingView]\n * @returns {module:engine/view/containerelement~ContainerElement}\n */\nexport function createMediaFigureElement( writer, registry, url, options ) {\n\tconst figure = writer.createContainerElement( 'figure', { class: 'media' } );\n\n\t// TODO: This is a hack. Without it, the figure in the data pipeline will contain &nbsp; because\n\t// its only child is the UIElement (wrapper).\n\t//\n\t// Note: The hack is a copy&paste from widget utils; it makes the figure act like it's a widget.\n\tfigure.getFillerOffset = getFillerOffset;\n\n\twriter.insert( writer.createPositionAt( figure, 0 ), registry.getMediaViewElement( writer, url, options ) );\n\n\treturn figure;\n}\n\n/**\n * Returns a selected media element in the model, if any.\n *\n * @param {module:engine/model/selection~Selection} selection\n * @returns {module:engine/model/element~Element|null}\n */\nexport function getSelectedMediaModelWidget( selection ) {\n\tconst selectedElement = selection.getSelectedElement();\n\n\tif ( selectedElement && selectedElement.is( 'media' ) ) {\n\t\treturn selectedElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Creates a media element and inserts it into the model.\n *\n * **Note**: This method will use {@link module:engine/model/model~Model#insertContent `model.insertContent()`} logic of inserting content\n * if no `insertPosition` is passed.\n *\n * @param {module:engine/model/model~Model} model\n * @param {String} url An URL of an embeddable media.\n * @param {module:engine/model/position~Position} [insertPosition] Position to insert media. If not specified,\n * the default behavior of {@link module:engine/model/model~Model#insertContent `model.insertContent()`} will\n * be applied.\n */\nexport function insertMedia( model, url, insertPosition ) {\n\tmodel.change( writer => {\n\t\tconst mediaElement = writer.createElement( 'media', { url } );\n\n\t\tmodel.insertContent( mediaElement, insertPosition );\n\n\t\twriter.setSelection( mediaElement, 'on' );\n\t} );\n}\n\nfunction getFillerOffset() {\n\treturn null;\n}\n"]}]}