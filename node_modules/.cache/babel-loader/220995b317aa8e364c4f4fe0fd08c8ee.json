{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGVuZ2luZS92aWV3L3BsYWNlaG9sZGVyCiAqLwppbXBvcnQgJy4uLy4uL3RoZW1lL3BsYWNlaG9sZGVyLmNzcyc7IC8vIEVhY2ggZG9jdW1lbnQgc3RvcmVzIGluZm9ybWF0aW9uIGFib3V0IGl0cyBwbGFjZWhvbGRlciBlbGVtZW50cyBhbmQgY2hlY2sgZnVuY3Rpb25zLgoKY29uc3QgZG9jdW1lbnRQbGFjZWhvbGRlcnMgPSBuZXcgV2Vha01hcCgpOwovKioKICogQSBoZWxwZXIgdGhhdCBlbmFibGVzIGEgcGxhY2Vob2xkZXIgb24gdGhlIHByb3ZpZGVkIHZpZXcgZWxlbWVudCAoYWxzbyB1cGRhdGVzIGl0cyB2aXNpYmlsaXR5KS4KICogVGhlIHBsYWNlaG9sZGVyIGlzIGEgQ1NTIHBzZXVkb+KAk2VsZW1lbnQgKHdpdGggYSB0ZXh0IGNvbnRlbnQpIGF0dGFjaGVkIHRvIHRoZSBlbGVtZW50LgogKgogKiBUbyBjaGFuZ2UgdGhlIHBsYWNlaG9sZGVyIHRleHQsIHNpbXBseSBjYWxsIHRoaXMgbWV0aG9kIGFnYWluIHdpdGggbmV3IG9wdGlvbnMuCiAqCiAqIFRvIGRpc2FibGUgdGhlIHBsYWNlaG9sZGVyLCB1c2Uge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9wbGFjZWhvbGRlcn5kaXNhYmxlUGxhY2Vob2xkZXIgYGRpc2FibGVQbGFjZWhvbGRlcigpYH0gaGVscGVyLgogKgogKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBvZiB0aGUgcGxhY2Vob2xkZXIuCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L3ZpZXd+Vmlld30gb3B0aW9ucy52aWV3IEVkaXRpbmcgdmlldyBpbnN0YW5jZS4KICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvZWxlbWVudH5FbGVtZW50fSBvcHRpb25zLmVsZW1lbnQgRWxlbWVudCB0aGF0IHdpbGwgZ2FpbiBhIHBsYWNlaG9sZGVyLgogKiBTZWUgYG9wdGlvbnMuaXNEaXJlY3RIb3N0YCB0byBsZWFybiBtb3JlLgogKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy50ZXh0IFBsYWNlaG9sZGVyIHRleHQuCiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuaXNEaXJlY3RIb3N0PXRydWVdIElmIHNldCBgZmFsc2VgLCB0aGUgcGxhY2Vob2xkZXIgd2lsbCBub3QgYmUgZW5hYmxlZCBkaXJlY3RseQogKiBpbiB0aGUgcGFzc2VkIGBlbGVtZW50YCBidXQgaW4gb25lIG9mIGl0cyBjaGlsZHJlbiAoc2VsZWN0ZWQgYXV0b21hdGljYWxseSwgaS5lLiBhIGZpcnN0IGVtcHR5IGNoaWxkIGVsZW1lbnQpLgogKiBVc2VmdWwgd2hlbiBhdHRhY2hpbmcgcGxhY2Vob2xkZXJzIHRvIGVsZW1lbnRzIHRoYXQgY2FuIGhvc3Qgb3RoZXIgZWxlbWVudHMgKG5vdCBqdXN0IHRleHQpLCBmb3IgaW5zdGFuY2UsCiAqIGVkaXRhYmxlIHJvb3QgZWxlbWVudHMuCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGVuYWJsZVBsYWNlaG9sZGVyKG9wdGlvbnMpIHsKICBjb25zdCB7CiAgICB2aWV3LAogICAgZWxlbWVudCwKICAgIHRleHQsCiAgICBpc0RpcmVjdEhvc3QgPSB0cnVlCiAgfSA9IG9wdGlvbnM7CiAgY29uc3QgZG9jID0gdmlldy5kb2N1bWVudDsgLy8gVXNlIGEgc2luZ2xlIGEgc2luZ2xlIHBvc3QgZml4ZXIgcGVy4oCUZG9jdW1lbnQgdG8gdXBkYXRlIGFsbCBwbGFjZWhvbGRlcnMuCgogIGlmICghZG9jdW1lbnRQbGFjZWhvbGRlcnMuaGFzKGRvYykpIHsKICAgIGRvY3VtZW50UGxhY2Vob2xkZXJzLnNldChkb2MsIG5ldyBNYXAoKSk7IC8vIElmIGEgcG9zdC1maXhlciBjYWxsYmFjayBtYWtlcyBhIGNoYW5nZSwgaXQgc2hvdWxkIHJldHVybiBgdHJ1ZWAgc28gb3RoZXIgcG9zdOKAk2ZpeGVycwogICAgLy8gY2FuIHJl4oCTZXZhbHVhdGUgdGhlIGRvY3VtZW50IGFnYWluLgoKICAgIGRvYy5yZWdpc3RlclBvc3RGaXhlcih3cml0ZXIgPT4gdXBkYXRlRG9jdW1lbnRQbGFjZWhvbGRlcnMoZG9jLCB3cml0ZXIpKTsKICB9IC8vIFN0b3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBlbGVtZW50IHBsYWNlaG9sZGVyIHVuZGVyIGl0cyBkb2N1bWVudC4KCgogIGRvY3VtZW50UGxhY2Vob2xkZXJzLmdldChkb2MpLnNldChlbGVtZW50LCB7CiAgICB0ZXh0LAogICAgaXNEaXJlY3RIb3N0CiAgfSk7IC8vIFVwZGF0ZSB0aGUgcGxhY2Vob2xkZXJzIHJpZ2h0IGF3YXkuCgogIHZpZXcuY2hhbmdlKHdyaXRlciA9PiB1cGRhdGVEb2N1bWVudFBsYWNlaG9sZGVycyhkb2MsIHdyaXRlcikpOwp9Ci8qKgogKiBEaXNhYmxlcyB0aGUgcGxhY2Vob2xkZXIgZnVuY3Rpb25hbGl0eSBmcm9tIGEgZ2l2ZW4gZWxlbWVudC4KICoKICogU2VlIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvcGxhY2Vob2xkZXJ+ZW5hYmxlUGxhY2Vob2xkZXIgYGVuYWJsZVBsYWNlaG9sZGVyKClgfSB0byBsZWFybiBtb3JlLgogKgogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy92aWV3flZpZXd9IHZpZXcKICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvZWxlbWVudH5FbGVtZW50fSBlbGVtZW50CiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGRpc2FibGVQbGFjZWhvbGRlcih2aWV3LCBlbGVtZW50KSB7CiAgY29uc3QgZG9jID0gZWxlbWVudC5kb2N1bWVudDsKICB2aWV3LmNoYW5nZSh3cml0ZXIgPT4gewogICAgaWYgKCFkb2N1bWVudFBsYWNlaG9sZGVycy5oYXMoZG9jKSkgewogICAgICByZXR1cm47CiAgICB9CgogICAgY29uc3QgcGxhY2Vob2xkZXJzID0gZG9jdW1lbnRQbGFjZWhvbGRlcnMuZ2V0KGRvYyk7CiAgICBjb25zdCBjb25maWcgPSBwbGFjZWhvbGRlcnMuZ2V0KGVsZW1lbnQpOwogICAgd3JpdGVyLnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS1wbGFjZWhvbGRlcicsIGNvbmZpZy5ob3N0RWxlbWVudCk7CiAgICBoaWRlUGxhY2Vob2xkZXIod3JpdGVyLCBjb25maWcuaG9zdEVsZW1lbnQpOwogICAgcGxhY2Vob2xkZXJzLmRlbGV0ZShlbGVtZW50KTsKICB9KTsKfQovKioKICogU2hvd3MgYSBwbGFjZWhvbGRlciBpbiB0aGUgcHJvdmlkZWQgZWxlbWVudCBieSBjaGFuZ2luZyByZWxhdGVkIGF0dHJpYnV0ZXMgYW5kIENTUyBjbGFzc2VzLgogKgogKiAqKk5vdGUqKjogVGhpcyBoZWxwZXIgd2lsbCBub3QgdXBkYXRlIHRoZSBwbGFjZWhvbGRlciB2aXNpYmlsaXR5IG5vciBtYW5hZ2UgdGhlCiAqIGl0IGluIGFueSB3YXkgaW4gdGhlIGZ1dHVyZS4gV2hhdCBpdCBkb2VzIGlzIGEgb25l4oCTdGltZSBzdGF0ZSBjaGFuZ2Ugb2YgYW4gZWxlbWVudC4gVXNlCiAqIHtAbGluayBtb2R1bGU6ZW5naW5lL3ZpZXcvcGxhY2Vob2xkZXJ+ZW5hYmxlUGxhY2Vob2xkZXIgYGVuYWJsZVBsYWNlaG9sZGVyKClgfSBhbmQKICoge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9wbGFjZWhvbGRlcn5kaXNhYmxlUGxhY2Vob2xkZXIgYGRpc2FibGVQbGFjZWhvbGRlcigpYH0gZm9yIGZ1bGwKICogcGxhY2Vob2xkZXIgZnVuY3Rpb25hbGl0eS4KICoKICogKipOb3RlKio6IFRoaXMgaGVscGVyIHdpbGwgYmxpbmRseSBzaG93IHRoZSBwbGFjZWhvbGRlciBkaXJlY3RseSBpbiB0aGUgcm9vdCBlZGl0YWJsZSBlbGVtZW50IGlmCiAqIG9uZSBpcyBwYXNzZWQsIHdoaWNoIGNvdWxkIHJlc3VsdCBpbiBhIHZpc3VhbCBjbGFzaCBpZiB0aGUgZWRpdGFibGUgZWxlbWVudCBoYXMgc29tZSBjaGlsZHJlbgogKiAoZm9yIGluc3RhbmNlLCBhbiBlbXB0eSBwYXJhZ3JhcGgpLiBVc2Uge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9wbGFjZWhvbGRlcn5lbmFibGVQbGFjZWhvbGRlciBgZW5hYmxlUGxhY2Vob2xkZXIoKWB9CiAqIGluIHRoYXQgY2FzZSBvciBtYWtlIHN1cmUgdGhlIGNvcnJlY3QgZWxlbWVudCBpcyBwYXNzZWQgdG8gdGhlIGhlbHBlci4KICoKICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvZG93bmNhc3R3cml0ZXJ+RG93bmNhc3RXcml0ZXJ9IHdyaXRlcgogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy9lbGVtZW50fkVsZW1lbnR9IGVsZW1lbnQKICogQHJldHVybnMge0Jvb2xlYW59IGB0cnVlYCwgaWYgYW55IGNoYW5nZXMgd2VyZSBtYWRlIHRvIHRoZSBgZWxlbWVudGAuCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHNob3dQbGFjZWhvbGRlcih3cml0ZXIsIGVsZW1lbnQpIHsKICBpZiAoIWVsZW1lbnQuaGFzQ2xhc3MoJ2NrLXBsYWNlaG9sZGVyJykpIHsKICAgIHdyaXRlci5hZGRDbGFzcygnY2stcGxhY2Vob2xkZXInLCBlbGVtZW50KTsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgcmV0dXJuIGZhbHNlOwp9Ci8qKgogKiBIaWRlcyBhIHBsYWNlaG9sZGVyIGluIHRoZSBlbGVtZW50IGJ5IGNoYW5naW5nIHJlbGF0ZWQgYXR0cmlidXRlcyBhbmQgQ1NTIGNsYXNzZXMuCiAqCiAqICoqTm90ZSoqOiBUaGlzIGhlbHBlciB3aWxsIG5vdCB1cGRhdGUgdGhlIHBsYWNlaG9sZGVyIHZpc2liaWxpdHkgbm9yIG1hbmFnZSB0aGUKICogaXQgaW4gYW55IHdheSBpbiB0aGUgZnV0dXJlLiBXaGF0IGl0IGRvZXMgaXMgYSBvbmXigJN0aW1lIHN0YXRlIGNoYW5nZSBvZiBhbiBlbGVtZW50LiBVc2UKICoge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9wbGFjZWhvbGRlcn5lbmFibGVQbGFjZWhvbGRlciBgZW5hYmxlUGxhY2Vob2xkZXIoKWB9IGFuZAogKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS92aWV3L3BsYWNlaG9sZGVyfmRpc2FibGVQbGFjZWhvbGRlciBgZGlzYWJsZVBsYWNlaG9sZGVyKClgfSBmb3IgZnVsbAogKiBwbGFjZWhvbGRlciBmdW5jdGlvbmFsaXR5LgogKgogKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy9kb3duY2FzdHdyaXRlcn5Eb3duY2FzdFdyaXRlcn0gd3JpdGVyCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS92aWV3L2VsZW1lbnR+RWxlbWVudH0gZWxlbWVudAogKiBAcmV0dXJucyB7Qm9vbGVhbn0gYHRydWVgLCBpZiBhbnkgY2hhbmdlcyB3ZXJlIG1hZGUgdG8gdGhlIGBlbGVtZW50YC4KICovCgpleHBvcnQgZnVuY3Rpb24gaGlkZVBsYWNlaG9sZGVyKHdyaXRlciwgZWxlbWVudCkgewogIGlmIChlbGVtZW50Lmhhc0NsYXNzKCdjay1wbGFjZWhvbGRlcicpKSB7CiAgICB3cml0ZXIucmVtb3ZlQ2xhc3MoJ2NrLXBsYWNlaG9sZGVyJywgZWxlbWVudCk7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIHJldHVybiBmYWxzZTsKfQovKioKICogQ2hlY2tzIGlmIGEgcGxhY2Vob2xkZXIgc2hvdWxkIGJlIGRpc3BsYXllZCBpbiB0aGUgZWxlbWVudC4KICoKICogKipOb3RlKio6IFRoaXMgaGVscGVyIHdpbGwgYmxpbmRseSBjaGVjayB0aGUgcG9zc2liaWxpdHkgb2Ygc2hvd2luZyBhIHBsYWNlaG9sZGVyIGRpcmVjdGx5IGluIHRoZQogKiByb290IGVkaXRhYmxlIGVsZW1lbnQgaWYgb25lIGlzIHBhc3NlZCwgd2hpY2ggbWF5IG5vdCBiZSB0aGUgZXhwZWN0ZWQgcmVzdWx0LiBJZiBhbiBlbGVtZW50IGNhbgogKiBob3N0IG90aGVyIGVsZW1lbnRzIChub3QganVzdCB0ZXh0KSwgbW9zdCBsaWtlbHkgb25lIG9mIGl0cyBjaGlsZHJlbiBzaG91bGQgYmUgY2hlY2tlZCBpbnN0ZWFkCiAqIGJlY2F1c2UgaXQgd2lsbCBiZSB0aGUgZmluYWwgaG9zdCBmb3IgdGhlIHBsYWNlaG9sZGVyLiBVc2UKICoge0BsaW5rIG1vZHVsZTplbmdpbmUvdmlldy9wbGFjZWhvbGRlcn5lbmFibGVQbGFjZWhvbGRlciBgZW5hYmxlUGxhY2Vob2xkZXIoKWB9IGluIHRoYXQgY2FzZSBvciBtYWtlCiAqIHN1cmUgdGhlIGNvcnJlY3QgZWxlbWVudCBpcyBwYXNzZWQgdG8gdGhlIGhlbHBlci4KICoKICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvZWxlbWVudH5FbGVtZW50fSBlbGVtZW50CiAqIEByZXR1cm5zIHtCb29sZWFufQogKi8KCmV4cG9ydCBmdW5jdGlvbiBuZWVkc1BsYWNlaG9sZGVyKGVsZW1lbnQpIHsKICBjb25zdCBkb2MgPSBlbGVtZW50LmRvY3VtZW50OyAvLyBUaGUgZWxlbWVudCB3YXMgcmVtb3ZlZCBmcm9tIGRvY3VtZW50LgoKICBpZiAoIWRvYykgewogICAgcmV0dXJuIGZhbHNlOwogIH0gLy8gVGhlIGVsZW1lbnQgaXMgZW1wdHkgb25seSBhcyBsb25nIGFzIGl0IGNvbnRhaW5zIG5vdGhpbmcgYnV0IHVpRWxlbWVudHMuCgoKICBjb25zdCBpc0VtcHR5aXNoID0gIUFycmF5LmZyb20oZWxlbWVudC5nZXRDaGlsZHJlbigpKS5zb21lKGVsZW1lbnQgPT4gIWVsZW1lbnQuaXMoJ3VpRWxlbWVudCcpKTsgLy8gSWYgdGhlIGVsZW1lbnQgaXMgZW1wdHkgYW5kIHRoZSBkb2N1bWVudCBpcyBibHVycmVkLgoKICBpZiAoIWRvYy5pc0ZvY3VzZWQgJiYgaXNFbXB0eWlzaCkgewogICAgcmV0dXJuIHRydWU7CiAgfQoKICBjb25zdCB2aWV3U2VsZWN0aW9uID0gZG9jLnNlbGVjdGlvbjsKICBjb25zdCBzZWxlY3Rpb25BbmNob3IgPSB2aWV3U2VsZWN0aW9uLmFuY2hvcjsgLy8gSWYgZG9jdW1lbnQgaXMgZm9jdXNlZCBhbmQgdGhlIGVsZW1lbnQgaXMgZW1wdHkgYnV0IHRoZSBzZWxlY3Rpb24gaXMgbm90IGFuY2hvcmVkIGluc2lkZSBpdC4KCiAgaWYgKGlzRW1wdHlpc2ggJiYgc2VsZWN0aW9uQW5jaG9yICYmIHNlbGVjdGlvbkFuY2hvci5wYXJlbnQgIT09IGVsZW1lbnQpIHsKICAgIHJldHVybiB0cnVlOwogIH0KCiAgcmV0dXJuIGZhbHNlOwp9IC8vIFVwZGF0ZXMgYWxsIHBsYWNlaG9sZGVycyBhc3NvY2lhdGVkIHdpdGggYSBkb2N1bWVudCBpbiBhIHBvc3TigJNmaXhlciBjYWxsYmFjay4KLy8KLy8gQHByaXZhdGUKLy8gQHBhcmFtIHsgbW9kdWxlOmVuZ2luZS92aWV3L2RvY3VtZW50fkRvY3VtZW50fSBkb2MKLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvZG93bmNhc3R3cml0ZXJ+RG93bmNhc3RXcml0ZXJ9IHdyaXRlcgovLyBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZiBhbnkgY2hhbmdlcyB3ZXJlIG1hZGUgdG8gdGhlIHZpZXcgZG9jdW1lbnQuCgpmdW5jdGlvbiB1cGRhdGVEb2N1bWVudFBsYWNlaG9sZGVycyhkb2MsIHdyaXRlcikgewogIGNvbnN0IHBsYWNlaG9sZGVycyA9IGRvY3VtZW50UGxhY2Vob2xkZXJzLmdldChkb2MpOwogIGxldCB3YXNWaWV3TW9kaWZpZWQgPSBmYWxzZTsKCiAgZm9yIChjb25zdCBbZWxlbWVudCwgY29uZmlnXSBvZiBwbGFjZWhvbGRlcnMpIHsKICAgIGlmICh1cGRhdGVQbGFjZWhvbGRlcih3cml0ZXIsIGVsZW1lbnQsIGNvbmZpZykpIHsKICAgICAgd2FzVmlld01vZGlmaWVkID0gdHJ1ZTsKICAgIH0KICB9CgogIHJldHVybiB3YXNWaWV3TW9kaWZpZWQ7Cn0gLy8gVXBkYXRlcyBhIHNpbmdsZSBwbGFjZWhvbGRlciBpbiBhIHBvc3TigJNmaXhlciBjYWxsYmFjay4KLy8KLy8gQHByaXZhdGUKLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvZG93bmNhc3R3cml0ZXJ+RG93bmNhc3RXcml0ZXJ9IHdyaXRlcgovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvdmlldy9lbGVtZW50fkVsZW1lbnR9IGVsZW1lbnQKLy8gQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBDb25maWd1cmF0aW9uIG9mIHRoZSBwbGFjZWhvbGRlcgovLyBAcGFyYW0ge1N0cmluZ30gY29uZmlnLnRleHQKLy8gQHBhcmFtIHtCb29sZWFufSBjb25maWcuaXNEaXJlY3RIb3N0Ci8vIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIGlmIGFueSBjaGFuZ2VzIHdlcmUgbWFkZSB0byB0aGUgdmlldyBkb2N1bWVudC4KCgpmdW5jdGlvbiB1cGRhdGVQbGFjZWhvbGRlcih3cml0ZXIsIGVsZW1lbnQsIGNvbmZpZykgewogIGNvbnN0IHsKICAgIHRleHQsCiAgICBpc0RpcmVjdEhvc3QKICB9ID0gY29uZmlnOwogIGNvbnN0IGhvc3RFbGVtZW50ID0gaXNEaXJlY3RIb3N0ID8gZWxlbWVudCA6IGdldENoaWxkUGxhY2Vob2xkZXJIb3N0U3Vic3RpdHV0ZShlbGVtZW50KTsKICBsZXQgd2FzVmlld01vZGlmaWVkID0gZmFsc2U7IC8vIFdoZW4gbm90IGEgZGlyZWN0IGhvc3QsIGl0IGNvdWxkIGhhcHBlbiB0aGF0IHRoZXJlIGlzIG5vIGNoaWxkIGVsZW1lbnQKICAvLyBjYXBhYmxlIG9mIGRpc3BsYXlpbmcgYSBwbGFjZWhvbGRlci4KCiAgaWYgKCFob3N0RWxlbWVudCkgewogICAgcmV0dXJuIGZhbHNlOwogIH0gLy8gQ2FjaGUgdGhlIGhvc3QgZWxlbWVudC4gSXQgd2lsbCBiZSBuZWNlc3NhcnkgZm9yIGRpc2FibGVQbGFjZWhvbGRlcigpIHRvIGtub3cKICAvLyB3aGljaCBlbGVtZW50IHNob3VsZCBoYXZlIGNsYXNzIGFuZCBhdHRyaWJ1dGUgcmVtb3ZlZCBiZWNhdXNlLCBkZXBlbmRpbmcgb24KICAvLyB0aGUgY29uZmlnLmlzRGlyZWN0SG9zdCB2YWx1ZSwgaXQgY291bGQgYmUgdGhlIGVsZW1lbnQgb3Igb25lIG9mIGl0cyBkZXNjZW5kYW50cy4KCgogIGNvbmZpZy5ob3N0RWxlbWVudCA9IGhvc3RFbGVtZW50OyAvLyBUaGlzIG1heSBiZSBuZWNlc3Nhcnkgd2hlbiB1cGRhdGluZyB0aGUgcGxhY2Vob2xkZXIgdGV4dCB0byBzb21ldGhpbmcgZWxzZS4KCiAgaWYgKGhvc3RFbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1wbGFjZWhvbGRlcicpICE9PSB0ZXh0KSB7CiAgICB3cml0ZXIuc2V0QXR0cmlidXRlKCdkYXRhLXBsYWNlaG9sZGVyJywgdGV4dCwgaG9zdEVsZW1lbnQpOwogICAgd2FzVmlld01vZGlmaWVkID0gdHJ1ZTsKICB9CgogIGlmIChuZWVkc1BsYWNlaG9sZGVyKGhvc3RFbGVtZW50KSkgewogICAgaWYgKHNob3dQbGFjZWhvbGRlcih3cml0ZXIsIGhvc3RFbGVtZW50KSkgewogICAgICB3YXNWaWV3TW9kaWZpZWQgPSB0cnVlOwogICAgfQogIH0gZWxzZSBpZiAoaGlkZVBsYWNlaG9sZGVyKHdyaXRlciwgaG9zdEVsZW1lbnQpKSB7CiAgICB3YXNWaWV3TW9kaWZpZWQgPSB0cnVlOwogIH0KCiAgcmV0dXJuIHdhc1ZpZXdNb2RpZmllZDsKfSAvLyBHZXRzIGEgY2hpbGQgZWxlbWVudCBjYXBhYmxlIG9mIGRpc3BsYXlpbmcgYSBwbGFjZWhvbGRlciBpZiBhIHBhcmVudCBlbGVtZW50IGNhbiBob3N0IG1vcmUKLy8gdGhhbiBqdXN0IHRleHQgKGZvciBpbnN0YW5jZSwgd2hlbiBpdCBpcyBhIHJvb3QgZWRpdGFibGUgZWxlbWVudCkuIFRoZSBjaGlsZCBlbGVtZW50Ci8vIGNhbiB0aGVuIGJlIHVzZWQgaW4gb3RoZXIgcGxhY2Vob2xkZXIgaGVscGVycyBhcyBhIHN1YnN0aXR1dGUgb2YgaXRzIHBhcmVudC4KLy8KLy8gQHByaXZhdGUKLy8gQHBhcmFtIHttb2R1bGU6ZW5naW5lL3ZpZXcvZWxlbWVudH5FbGVtZW50fSBwYXJlbnQKLy8gQHJldHVybnMge21vZHVsZTplbmdpbmUvdmlldy9lbGVtZW50fkVsZW1lbnR8bnVsbH0KCgpmdW5jdGlvbiBnZXRDaGlsZFBsYWNlaG9sZGVySG9zdFN1YnN0aXR1dGUocGFyZW50KSB7CiAgaWYgKHBhcmVudC5jaGlsZENvdW50ID09PSAxKSB7CiAgICBjb25zdCBmaXJzdENoaWxkID0gcGFyZW50LmdldENoaWxkKDApOwoKICAgIGlmIChmaXJzdENoaWxkLmlzKCdlbGVtZW50JykgJiYgIWZpcnN0Q2hpbGQuaXMoJ3VpRWxlbWVudCcpKSB7CiAgICAgIHJldHVybiBmaXJzdENoaWxkOwogICAgfQogIH0KCiAgcmV0dXJuIG51bGw7Cn0="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js"],"names":["documentPlaceholders","WeakMap","enablePlaceholder","options","view","element","text","isDirectHost","doc","document","has","set","Map","registerPostFixer","writer","updateDocumentPlaceholders","get","change","disablePlaceholder","placeholders","config","removeAttribute","hostElement","hidePlaceholder","delete","showPlaceholder","hasClass","addClass","removeClass","needsPlaceholder","isEmptyish","Array","from","getChildren","some","is","isFocused","viewSelection","selection","selectionAnchor","anchor","parent","wasViewModified","updatePlaceholder","getChildPlaceholderHostSubstitute","getAttribute","setAttribute","childCount","firstChild","getChild"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/placeholder\n */\n\nimport '../../theme/placeholder.css';\n\n// Each document stores information about its placeholder elements and check functions.\nconst documentPlaceholders = new WeakMap();\n\n/**\n * A helper that enables a placeholder on the provided view element (also updates its visibility).\n * The placeholder is a CSS pseudo–element (with a text content) attached to the element.\n *\n * To change the placeholder text, simply call this method again with new options.\n *\n * To disable the placeholder, use {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} helper.\n *\n * @param {Object} [options] Configuration options of the placeholder.\n * @param {module:engine/view/view~View} options.view Editing view instance.\n * @param {module:engine/view/element~Element} options.element Element that will gain a placeholder.\n * See `options.isDirectHost` to learn more.\n * @param {String} options.text Placeholder text.\n * @param {Boolean} [options.isDirectHost=true] If set `false`, the placeholder will not be enabled directly\n * in the passed `element` but in one of its children (selected automatically, i.e. a first empty child element).\n * Useful when attaching placeholders to elements that can host other elements (not just text), for instance,\n * editable root elements.\n */\nexport function enablePlaceholder( options ) {\n\tconst { view, element, text, isDirectHost = true } = options;\n\tconst doc = view.document;\n\n\t// Use a single a single post fixer per—document to update all placeholders.\n\tif ( !documentPlaceholders.has( doc ) ) {\n\t\tdocumentPlaceholders.set( doc, new Map() );\n\n\t\t// If a post-fixer callback makes a change, it should return `true` so other post–fixers\n\t\t// can re–evaluate the document again.\n\t\tdoc.registerPostFixer( writer => updateDocumentPlaceholders( doc, writer ) );\n\t}\n\n\t// Store information about the element placeholder under its document.\n\tdocumentPlaceholders.get( doc ).set( element, {\n\t\ttext,\n\t\tisDirectHost\n\t} );\n\n\t// Update the placeholders right away.\n\tview.change( writer => updateDocumentPlaceholders( doc, writer ) );\n}\n\n/**\n * Disables the placeholder functionality from a given element.\n *\n * See {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} to learn more.\n *\n * @param {module:engine/view/view~View} view\n * @param {module:engine/view/element~Element} element\n */\nexport function disablePlaceholder( view, element ) {\n\tconst doc = element.document;\n\n\tview.change( writer => {\n\t\tif ( !documentPlaceholders.has( doc ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst placeholders = documentPlaceholders.get( doc );\n\t\tconst config = placeholders.get( element );\n\n\t\twriter.removeAttribute( 'data-placeholder', config.hostElement );\n\t\thidePlaceholder( writer, config.hostElement );\n\n\t\tplaceholders.delete( element );\n\t} );\n}\n\n/**\n * Shows a placeholder in the provided element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * **Note**: This helper will blindly show the placeholder directly in the root editable element if\n * one is passed, which could result in a visual clash if the editable element has some children\n * (for instance, an empty paragraph). Use {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`}\n * in that case or make sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function showPlaceholder( writer, element ) {\n\tif ( !element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.addClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Hides a placeholder in the element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\nexport function hidePlaceholder( writer, element ) {\n\tif ( element.hasClass( 'ck-placeholder' ) ) {\n\t\twriter.removeClass( 'ck-placeholder', element );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Checks if a placeholder should be displayed in the element.\n *\n * **Note**: This helper will blindly check the possibility of showing a placeholder directly in the\n * root editable element if one is passed, which may not be the expected result. If an element can\n * host other elements (not just text), most likely one of its children should be checked instead\n * because it will be the final host for the placeholder. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} in that case or make\n * sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean}\n */\nexport function needsPlaceholder( element ) {\n\tconst doc = element.document;\n\n\t// The element was removed from document.\n\tif ( !doc ) {\n\t\treturn false;\n\t}\n\n\t// The element is empty only as long as it contains nothing but uiElements.\n\tconst isEmptyish = !Array.from( element.getChildren() )\n\t\t.some( element => !element.is( 'uiElement' ) );\n\n\t// If the element is empty and the document is blurred.\n\tif ( !doc.isFocused && isEmptyish ) {\n\t\treturn true;\n\t}\n\n\tconst viewSelection = doc.selection;\n\tconst selectionAnchor = viewSelection.anchor;\n\n\t// If document is focused and the element is empty but the selection is not anchored inside it.\n\tif ( isEmptyish && selectionAnchor && selectionAnchor.parent !== element ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// Updates all placeholders associated with a document in a post–fixer callback.\n//\n// @private\n// @param { module:engine/view/document~Document} doc\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updateDocumentPlaceholders( doc, writer ) {\n\tconst placeholders = documentPlaceholders.get( doc );\n\tlet wasViewModified = false;\n\n\tfor ( const [ element, config ] of placeholders ) {\n\t\tif ( updatePlaceholder( writer, element, config ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t}\n\n\treturn wasViewModified;\n}\n\n// Updates a single placeholder in a post–fixer callback.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/element~Element} element\n// @param {Object} config Configuration of the placeholder\n// @param {String} config.text\n// @param {Boolean} config.isDirectHost\n// @returns {Boolean} True if any changes were made to the view document.\nfunction updatePlaceholder( writer, element, config ) {\n\tconst { text, isDirectHost } = config;\n\tconst hostElement = isDirectHost ? element : getChildPlaceholderHostSubstitute( element );\n\tlet wasViewModified = false;\n\n\t// When not a direct host, it could happen that there is no child element\n\t// capable of displaying a placeholder.\n\tif ( !hostElement ) {\n\t\treturn false;\n\t}\n\n\t// Cache the host element. It will be necessary for disablePlaceholder() to know\n\t// which element should have class and attribute removed because, depending on\n\t// the config.isDirectHost value, it could be the element or one of its descendants.\n\tconfig.hostElement = hostElement;\n\n\t// This may be necessary when updating the placeholder text to something else.\n\tif ( hostElement.getAttribute( 'data-placeholder' ) !== text ) {\n\t\twriter.setAttribute( 'data-placeholder', text, hostElement );\n\t\twasViewModified = true;\n\t}\n\n\tif ( needsPlaceholder( hostElement ) ) {\n\t\tif ( showPlaceholder( writer, hostElement ) ) {\n\t\t\twasViewModified = true;\n\t\t}\n\t} else if ( hidePlaceholder( writer, hostElement ) ) {\n\t\twasViewModified = true;\n\t}\n\n\treturn wasViewModified;\n}\n\n// Gets a child element capable of displaying a placeholder if a parent element can host more\n// than just text (for instance, when it is a root editable element). The child element\n// can then be used in other placeholder helpers as a substitute of its parent.\n//\n// @private\n// @param {module:engine/view/element~Element} parent\n// @returns {module:engine/view/element~Element|null}\nfunction getChildPlaceholderHostSubstitute( parent ) {\n\tif ( parent.childCount === 1 ) {\n\t\tconst firstChild = parent.getChild( 0 );\n\n\t\tif ( firstChild.is( 'element' ) && !firstChild.is( 'uiElement' ) ) {\n\t\t\treturn firstChild;\n\t\t}\n\t}\n\n\treturn null;\n}\n"]}]}