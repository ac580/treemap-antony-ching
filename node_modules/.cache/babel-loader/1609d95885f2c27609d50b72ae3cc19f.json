{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-widget/src/widgetresize/resizer.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-widget/src/widgetresize/resizer.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-widget/src/widgetresize/resizer.js"],"names":["View","Template","Rect","ObservableMixin","mix","ResizeState","Resizer","constructor","options","_options","_domResizerWrapper","set","decorate","attach","that","widgetElement","viewElement","writer","downcastWriter","viewResizerWrapper","createUIElement","class","domDocument","domElement","toDomElement","_appendHandles","_appendSizeUI","on","evt","propName","newValue","style","display","isEnabled","insert","createPositionAt","addClass","begin","domResizeHandle","state","_sizeUI","bindToState","_getHandleHost","_getResizeHost","updateSize","domEventData","domHandleHost","domResizeHost","unit","newSize","_proposeNewSize","width","widthPercents","domHandleHostRect","handleHostWidth","Math","round","handleHostHeight","height","domResizeHostRect","redraw","update","commit","proposedWidthPercents","proposedWidth","onCommit","_cleanup","cancel","destroy","handleHostRect","domWrapper","existsInDom","widgetWrapper","parentElement","handleHost","clientRect","offsets","left","offsetLeft","top","offsetTop","offsetHeight","offsetWidth","isSameNode","element","ownerDocument","contains","containsHandle","isResizeHandle","classList","dismiss","isVisible","currentCoordinates","extractCoordinates","isCentered","enlargement","x","_referenceCoordinates","originalWidth","y","originalHeight","activeHandlePosition","endsWith","proposedSize","abs","dominant","aspectRatio","max","targetSize","min","originalWidthPercents","getResizeHost","getHandleHost","resizerPositions","currentPosition","appendChild","tag","attributes","getResizerClass","render","sizeUI","SizeView","_getHandlePosition","domHandle","position","bind","bindTemplate","setTemplate","to","value","if","visible","children","text","resizerState","unbind","resizerPosition","event","pageX","pageY"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module widget/widgetresize/resizer\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\n\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\nimport ResizeState from './resizerstate';\n\n/**\n * Represents a resizer for a single resizable object.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Resizer {\n\t/**\n\t * @param {module:widget/widgetresize~ResizerOptions} options Resizer options.\n\t */\n\tconstructor( options ) {\n\t\t/**\n\t\t * Stores the state of the resizable host geometry, such as the original width, the currently proposed height, etc.\n\t\t *\n\t\t * Note that a new state is created for each resize transaction.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:widget/widgetresize/resizerstate~ResizerState} #state\n\t\t */\n\n\t\t/**\n\t\t * A view displaying the proposed new element size during the resizing.\n\t\t *\n\t\t * @protected\n\t\t * @readonly\n\t\t * @member {module:widget/widgetresize/resizer~SizeView} #_sizeUI\n\t\t */\n\n\t\t/**\n\t\t * Options passed to the {@link #constructor}.\n\t\t *\n\t\t * @private\n\t\t * @type {module:widget/widgetresize~ResizerOptions}\n\t\t */\n\t\tthis._options = options;\n\n\t\t/**\n\t\t * Container of the entire resize UI.\n\t\t *\n\t\t * Note that this property is initialized only after the element bound with the resizer is drawn\n\t\t * so it will be a `null` when uninitialized.\n\t\t *\n\t\t * @private\n\t\t * @type {HTMLElement|null}\n\t\t */\n\t\tthis._domResizerWrapper = null;\n\n\t\t/**\n\t\t * @observable\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\tthis.decorate( 'begin' );\n\t\tthis.decorate( 'cancel' );\n\t\tthis.decorate( 'commit' );\n\t\tthis.decorate( 'updateSize' );\n\t}\n\n\t/**\n\t * Attaches the resizer to the DOM.\n\t */\n\tattach() {\n\t\tconst that = this;\n\t\tconst widgetElement = this._options.viewElement;\n\t\tconst writer = this._options.downcastWriter;\n\n\t\tconst viewResizerWrapper = writer.createUIElement( 'div', {\n\t\t\tclass: 'ck ck-reset_all ck-widget__resizer'\n\t\t}, function( domDocument ) {\n\t\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t\tthat._appendHandles( domElement );\n\t\t\tthat._appendSizeUI( domElement );\n\n\t\t\tthat._domResizerWrapper = domElement;\n\n\t\t\tthat.on( 'change:isEnabled', ( evt, propName, newValue ) => {\n\t\t\t\tdomElement.style.display = newValue ? '' : 'none';\n\t\t\t} );\n\n\t\t\tdomElement.style.display = that.isEnabled ? '' : 'none';\n\n\t\t\treturn domElement;\n\t\t} );\n\n\t\t// Append the resizer wrapper to the widget's wrapper.\n\t\twriter.insert( writer.createPositionAt( widgetElement, 'end' ), viewResizerWrapper );\n\t\twriter.addClass( 'ck-widget_with-resizer', widgetElement );\n\t}\n\n\t/**\n\t * Starts the resizing process.\n\t *\n\t * Creates a new {@link #state} for the current process.\n\t *\n\t * @fires begin\n\t * @param {HTMLElement} domResizeHandle Clicked handle.\n\t */\n\tbegin( domResizeHandle ) {\n\t\tthis.state = new ResizeState( this._options );\n\n\t\tthis._sizeUI.bindToState( this._options, this.state );\n\n\t\tthis.state.begin( domResizeHandle, this._getHandleHost(), this._getResizeHost() );\n\t}\n\n\t/**\n\t * Updates the proposed size based on `domEventData`.\n\t *\n\t * @fires updateSize\n\t * @param {Event} domEventData\n\t */\n\tupdateSize( domEventData ) {\n\t\tconst domHandleHost = this._getHandleHost();\n\t\tconst domResizeHost = this._getResizeHost();\n\t\tconst unit = this._options.unit;\n\t\tconst newSize = this._proposeNewSize( domEventData );\n\n\t\tdomResizeHost.style.width = ( unit === '%' ? newSize.widthPercents : newSize.width ) + this._options.unit;\n\n\t\tconst domHandleHostRect = new Rect( domHandleHost );\n\n\t\tnewSize.handleHostWidth = Math.round( domHandleHostRect.width );\n\t\tnewSize.handleHostHeight = Math.round( domHandleHostRect.height );\n\n\t\t// Handle max-width limitation.\n\t\tconst domResizeHostRect = new Rect( domHandleHost );\n\n\t\tnewSize.width = Math.round( domResizeHostRect.width );\n\t\tnewSize.height = Math.round( domResizeHostRect.height );\n\n\t\tthis.redraw( domHandleHostRect );\n\n\t\tthis.state.update( newSize );\n\t}\n\n\t/**\n\t * Applies the geometry proposed with the resizer.\n\t *\n\t * @fires commit\n\t */\n\tcommit() {\n\t\tconst unit = this._options.unit;\n\t\tconst newValue = ( unit === '%' ? this.state.proposedWidthPercents : this.state.proposedWidth ) + this._options.unit;\n\n\t\tthis._options.onCommit( newValue );\n\n\t\tthis._cleanup();\n\t}\n\n\t/**\n\t * Cancels and rejects the proposed resize dimensions, hiding the UI.\n\t *\n\t * @fires cancel\n\t */\n\tcancel() {\n\t\tthis._cleanup();\n\t}\n\n\t/**\n\t * Destroys the resizer.\n\t */\n\tdestroy() {\n\t\tthis.cancel();\n\t}\n\n\t/**\n\t * Redraws the resizer.\n\t *\n\t * @param {module:utils/dom/rect~Rect} [handleHostRect] Handle host rectangle might be given to improve performance.\n\t */\n\tredraw( handleHostRect ) {\n\t\t// TODO review this\n\t\tconst domWrapper = this._domResizerWrapper;\n\n\t\tif ( existsInDom( domWrapper ) ) {\n\t\t\t// Refresh only if resizer exists in the DOM.\n\t\t\tconst widgetWrapper = domWrapper.parentElement;\n\t\t\tconst handleHost = this._getHandleHost();\n\t\t\tconst clientRect = handleHostRect || new Rect( handleHost );\n\n\t\t\tdomWrapper.style.width = clientRect.width + 'px';\n\t\t\tdomWrapper.style.height = clientRect.height + 'px';\n\n\t\t\tconst offsets = {\n\t\t\t\tleft: handleHost.offsetLeft,\n\t\t\t\ttop: handleHost.offsetTop,\n\t\t\t\theight: handleHost.offsetHeight,\n\t\t\t\twidth: handleHost.offsetWidth\n\t\t\t};\n\n\t\t\t// In case a resizing host is not a widget wrapper, we need to compensate\n\t\t\t// for any additional offsets the resize host might have. E.g. wrapper padding\n\t\t\t// or simply another editable. By doing that the border and resizers are shown\n\t\t\t// only around the resize host.\n\t\t\tif ( !widgetWrapper.isSameNode( handleHost ) ) {\n\t\t\t\tdomWrapper.style.left = offsets.left + 'px';\n\t\t\t\tdomWrapper.style.top = offsets.top + 'px';\n\n\t\t\t\tdomWrapper.style.height = offsets.height + 'px';\n\t\t\t\tdomWrapper.style.width = offsets.width + 'px';\n\t\t\t}\n\t\t}\n\n\t\tfunction existsInDom( element ) {\n\t\t\treturn element && element.ownerDocument && element.ownerDocument.contains( element );\n\t\t}\n\t}\n\n\tcontainsHandle( domElement ) {\n\t\treturn this._domResizerWrapper.contains( domElement );\n\t}\n\n\tstatic isResizeHandle( domElement ) {\n\t\treturn domElement.classList.contains( 'ck-widget__resizer__handle' );\n\t}\n\n\t/**\n\t * Cleans up the context state.\n\t *\n\t * @protected\n\t */\n\t_cleanup() {\n\t\tthis._sizeUI.dismiss();\n\t\tthis._sizeUI.isVisible = false;\n\t}\n\n\t/**\n\t * Calculates the proposed size as the resize handles are dragged.\n\t *\n\t * @private\n\t * @param {Event} domEventData Event data that caused the size update request. It should be used to calculate the proposed size.\n\t * @returns {Object} return\n\t * @returns {Number} return.width Proposed width.\n\t * @returns {Number} return.height Proposed height.\n\t */\n\t_proposeNewSize( domEventData ) {\n\t\tconst state = this.state;\n\t\tconst currentCoordinates = extractCoordinates( domEventData );\n\t\tconst isCentered = this._options.isCentered ? this._options.isCentered( this ) : true;\n\n\t\t// Enlargement defines how much the resize host has changed in a given axis. Naturally it could be a negative number\n\t\t// meaning that it has been shrunk.\n\t\t//\n\t\t// +----------------+--+\n\t\t// |                |  |\n\t\t// |       img      |  |\n\t\t// |  /handle host  |  |\n\t\t// +----------------+  | ^\n\t\t// |                   | | - enlarge y\n\t\t// +-------------------+ v\n\t\t// \t\t\t\t\t<-->\n\t\t// \t\t\t\t\t enlarge x\n\t\tconst enlargement = {\n\t\t\tx: state._referenceCoordinates.x - ( currentCoordinates.x + state.originalWidth ),\n\t\t\ty: ( currentCoordinates.y - state.originalHeight ) - state._referenceCoordinates.y\n\t\t};\n\n\t\tif ( isCentered && state.activeHandlePosition.endsWith( '-right' ) ) {\n\t\t\tenlargement.x = currentCoordinates.x - ( state._referenceCoordinates.x + state.originalWidth );\n\t\t}\n\n\t\t// Objects needs to be resized twice as much in horizontal axis if centered, since enlargement is counted from\n\t\t// one resized corner to your cursor. It needs to be duplicated to compensate for the other side too.\n\t\tif ( isCentered ) {\n\t\t\tenlargement.x *= 2;\n\t\t}\n\n\t\t// const resizeHost = this._getResizeHost();\n\n\t\t// The size proposed by the user. It does not consider the aspect ratio.\n\t\tconst proposedSize = {\n\t\t\twidth: Math.abs( state.originalWidth + enlargement.x ),\n\t\t\theight: Math.abs( state.originalHeight + enlargement.y )\n\t\t};\n\n\t\t// Dominant determination must take the ratio into account.\n\t\tproposedSize.dominant = proposedSize.width / state.aspectRatio > proposedSize.height ? 'width' : 'height';\n\t\tproposedSize.max = proposedSize[ proposedSize.dominant ];\n\n\t\t// Proposed size, respecting the aspect ratio.\n\t\tconst targetSize = {\n\t\t\twidth: proposedSize.width,\n\t\t\theight: proposedSize.height\n\t\t};\n\n\t\tif ( proposedSize.dominant == 'width' ) {\n\t\t\ttargetSize.height = targetSize.width / state.aspectRatio;\n\t\t} else {\n\t\t\ttargetSize.width = targetSize.height * state.aspectRatio;\n\t\t}\n\n\t\treturn {\n\t\t\twidth: Math.round( targetSize.width ),\n\t\t\theight: Math.round( targetSize.height ),\n\t\t\twidthPercents: Math.min( Math.round( state.originalWidthPercents / state.originalWidth * targetSize.width * 100 ) / 100, 100 )\n\t\t};\n\t}\n\n\t/**\n\t * Obtains the resize host.\n\t *\n\t * Resize host is an object that receives dimensions which are the result of resizing.\n\t *\n\t * @protected\n\t * @returns {HTMLElement}\n\t */\n\t_getResizeHost() {\n\t\tconst widgetWrapper = this._domResizerWrapper.parentElement;\n\n\t\treturn this._options.getResizeHost( widgetWrapper );\n\t}\n\n\t/**\n\t * Obtains the handle host.\n\t *\n\t * Handle host is an object that the handles are aligned to.\n\t *\n\t * Handle host will not always be an entire widget itself. Take an image as an example. The image widget\n\t * contains an image and a caption. Only the image should be surrounded with handles.\n\t *\n\t * @protected\n\t * @returns {HTMLElement}\n\t */\n\t_getHandleHost() {\n\t\tconst widgetWrapper = this._domResizerWrapper.parentElement;\n\n\t\treturn this._options.getHandleHost( widgetWrapper );\n\t}\n\n\t/**\n\t * Renders the resize handles in the DOM.\n\t *\n\t * @private\n\t * @param {HTMLElement} domElement The resizer wrapper.\n\t */\n\t_appendHandles( domElement ) {\n\t\tconst resizerPositions = [ 'top-left', 'top-right', 'bottom-right', 'bottom-left' ];\n\n\t\tfor ( const currentPosition of resizerPositions ) {\n\t\t\tdomElement.appendChild( ( new Template( {\n\t\t\t\ttag: 'div',\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: `ck-widget__resizer__handle ${ getResizerClass( currentPosition ) }`\n\t\t\t\t}\n\t\t\t} ).render() ) );\n\t\t}\n\t}\n\n\t/**\n\t * Sets up the {@link #_sizeUI} property and adds it to the passed `domElement`.\n\t *\n\t * @private\n\t * @param {HTMLElement} domElement\n\t */\n\t_appendSizeUI( domElement ) {\n\t\tconst sizeUI = new SizeView();\n\n\t\t// Make sure icon#element is rendered before passing to appendChild().\n\t\tsizeUI.render();\n\n\t\tthis._sizeUI = sizeUI;\n\n\t\tdomElement.appendChild( sizeUI.element );\n\t}\n\n\t/**\n\t * Determines the position of a given resize handle.\n\t *\n\t * @private\n\t * @param {HTMLElement} domHandle Handle used to calculate the reference point.\n\t * @returns {String|undefined} Returns a string like `\"top-left\"` or `undefined` if not matched.\n\t */\n\t_getHandlePosition( domHandle ) {\n\t\tconst resizerPositions = [ 'top-left', 'top-right', 'bottom-right', 'bottom-left' ];\n\n\t\tfor ( const position of resizerPositions ) {\n\t\t\tif ( domHandle.classList.contains( getResizerClass( position ) ) ) {\n\t\t\t\treturn position;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @event begin\n\t */\n\n\t/**\n\t * @event updateSize\n\t */\n\n\t/**\n\t * @event commit\n\t */\n\n\t/**\n\t * @event cancel\n\t */\n}\n\nmix( Resizer, ObservableMixin );\n\n/**\n * A view displaying the proposed new element size during the resizing.\n *\n * @extends {module:ui/view~View}\n */\nclass SizeView extends View {\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-size-view',\n\t\t\t\t\tbind.to( 'activeHandlePosition', value => value ? `ck-orientation-${ value }` : '' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: bind.if( 'isVisible', 'none', visible => !visible )\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildren: [ {\n\t\t\t\ttext: bind.to( 'label' )\n\t\t\t} ]\n\t\t} );\n\t}\n\n\tbindToState( options, resizerState ) {\n\t\tthis.bind( 'isVisible' ).to( resizerState, 'proposedWidth', resizerState, 'proposedHeight', ( width, height ) =>\n\t\t\twidth !== null && height !== null );\n\n\t\tthis.bind( 'label' ).to(\n\t\t\tresizerState, 'proposedHandleHostWidth',\n\t\t\tresizerState, 'proposedHandleHostHeight',\n\t\t\tresizerState, 'proposedWidthPercents',\n\t\t\t( width, height, widthPercents ) => {\n\t\t\t\tif ( options.unit === 'px' ) {\n\t\t\t\t\treturn `${ width }×${ height }`;\n\t\t\t\t} else {\n\t\t\t\t\treturn `${ widthPercents }%`;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.bind( 'activeHandlePosition' ).to( resizerState );\n\t}\n\n\tdismiss() {\n\t\tthis.unbind();\n\t\tthis.isVisible = false;\n\t}\n}\n\n// @private\n// @param {String} resizerPosition Expected resizer position like `\"top-left\"`, `\"bottom-right\"`.\n// @returns {String} A prefixed HTML class name for the resizer element\nfunction getResizerClass( resizerPosition ) {\n\treturn `ck-widget__resizer__handle-${ resizerPosition }`;\n}\n\nfunction extractCoordinates( event ) {\n\treturn {\n\t\tx: event.pageX,\n\t\ty: event.pageY\n\t};\n}\n"]}]}