{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/antonyching/Desktop/project/new-builder-demo/src/views/Builder.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/src/views/Builder.vue","mtime":1581584960000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Builder.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport Modal from \"@/components/Modal.vue\";\r\nimport ApiService from \"@/mixins/apiService\";\r\nexport default {\r\n  name: \"builder\",\r\n  components: {\r\n    Modal\r\n  },\r\n  mixins:[ApiService],\r\n  data: function(){\r\n      return{\r\n            title: \"This is builder\",\r\n            jsonFormatted: null,\r\n            showFormOptions: [],\r\n            errMsg: \"\",\r\n            hasErr: false,\r\n            jsonParsed: {},\r\n            showJsonModal: false,\r\n            showDeleteFormModal: false,\r\n            showEditGroupNameModal: false,\r\n            modalTitle: \"\",\r\n            modalContent: \"\",\r\n            selectFormParents: \"\",\r\n            selectFormParentsLabel: \"\",\r\n            formNameArray: [],\r\n            saveCurrentObj: {},\r\n            showAddGroupModal: false\r\n           \r\n      } \r\n  },\r\n  created: function(){\r\n        this.jsonFormatted = this.$store.state['formBuildJson'];\r\n        console.log(\"running builder\",this.jsonFormatted);\r\n\r\n        if(this.jsonFormatted){\r\n            this.jsonParsed = JSON.parse(this.jsonFormatted);\r\n            this.hasErr = false;\r\n            if(this.jsonParsed['pages']){\r\n                for(var i in this.jsonParsed['pages']){\r\n                    this.showFormOptions.push({\"name\":this.jsonParsed['pages'][i]['formName'],\"label\":this.jsonParsed['pages'][i]['label']['default'],\"forms\":this.jsonParsed['pages'][i]['elements'],\"index\": i});\r\n                }\r\n            }else{\r\n                this.hasErr = true;\r\n                this.errMsg = \"Invalid Json, Please check the sample!\";\r\n            }\r\n            \r\n        }else{\r\n           // this.hasErr = true;\r\n            //this.errMsg = \"Invalid Json, Please check the sample!\";\r\n            var loadApi = this.loadFormBuilder(\"tester\");\r\n            loadApi.then(res=>{\r\n                if(res.status==200){\r\n                    if(res.data.returnCode!==\"MO00201\"){\r\n                        if(res.data.formList!=\"\"){\r\n                            this.$store.commit(\"formBuildJson\", res.data.formList);\r\n                            this.jsonFormatted = this.$store.state['formBuildJson'];\r\n\r\n                            this.jsonParsed = JSON.parse(this.jsonFormatted);\r\n                            this.hasErr = false;\r\n                            if(this.jsonParsed['pages']){\r\n                                for(var i in this.jsonParsed['pages']){\r\n                                    this.showFormOptions.push({\"name\":this.jsonParsed['pages'][i]['formName'],\"label\":this.jsonParsed['pages'][i]['label']['default'],\"forms\":this.jsonParsed['pages'][i]['elements'],\"index\": i});\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }else{\r\n                    alert(\"Server error.\");\r\n                }\r\n            });\r\n        }\r\n  },\r\n  methods: {\r\n        openModel(bool,type,name,label,index){\r\n            if(type==\"add\"){\r\n                this.modalTitle = \"Add new form\";\r\n                this.modalContent = \"\";\r\n                this.selectFormParents = name;\r\n                this.selectFormParentsLabel = label;\r\n\r\n                this.formNameArray = [];\r\n                for(var i in this.jsonParsed['pages']){\r\n                    this.formNameArray.push(this.jsonParsed['pages'][i]['formName'].toLowerCase());\r\n                }\r\n\r\n                this.showJsonModal = bool;\r\n                return bool;\r\n            }else if(type==\"edit\"){\r\n                this.modalTitle = \"Edit group name - \"+label;\r\n                this.modalContent = \"\";\r\n                this.selectFormParents = name;\r\n                this.selectFormParentsLabel = label;\r\n                this.saveCurrentObj= {\"index\": index};\r\n                this.formNameArray = [];\r\n                for(var j in this.jsonParsed['pages']){\r\n                    this.formNameArray.push(this.jsonParsed['pages'][j]['formName'].toLowerCase());\r\n                }\r\n\r\n                this.showEditGroupNameModal = bool;\r\n                return bool;\r\n\r\n            }\r\n        },\r\n        getFormName(name,label){\r\n            this.showJsonModal = false;\r\n            this.$store.commit(\"formForEdit\", \"\");\r\n            this.$store.commit(\"formNameChanged\", \"\");\r\n            this.$router.push({ path: \"createForm\", query: { name: name, label: label, action: \"create\"} });\r\n            return false;\r\n        },\r\n        editForm(name,label){            \r\n            let getField = this.jsonParsed['pages'].filter((node) => node.formName === name)[0];\r\n            this.$store.commit(\"formForEdit\", JSON.stringify(getField));\r\n            this.$store.commit(\"formNameChanged\", \"\");\r\n            this.$router.push({ path: \"createForm\", query: { name: name, label: label, action: \"edit\"} });\r\n        },\r\n        openDeleteModel(name,label,index){\r\n        \r\n            this.saveCurrentObj= {\"formName\": name, \"label\": label, \"index\":index};\r\n            this.modalTitle = \"Delete form - \"+this.jsonParsed[\"pages\"][index][\"label\"][\"default\"];\r\n            this.modalContent = \"Are you sure you want to delete this form?\";\r\n            \r\n            this.showDeleteFormModal = true;\r\n            return true;\r\n        },\r\n        deleteForm(){\r\n            \r\n            this.jsonParsed[\"pages\"].splice(this.saveCurrentObj.index,1);\r\n            //this.$store.commit(\"formBuildJson\", JSON.stringify(this.jsonParsed));\r\n\r\n            var saveApi = this.saveFormBuilder(\"tester\",JSON.stringify(this.jsonParsed));\r\n            saveApi.then(res=>{\r\n                if(res.status==200){\r\n                    this.$store.commit(\"formBuildJson\", JSON.stringify(this.jsonParsed));\r\n\r\n                    this.showFormOptions = [];\r\n                    for(var i in this.jsonParsed['pages']){\r\n                        this.showFormOptions.push({\"name\":this.jsonParsed['pages'][i]['formName'],\"label\":this.jsonParsed['pages'][i]['label']['default'],\"elements\":this.jsonParsed['pages'][i]['elements'],\"index\": i});\r\n                    }\r\n                    alert(\"Json saved to server successfully!\");\r\n                }else{\r\n                    alert(\"Failed to save json to server.\");\r\n                }\r\n            });\r\n            \r\n            this.showDeleteFormModal = false;\r\n            return false;\r\n        },\r\n        closeDeleteModalCancel(bool){\r\n            this.showDeleteFormModal = bool;\r\n            return bool;\r\n        },\r\n        closeAddNameModalCancel(bool){\r\n            this.showJsonModal = bool;\r\n            return bool;\r\n        },\r\n        closeEditGroupModalCancel(bool){\r\n            this.showEditGroupNameModal = bool;\r\n            return bool;\r\n        },\r\n        editGroupName(label,name){\r\n            this.jsonParsed[\"pages\"][this.saveCurrentObj.index][\"formName\"] = name;\r\n            this.jsonParsed[\"pages\"][this.saveCurrentObj.index][\"label\"][\"default\"] = label; \r\n            //this.$store.commit(\"formBuildJson\", JSON.stringify(this.jsonParsed));\r\n\r\n            var saveApi = this.saveFormBuilder(\"tester\",JSON.stringify(this.jsonParsed));\r\n            saveApi.then(res=>{\r\n                if(res.status==200){\r\n                    this.$store.commit(\"formBuildJson\", JSON.stringify(this.jsonParsed));\r\n                    this.showFormOptions = [];\r\n                    for(var i in this.jsonParsed['pages']){\r\n                        this.showFormOptions.push({\"name\":this.jsonParsed['pages'][i]['formName'],\"label\":this.jsonParsed['pages'][i]['label']['default'],\"forms\":this.jsonParsed['pages'][i]['forms'],\"index\": i});\r\n                    }\r\n                    alert(\"Json saved to server successfully!\");\r\n                }else{\r\n                    alert(\"Failed to save json to server.\");\r\n                }\r\n            });\r\n\r\n            this.showEditGroupNameModal = false;\r\n            return false;\r\n        },\r\n        openAddNewGroupModel(){\r\n            this.modalTitle = \"Add new form\";\r\n            this.modalContent = \"\";\r\n\r\n            this.formNameArray = [];\r\n            for(var j in this.jsonParsed['pages']){\r\n                this.formNameArray.push(this.jsonParsed['pages'][j]['formName'].toLowerCase());\r\n            }\r\n            \r\n            this.showAddGroupModal = true;\r\n            return true;\r\n        },\r\n        closeAddGroupModalCancel(bool){\r\n            this.showAddGroupModal = bool;\r\n            return false;\r\n        },\r\n        addNewGroup(name,label){\r\n            let newGroup = {\"formName\": name, \"label\":{\"default\": label, \"zhTw\":\"\"}, \"elements\":[]}\r\n            \r\n            if(this.jsonParsed['pages'] && this.jsonParsed['pages'].length>0){\r\n                console.log(\"to add\")\r\n                this.jsonParsed['pages'].push(newGroup);\r\n            }else{\r\n                console.log(\"to create\")\r\n                this.jsonParsed = {};\r\n                this.jsonParsed['pages'] = [];\r\n            \r\n                this.jsonParsed['pages'].push(newGroup);\r\n            }\r\n\r\n            var saveApi = this.saveFormBuilder(\"tester\",JSON.stringify(this.jsonParsed));\r\n            saveApi.then(res=>{\r\n                if(res.status==200){\r\n                    this.showFormOptions = [];\r\n                    for(var i in this.jsonParsed['pages']){\r\n                        this.showFormOptions.push({\"name\":this.jsonParsed['pages'][i]['formName'],\"label\":this.jsonParsed['pages'][i]['label']['default'],\"elements\":this.jsonParsed['pages'][i]['elements'],\"index\": i});\r\n                    }\r\n\r\n                    this.$store.commit(\"formBuildJson\", JSON.stringify(this.jsonParsed));\r\n\r\n                    this.$store.commit(\"formForEdit\", \"\");\r\n                    this.$store.commit(\"formNameChanged\", \"\");\r\n                    this.$router.push({ path: \"createForm\", query: { name: name, label: label, action: \"create\"} });\r\n                    alert(\"Json saved to server successfully!\");\r\n                }else{\r\n                    alert(\"Failed to save json to server.\");\r\n                }\r\n            });\r\n\r\n            this.showAddGroupModal = false;\r\n            return false;\r\n        }\r\n  },\r\n  computed:{\r\n\r\n  },\r\n  watch:{\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n    <div class=\"builder\">\r\n        <modal :show=\"showDeleteFormModal\" :name=\"'deleteFormModel'\" :buttonName=\"'OK'\"  :title=\"modalTitle\" :content=\"modalContent\" @closeModal=\"deleteForm\" @closeModalCancel=\"closeDeleteModalCancel\"></modal>\r\n        <modal :show=\"showJsonModal\" :name=\"'addFormModel'\" :buttonName=\"'OK'\" :fieldNameArray=\"formNameArray\" :title=\"modalTitle\" :content=\"modalContent\" @closeModal=\"getFormName\" @closeModalCancel=\"closeAddNameModalCancel\"></modal>\r\n        <modal :show=\"showAddGroupModal\" :name=\"'addGroupModel'\" :buttonName=\"'OK'\" :title=\"modalTitle\" :fieldNameArray=\"formNameArray\" :content=\"modalContent\" @closeModal=\"addNewGroup\" @closeModalCancel=\"closeAddGroupModalCancel\"></modal>\r\n        <modal :show=\"showEditGroupNameModal\" :name=\"'editGroupNameModel'\" :buttonName=\"'OK'\" :fieldNameArray=\"formNameArray\" :title=\"modalTitle\" :content=\"modalContent\" @closeModal=\"editGroupName\" @closeModalCancel=\"closeEditGroupModalCancel\"></modal>\r\n        <div v-if=\"jsonFormatted && showFormOptions.length>0\" class=\"builder-form-class\">\r\n            <p style=\"text-decoration:underline; color:#00AEEF; cursor: pointer;\" @click=\"openAddNewGroupModel()\">Add new form</p>\r\n            <div class=\"create-form-container\" v-for=\"(option,index) in showFormOptions\" :key=\"index\">\r\n                <div class=\"form-name\" style=\"display:inline-flex;\"> \r\n                    <div class=\"name\">{{option.label}}</div>\r\n                    <!--<div class=\"function\" style=\"text-decoration:underline; color:#00AEEF; font-weight:400; margin-left: 5px; cursor: pointer;\" v-on:click=\"openModel(true,'edit',option.name,option.label,option.index)\">Edit name</div>-->\r\n                    <div class=\"function\" style=\"text-decoration:underline; color:#00AEEF; font-weight:400; margin-left: 5px; cursor: pointer;\" v-on:click=\"editForm(option.name,option.label)\">Edit</div>\r\n                    <div class=\"function\" style=\"text-decoration:underline; color:#00AEEF; font-weight:400; margin-left: 5px; cursor: pointer;\" v-on:click=\"openDeleteModel(option.name,option.label,index)\">Delete</div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n        <div v-else>\r\n            <p>Please enter a Json from Editor page Or <span style=\"text-decoration:underline; color:#00AEEF; cursor: pointer;\" @click=\"openAddNewGroupModel()\">Add Form Here</span></p> \r\n        </div>\r\n    </div>\r\n</template>"],"sourceRoot":"src/views"}]}