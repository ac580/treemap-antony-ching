{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-upload/src/ui/filedialogbuttonview.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-upload/src/ui/filedialogbuttonview.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHVwbG9hZC91aS9maWxlZGlhbG9nYnV0dG9udmlldwogKi8KaW1wb3J0IEJ1dHRvblZpZXcgZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS11aS9zcmMvYnV0dG9uL2J1dHRvbnZpZXcnOwppbXBvcnQgVmlldyBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXVpL3NyYy92aWV3JzsKLyoqCiAqIFRoZSBmaWxlIGRpYWxvZyBidXR0b24gdmlldy4KICoKICogVGhpcyBjb21wb25lbnQgcHJvdmlkZXMgYSBidXR0b24gdGhhdCBvcGVucyB0aGUgbmF0aXZlIGZpbGUgc2VsZWN0aW9uIGRpYWxvZy4KICogSXQgY2FuIGJlIHVzZWQgdG8gaW1wbGVtZW50IHRoZSBVSSBvZiBhIGZpbGUgdXBsb2FkIGZlYXR1cmUuCiAqCiAqCQljb25zdCB2aWV3ID0gbmV3IEZpbGVEaWFsb2dCdXR0b25WaWV3KCBsb2NhbGUgKTsKICoKICoJCXZpZXcuc2V0KCB7CiAqCQkJYWNjZXB0ZWRUeXBlOiAnaW1hZ2UvKicsCiAqCQkJYWxsb3dNdWx0aXBsZUZpbGVzOiB0cnVlCiAqCQl9ICk7CiAqCiAqCQl2aWV3LmJ1dHRvblZpZXcuc2V0KCB7CiAqCQkJbGFiZWw6IHQoICdJbnNlcnQgaW1hZ2UnICksCiAqCQkJaWNvbjogaW1hZ2VJY29uLAogKgkJCXRvb2x0aXA6IHRydWUKICoJCX0gKTsKICoKICoJCXZpZXcub24oICdkb25lJywgKCBldnQsIGZpbGVzICkgPT4gewogKgkJCWZvciAoIGNvbnN0IGZpbGUgb2YgQXJyYXkuZnJvbSggZmlsZXMgKSApIHsKICoJCQkJY29uc29sZS5sb2coICdTZWxlY3RlZCBmaWxlJywgZmlsZSApOwogKgkJCX0KICoJCX0gKTsKICoKICogQGV4dGVuZHMgbW9kdWxlOnVpL3ZpZXd+VmlldwogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpbGVEaWFsb2dCdXR0b25WaWV3IGV4dGVuZHMgVmlldyB7CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KICBjb25zdHJ1Y3Rvcihsb2NhbGUpIHsKICAgIHN1cGVyKGxvY2FsZSk7CiAgICAvKioKICAgICAqIFRoZSBidXR0b24gdmlldyBvZiB0aGUgY29tcG9uZW50LgogICAgICoKICAgICAqIEBtZW1iZXIge21vZHVsZTp1aS9idXR0b24vYnV0dG9udmlld35CdXR0b25WaWV3fQogICAgICovCgogICAgdGhpcy5idXR0b25WaWV3ID0gbmV3IEJ1dHRvblZpZXcobG9jYWxlKTsKICAgIC8qKgogICAgICogQSBoaWRkZW4gYDxpbnB1dD5gIHZpZXcgdXNlZCB0byBleGVjdXRlIGZpbGUgZGlhbG9nLgogICAgICoKICAgICAqIEBwcm90ZWN0ZWQKICAgICAqIEBtZW1iZXIge21vZHVsZTp1cGxvYWQvdWkvZmlsZWRpYWxvZ2J1dHRvbnZpZXd+RmlsZUlucHV0Vmlld30KICAgICAqLwoKICAgIHRoaXMuX2ZpbGVJbnB1dFZpZXcgPSBuZXcgRmlsZUlucHV0Vmlldyhsb2NhbGUpOwogICAgLyoqCiAgICAgKiBBY2NlcHRlZCBmaWxlIHR5cGVzLiBDYW4gYmUgcHJvdmlkZWQgaW4gZm9ybSBvZiBmaWxlIGV4dGVuc2lvbnMsIG1lZGlhIHR5cGUgb3Igb25lIG9mOgogICAgICogKiBgYXVkaW8vKmAsCiAgICAgKiAqIGB2aWRlby8qYCwKICAgICAqICogYGltYWdlLypgLgogICAgICoKICAgICAqIEBvYnNlcnZhYmxlCiAgICAgKiBAbWVtYmVyIHtTdHJpbmd9ICNhY2NlcHRlZFR5cGUKICAgICAqLwoKICAgIHRoaXMuX2ZpbGVJbnB1dFZpZXcuYmluZCgnYWNjZXB0ZWRUeXBlJykudG8odGhpcyk7CiAgICAvKioKICAgICAqIEluZGljYXRlcyBpZiBtdWx0aXBsZSBmaWxlcyBjYW4gYmUgc2VsZWN0ZWQuIERlZmF1bHRzIHRvIGB0cnVlYC4KICAgICAqCiAgICAgKiBAb2JzZXJ2YWJsZQogICAgICogQG1lbWJlciB7Qm9vbGVhbn0gI2FsbG93TXVsdGlwbGVGaWxlcwogICAgICovCgoKICAgIHRoaXMuX2ZpbGVJbnB1dFZpZXcuYmluZCgnYWxsb3dNdWx0aXBsZUZpbGVzJykudG8odGhpcyk7CiAgICAvKioKICAgICAqIEZpcmVkIHdoZW4gZmlsZSBkaWFsb2cgaXMgY2xvc2VkIHdpdGggZmlsZSBzZWxlY3RlZC4KICAgICAqCiAgICAgKgkJdmlldy5vbiggJ2RvbmUnLCAoIGV2dCwgZmlsZXMgKSA9PiB7CiAgICAgKgkJCWZvciAoIGNvbnN0IGZpbGUgb2YgZmlsZXMgKSB7CiAgICAgKgkJCQljb25zb2xlLmxvZyggJ1NlbGVjdGVkIGZpbGUnLCBmaWxlICk7CiAgICAgKgkJCX0KICAgICAqCQl9CiAgICAgKgogICAgICogQGV2ZW50IGRvbmUKICAgICAqIEBwYXJhbSB7QXJyYXkuPEZpbGU+fSBmaWxlcyBBcnJheSBvZiBzZWxlY3RlZCBmaWxlcy4KICAgICAqLwoKCiAgICB0aGlzLl9maWxlSW5wdXRWaWV3LmRlbGVnYXRlKCdkb25lJykudG8odGhpcyk7CgogICAgdGhpcy5zZXRUZW1wbGF0ZSh7CiAgICAgIHRhZzogJ3NwYW4nLAogICAgICBhdHRyaWJ1dGVzOiB7CiAgICAgICAgY2xhc3M6ICdjay1maWxlLWRpYWxvZy1idXR0b24nCiAgICAgIH0sCiAgICAgIGNoaWxkcmVuOiBbdGhpcy5idXR0b25WaWV3LCB0aGlzLl9maWxlSW5wdXRWaWV3XQogICAgfSk7CiAgICB0aGlzLmJ1dHRvblZpZXcub24oJ2V4ZWN1dGUnLCAoKSA9PiB7CiAgICAgIHRoaXMuX2ZpbGVJbnB1dFZpZXcub3BlbigpOwogICAgfSk7CiAgfQogIC8qKgogICAqIEZvY3VzZXMgdGhlIHtAbGluayAjYnV0dG9uVmlld30uCiAgICovCgoKICBmb2N1cygpIHsKICAgIHRoaXMuYnV0dG9uVmlldy5mb2N1cygpOwogIH0KCn0KLyoqCiAqIFRoZSBoaWRkZW4gZmlsZSBpbnB1dCB2aWV3IGNsYXNzLgogKgogKiBAcHJpdmF0ZQogKiBAZXh0ZW5kcyBtb2R1bGU6dWkvdmlld35WaWV3CiAqLwoKY2xhc3MgRmlsZUlucHV0VmlldyBleHRlbmRzIFZpZXcgewogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgY29uc3RydWN0b3IobG9jYWxlKSB7CiAgICBzdXBlcihsb2NhbGUpOwogICAgLyoqCiAgICAgKiBBY2NlcHRlZCBmaWxlIHR5cGVzLiBDYW4gYmUgcHJvdmlkZWQgaW4gZm9ybSBvZiBmaWxlIGV4dGVuc2lvbnMsIG1lZGlhIHR5cGUgb3Igb25lIG9mOgogICAgICogKiBgYXVkaW8vKmAsCiAgICAgKiAqIGB2aWRlby8qYCwKICAgICAqICogYGltYWdlLypgLgogICAgICoKICAgICAqIEBvYnNlcnZhYmxlCiAgICAgKiBAbWVtYmVyIHtTdHJpbmd9ICNhY2NlcHRlZFR5cGUKICAgICAqLwoKICAgIHRoaXMuc2V0KCdhY2NlcHRlZFR5cGUnKTsKICAgIC8qKgogICAgICogSW5kaWNhdGVzIGlmIG11bHRpcGxlIGZpbGVzIGNhbiBiZSBzZWxlY3RlZC4gRGVmYXVsdHMgdG8gYGZhbHNlYC4KICAgICAqCiAgICAgKiBAb2JzZXJ2YWJsZQogICAgICogQG1lbWJlciB7Qm9vbGVhbn0gI2FsbG93TXVsdGlwbGVGaWxlcwogICAgICovCgogICAgdGhpcy5zZXQoJ2FsbG93TXVsdGlwbGVGaWxlcycsIGZhbHNlKTsKICAgIGNvbnN0IGJpbmQgPSB0aGlzLmJpbmRUZW1wbGF0ZTsKICAgIHRoaXMuc2V0VGVtcGxhdGUoewogICAgICB0YWc6ICdpbnB1dCcsCiAgICAgIGF0dHJpYnV0ZXM6IHsKICAgICAgICBjbGFzczogWydjay1oaWRkZW4nXSwKICAgICAgICB0eXBlOiAnZmlsZScsCiAgICAgICAgdGFiaW5kZXg6ICctMScsCiAgICAgICAgYWNjZXB0OiBiaW5kLnRvKCdhY2NlcHRlZFR5cGUnKSwKICAgICAgICBtdWx0aXBsZTogYmluZC50bygnYWxsb3dNdWx0aXBsZUZpbGVzJykKICAgICAgfSwKICAgICAgb246IHsKICAgICAgICAvLyBSZW1vdmluZyBmcm9tIGNvZGUgY292ZXJhZ2Ugc2luY2Ugd2UgY2Fubm90IHByb2dyYW1tYXRpY2FsbHkgc2V0IGlucHV0IGVsZW1lbnQgZmlsZXMuCiAgICAgICAgY2hhbmdlOiBiaW5kLnRvKAogICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovCiAgICAgICAgKCkgPT4gewogICAgICAgICAgaWYgKHRoaXMuZWxlbWVudCAmJiB0aGlzLmVsZW1lbnQuZmlsZXMgJiYgdGhpcy5lbGVtZW50LmZpbGVzLmxlbmd0aCkgewogICAgICAgICAgICB0aGlzLmZpcmUoJ2RvbmUnLCB0aGlzLmVsZW1lbnQuZmlsZXMpOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuZWxlbWVudC52YWx1ZSA9ICcnOwogICAgICAgIH0pCiAgICAgIH0KICAgIH0pOwogIH0KICAvKioKICAgKiBPcGVucyBmaWxlIGRpYWxvZy4KICAgKi8KCgogIG9wZW4oKSB7CiAgICB0aGlzLmVsZW1lbnQuY2xpY2soKTsKICB9Cgp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-upload/src/ui/filedialogbuttonview.js"],"names":["ButtonView","View","FileDialogButtonView","constructor","locale","buttonView","_fileInputView","FileInputView","bind","to","delegate","setTemplate","tag","attributes","class","children","on","open","focus","set","bindTemplate","type","tabindex","accept","multiple","change","element","files","length","fire","value","click"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,UAAP,MAAuB,8CAAvB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,eAAe,MAAMC,oBAAN,SAAmCD,IAAnC,CAAwC;AACtD;;;AAGAE,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB,UAAOA,MAAP;AAEA;;;;;;AAKA,SAAKC,UAAL,GAAkB,IAAIL,UAAJ,CAAgBI,MAAhB,CAAlB;AAEA;;;;;;;AAMA,SAAKE,cAAL,GAAsB,IAAIC,aAAJ,CAAmBH,MAAnB,CAAtB;AAEA;;;;;;;;;;AASA,SAAKE,cAAL,CAAoBE,IAApB,CAA0B,cAA1B,EAA2CC,EAA3C,CAA+C,IAA/C;AAEA;;;;;;;;AAMA,SAAKH,cAAL,CAAoBE,IAApB,CAA0B,oBAA1B,EAAiDC,EAAjD,CAAqD,IAArD;AAEA;;;;;;;;;;;;;;AAYA,SAAKH,cAAL,CAAoBI,QAApB,CAA8B,MAA9B,EAAuCD,EAAvC,CAA2C,IAA3C;;AAEA,SAAKE,WAAL,CAAkB;AACjBC,MAAAA,GAAG,EAAE,MADY;AAEjBC,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE;AADI,OAFK;AAKjBC,MAAAA,QAAQ,EAAE,CACT,KAAKV,UADI,EAET,KAAKC,cAFI;AALO,KAAlB;AAWA,SAAKD,UAAL,CAAgBW,EAAhB,CAAoB,SAApB,EAA+B,MAAM;AACpC,WAAKV,cAAL,CAAoBW,IAApB;AACA,KAFD;AAGA;AAED;;;;;AAGAC,EAAAA,KAAK,GAAG;AACP,SAAKb,UAAL,CAAgBa,KAAhB;AACA;;AA5EqD;AA+EvD;;;;;;;AAMA,MAAMX,aAAN,SAA4BN,IAA5B,CAAiC;AAChC;;;AAGAE,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB,UAAOA,MAAP;AAEA;;;;;;;;;;AASA,SAAKe,GAAL,CAAU,cAAV;AAEA;;;;;;;AAMA,SAAKA,GAAL,CAAU,oBAAV,EAAgC,KAAhC;AAEA,UAAMX,IAAI,GAAG,KAAKY,YAAlB;AAEA,SAAKT,WAAL,CAAkB;AACjBC,MAAAA,GAAG,EAAE,OADY;AAGjBC,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE,CACN,WADM,CADI;AAIXO,QAAAA,IAAI,EAAE,MAJK;AAKXC,QAAAA,QAAQ,EAAE,IALC;AAMXC,QAAAA,MAAM,EAAEf,IAAI,CAACC,EAAL,CAAS,cAAT,CANG;AAOXe,QAAAA,QAAQ,EAAEhB,IAAI,CAACC,EAAL,CAAS,oBAAT;AAPC,OAHK;AAajBO,MAAAA,EAAE,EAAE;AACH;AACAS,QAAAA,MAAM,EAAEjB,IAAI,CAACC,EAAL;AAAS;AAA2B,cAAM;AACjD,cAAK,KAAKiB,OAAL,IAAgB,KAAKA,OAAL,CAAaC,KAA7B,IAAsC,KAAKD,OAAL,CAAaC,KAAb,CAAmBC,MAA9D,EAAuE;AACtE,iBAAKC,IAAL,CAAW,MAAX,EAAmB,KAAKH,OAAL,CAAaC,KAAhC;AACA;;AAED,eAAKD,OAAL,CAAaI,KAAb,GAAqB,EAArB;AACA,SANO;AAFL;AAba,KAAlB;AAwBA;AAED;;;;;AAGAb,EAAAA,IAAI,GAAG;AACN,SAAKS,OAAL,CAAaK,KAAb;AACA;;AA3D+B","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module upload/ui/filedialogbuttonview\n */\n\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport View from '@ckeditor/ckeditor5-ui/src/view';\n\n/**\n * The file dialog button view.\n *\n * This component provides a button that opens the native file selection dialog.\n * It can be used to implement the UI of a file upload feature.\n *\n *\t\tconst view = new FileDialogButtonView( locale );\n *\n *\t\tview.set( {\n *\t\t\tacceptedType: 'image/*',\n *\t\t\tallowMultipleFiles: true\n *\t\t} );\n *\n *\t\tview.buttonView.set( {\n *\t\t\tlabel: t( 'Insert image' ),\n *\t\t\ticon: imageIcon,\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.on( 'done', ( evt, files ) => {\n *\t\t\tfor ( const file of Array.from( files ) ) {\n *\t\t\t\tconsole.log( 'Selected file', file );\n *\t\t\t}\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\nexport default class FileDialogButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The button view of the component.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.buttonView = new ButtonView( locale );\n\n\t\t/**\n\t\t * A hidden `<input>` view used to execute file dialog.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:upload/ui/filedialogbuttonview~FileInputView}\n\t\t */\n\t\tthis._fileInputView = new FileInputView( locale );\n\n\t\t/**\n\t\t * Accepted file types. Can be provided in form of file extensions, media type or one of:\n\t\t * * `audio/*`,\n\t\t * * `video/*`,\n\t\t * * `image/*`.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #acceptedType\n\t\t */\n\t\tthis._fileInputView.bind( 'acceptedType' ).to( this );\n\n\t\t/**\n\t\t * Indicates if multiple files can be selected. Defaults to `true`.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #allowMultipleFiles\n\t\t */\n\t\tthis._fileInputView.bind( 'allowMultipleFiles' ).to( this );\n\n\t\t/**\n\t\t * Fired when file dialog is closed with file selected.\n\t\t *\n\t\t *\t\tview.on( 'done', ( evt, files ) => {\n\t\t *\t\t\tfor ( const file of files ) {\n\t\t *\t\t\t\tconsole.log( 'Selected file', file );\n\t\t *\t\t\t}\n\t\t *\t\t}\n\t\t *\n\t\t * @event done\n\t\t * @param {Array.<File>} files Array of selected files.\n\t\t */\n\t\tthis._fileInputView.delegate( 'done' ).to( this );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-file-dialog-button',\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.buttonView,\n\t\t\t\tthis._fileInputView\n\t\t\t]\n\t\t} );\n\n\t\tthis.buttonView.on( 'execute', () => {\n\t\t\tthis._fileInputView.open();\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tfocus() {\n\t\tthis.buttonView.focus();\n\t}\n}\n\n/**\n * The hidden file input view class.\n *\n * @private\n * @extends module:ui/view~View\n */\nclass FileInputView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * Accepted file types. Can be provided in form of file extensions, media type or one of:\n\t\t * * `audio/*`,\n\t\t * * `video/*`,\n\t\t * * `image/*`.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #acceptedType\n\t\t */\n\t\tthis.set( 'acceptedType' );\n\n\t\t/**\n\t\t * Indicates if multiple files can be selected. Defaults to `false`.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #allowMultipleFiles\n\t\t */\n\t\tthis.set( 'allowMultipleFiles', false );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'input',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-hidden'\n\t\t\t\t],\n\t\t\t\ttype: 'file',\n\t\t\t\ttabindex: '-1',\n\t\t\t\taccept: bind.to( 'acceptedType' ),\n\t\t\t\tmultiple: bind.to( 'allowMultipleFiles' )\n\t\t\t},\n\n\t\t\ton: {\n\t\t\t\t// Removing from code coverage since we cannot programmatically set input element files.\n\t\t\t\tchange: bind.to( /* istanbul ignore next */ () => {\n\t\t\t\t\tif ( this.element && this.element.files && this.element.files.length ) {\n\t\t\t\t\t\tthis.fire( 'done', this.element.files );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.element.value = '';\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Opens file dialog.\n\t */\n\topen() {\n\t\tthis.element.click();\n\t}\n}\n"]}]}