{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js"],"names":["Observer","MutationObserver","debounce","SelectionObserver","constructor","view","mutationObserver","getObserver","selection","document","domConverter","_documents","WeakSet","_fireSelectionChangeDoneDebounced","data","fire","_clearInfiniteLoopInterval","setInterval","_clearInfiniteLoop","_loopbackCounter","observe","domElement","domDocument","ownerDocument","has","listenTo","_handleSelectionChange","add","destroy","clearInterval","cancel","isEnabled","isFocused","isReadOnly","flush","domSelection","defaultView","getSelection","newViewSelection","domSelectionToView","isEqual","isDomSelectionCorrect","isSimilar","forceRender","oldSelection","newSelection"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\n\nimport Observer from './observer';\nimport MutationObserver from './mutationobserver';\nimport { debounce } from 'lodash-es';\n\n/**\n * Selection observer class observes selection changes in the document. If selection changes on the document this\n * observer checks if there are any mutations and if DOM selection is different than the\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\n * and DOM selection is different then the view selection.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class SelectionObserver extends Observer {\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Instance of the mutation observer. Selection observer calls\n\t\t * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n\t\t * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n\t\t */\n\t\tthis.mutationObserver = view.getObserver( MutationObserver );\n\n\t\t/**\n\t\t * Reference to the view {@link module:engine/view/documentselection~DocumentSelection} object used to compare\n\t\t * new selection with it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#selection\n\t\t */\n\t\tthis.selection = this.document.selection;\n\n\t\t/* eslint-disable max-len */\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n\t\t */\n\t\t/* eslint-enable max-len */\n\t\tthis.domConverter = view.domConverter;\n\n\t\t/**\n\t\t * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\n\t\t * document.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n\t\t */\n\t\tthis._documents = new WeakSet();\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => this.document.fire( 'selectionChangeDone', data ), 200 );\n\n\t\tthis._clearInfiniteLoopInterval = setInterval( () => this._clearInfiniteLoop(), 1000 );\n\n\t\t/**\n\t\t * Private property to check if the code does not enter infinite loop.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n\t\t */\n\t\tthis._loopbackCounter = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domElement ) {\n\t\tconst domDocument = domElement.ownerDocument;\n\n\t\t// Add listener once per each document.\n\t\tif ( this._documents.has( domDocument ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.listenTo( domDocument, 'selectionchange', () => {\n\t\t\tthis._handleSelectionChange( domDocument );\n\t\t} );\n\n\t\tthis._documents.add( domDocument );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tclearInterval( this._clearInfiniteLoopInterval );\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n\t * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n\t * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\n\t *\n\t * @private\n\t * @param {Document} domDocument DOM document.\n\t */\n\t_handleSelectionChange( domDocument ) {\n\t\t// Selection is handled when document is not focused but is read-only. This is because in read-only\n\t\t// mode contenteditable is set as false and editor won't receive focus but we still need to know\n\t\t// selection position.\n\t\tif ( !this.isEnabled || ( !this.document.isFocused && !this.document.isReadOnly ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure the mutation event will be before selection event on all browsers.\n\t\tthis.mutationObserver.flush();\n\n\t\t// If there were mutations then the view will be re-rendered by the mutation observer and selection\n\t\t// will be updated, so selections will equal and event will not be fired, as expected.\n\t\tconst domSelection = domDocument.defaultView.getSelection();\n\t\tconst newViewSelection = this.domConverter.domSelectionToView( domSelection );\n\n\t\tif ( this.selection.isEqual( newViewSelection ) && this.domConverter.isDomSelectionCorrect( domSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure we are not in the infinite loop (#400).\n\t\t// This counter is reset each second. 60 selection changes in 1 second is enough high number\n\t\t// to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\t\tif ( ++this._loopbackCounter > 60 ) {\n\t\t\t// Selection change observer detected an infinite rendering loop.\n\t\t\t// Most probably you try to put the selection in the position which is not allowed\n\t\t\t// by the browser and browser fixes it automatically what causes `selectionchange` event on\n\t\t\t// which a loopback through a model tries to re-render the wrong selection and again.\n\t\t\t//\n\t\t\t// @if CK_DEBUG // console.warn( 'Selection change observer detected an infinite rendering loop.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.selection.isSimilar( newViewSelection ) ) {\n\t\t\t// If selection was equal and we are at this point of algorithm, it means that it was incorrect.\n\t\t\t// Just re-render it, no need to fire any events, etc.\n\t\t\tthis.view.forceRender();\n\t\t} else {\n\t\t\tconst data = {\n\t\t\t\toldSelection: this.selection,\n\t\t\t\tnewSelection: newViewSelection,\n\t\t\t\tdomSelection\n\t\t\t};\n\n\t\t\t// Prepare data for new selection and fire appropriate events.\n\t\t\tthis.document.fire( 'selectionChange', data );\n\n\t\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t\t}\n\t}\n\n\t/**\n\t * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n\t *\n\t * @protected\n\t */\n\t_clearInfiniteLoop() {\n\t\tthis._loopbackCounter = 0;\n\t}\n}\n\n/**\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n"]}]}