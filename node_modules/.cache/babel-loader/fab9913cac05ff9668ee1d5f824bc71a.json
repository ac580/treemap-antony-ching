{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-list/src/listediting.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-list/src/listediting.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-list/src/listediting.js"],"names":["ListCommand","IndentCommand","Plugin","Paragraph","cleanList","cleanListItem","modelViewInsertion","modelViewChangeType","modelViewMergeAfterChangeType","modelViewMergeAfter","modelViewRemove","modelViewSplitOnInsert","modelViewChangeIndent","modelChangePostFixer","modelIndentPasteFixer","viewModelConverter","modelToViewPosition","viewToModelPosition","ListEditing","pluginName","requires","init","editor","model","schema","register","inheritAllFrom","allowAttributes","data","editing","document","registerPostFixer","writer","mapper","registerViewToModelLength","getViewListItemLength","on","view","conversion","for","add","dispatcher","priority","commands","viewDocument","listenTo","evt","doc","positionParent","selection","getLastPosition","parent","isCollapsed","name","isEmpty","execute","preventDefault","stop","direction","firstPosition","getFirstPosition","isAtStart","previousIsAListItem","previousSibling","getCommandExecuter","commandName","cancel","command","get","isEnabled","keystrokes","set","afterInit","indent","outdent","registerChildCommand","element","length","child","getChildren","item"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listediting\n */\n\nimport ListCommand from './listcommand';\nimport IndentCommand from './indentcommand';\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\nimport {\n\tcleanList,\n\tcleanListItem,\n\tmodelViewInsertion,\n\tmodelViewChangeType,\n\tmodelViewMergeAfterChangeType,\n\tmodelViewMergeAfter,\n\tmodelViewRemove,\n\tmodelViewSplitOnInsert,\n\tmodelViewChangeIndent,\n\tmodelChangePostFixer,\n\tmodelIndentPasteFixer,\n\tviewModelConverter,\n\tmodelToViewPosition,\n\tviewToModelPosition\n} from './converters';\n\n/**\n * The engine of the list feature. It handles creating, editing and removing lists and list items.\n *\n * It registers the `'numberedList'`, `'bulletedList'`, `'indentList'` and `'outdentList'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ListEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ListEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Paragraph ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Schema.\n\t\t// Note: in case `$block` will ever be allowed in `listItem`, keep in mind that this feature\n\t\t// uses `Selection#getSelectedBlocks()` without any additional processing to obtain all selected list items.\n\t\t// If there are blocks allowed inside list item, algorithms using `getSelectedBlocks()` will have to be modified.\n\t\teditor.model.schema.register( 'listItem', {\n\t\t\tinheritAllFrom: '$block',\n\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n\t\t} );\n\n\t\t// Converters.\n\t\tconst data = editor.data;\n\t\tconst editing = editor.editing;\n\n\t\teditor.model.document.registerPostFixer( writer => modelChangePostFixer( editor.model, writer ) );\n\n\t\tediting.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\t\tdata.mapper.registerViewToModelLength( 'li', getViewListItemLength );\n\n\t\tediting.mapper.on( 'modelToViewPosition', modelToViewPosition( editing.view ) );\n\t\tediting.mapper.on( 'viewToModelPosition', viewToModelPosition( editor.model ) );\n\t\tdata.mapper.on( 'modelToViewPosition', modelToViewPosition( editing.view ) );\n\n\t\teditor.conversion.for( 'editingDowncast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'insert:listItem', modelViewInsertion( editor.model ) );\n\t\t\t\tdispatcher.on( 'attribute:listType:listItem', modelViewChangeType, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'attribute:listType:listItem', modelViewMergeAfterChangeType, { priority: 'low' } );\n\t\t\t\tdispatcher.on( 'attribute:listIndent:listItem', modelViewChangeIndent( editor.model ) );\n\t\t\t\tdispatcher.on( 'remove:listItem', modelViewRemove( editor.model ) );\n\t\t\t\tdispatcher.on( 'remove', modelViewMergeAfter, { priority: 'low' } );\n\t\t\t} );\n\n\t\teditor.conversion.for( 'dataDowncast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'insert', modelViewSplitOnInsert, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'insert:listItem', modelViewInsertion( editor.model ) );\n\t\t\t} );\n\n\t\teditor.conversion.for( 'upcast' )\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'element:ul', cleanList, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:ol', cleanList, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:li', cleanListItem, { priority: 'high' } );\n\t\t\t\tdispatcher.on( 'element:li', viewModelConverter );\n\t\t\t} );\n\n\t\t// Fix indentation of pasted items.\n\t\teditor.model.on( 'insertContent', modelIndentPasteFixer, { priority: 'high' } );\n\n\t\t// Register commands for numbered and bulleted list.\n\t\teditor.commands.add( 'numberedList', new ListCommand( editor, 'numbered' ) );\n\t\teditor.commands.add( 'bulletedList', new ListCommand( editor, 'bulleted' ) );\n\n\t\t// Register commands for indenting.\n\t\teditor.commands.add( 'indentList', new IndentCommand( editor, 'forward' ) );\n\t\teditor.commands.add( 'outdentList', new IndentCommand( editor, 'backward' ) );\n\n\t\tconst viewDocument = editing.view.document;\n\n\t\t// Overwrite default Enter key behavior.\n\t\t// If Enter key is pressed with selection collapsed in empty list item, outdent it instead of breaking it.\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tconst doc = this.editor.model.document;\n\t\t\tconst positionParent = doc.selection.getLastPosition().parent;\n\n\t\t\tif ( doc.selection.isCollapsed && positionParent.name == 'listItem' && positionParent.isEmpty ) {\n\t\t\t\tthis.editor.execute( 'outdentList' );\n\n\t\t\t\tdata.preventDefault();\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\n\t\t// Overwrite default Backspace key behavior.\n\t\t// If Backspace key is pressed with selection collapsed on first position in first list item, outdent it. #83\n\t\tthis.listenTo( viewDocument, 'delete', ( evt, data ) => {\n\t\t\t// Check conditions from those that require less computations like those immediately available.\n\t\t\tif ( data.direction !== 'backward' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selection = this.editor.model.document.selection;\n\n\t\t\tif ( !selection.isCollapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst firstPosition = selection.getFirstPosition();\n\n\t\t\tif ( !firstPosition.isAtStart ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst positionParent = firstPosition.parent;\n\n\t\t\tif ( positionParent.name !== 'listItem' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst previousIsAListItem = positionParent.previousSibling && positionParent.previousSibling.name === 'listItem';\n\n\t\t\tif ( previousIsAListItem ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.execute( 'outdentList' );\n\n\t\t\tdata.preventDefault();\n\t\t\tevt.stop();\n\t\t}, { priority: 'high' } );\n\n\t\tconst getCommandExecuter = commandName => {\n\t\t\treturn ( data, cancel ) => {\n\t\t\t\tconst command = this.editor.commands.get( commandName );\n\n\t\t\t\tif ( command.isEnabled ) {\n\t\t\t\t\tthis.editor.execute( commandName );\n\t\t\t\t\tcancel();\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\teditor.keystrokes.set( 'Tab', getCommandExecuter( 'indentList' ) );\n\t\teditor.keystrokes.set( 'Shift+Tab', getCommandExecuter( 'outdentList' ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst commands = this.editor.commands;\n\n\t\tconst indent = commands.get( 'indent' );\n\t\tconst outdent = commands.get( 'outdent' );\n\n\t\tif ( indent ) {\n\t\t\tindent.registerChildCommand( commands.get( 'indentList' ) );\n\t\t}\n\n\t\tif ( outdent ) {\n\t\t\toutdent.registerChildCommand( commands.get( 'outdentList' ) );\n\t\t}\n\t}\n}\n\nfunction getViewListItemLength( element ) {\n\tlet length = 1;\n\n\tfor ( const child of element.getChildren() ) {\n\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n\t\t\tfor ( const item of child.getChildren() ) {\n\t\t\t\tlength += getViewListItemLength( item );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn length;\n}\n"]}]}