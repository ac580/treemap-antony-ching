{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteui.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteui.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGJsb2NrLXF1b3RlL2Jsb2NrcXVvdGV1aQogKi8KaW1wb3J0IFBsdWdpbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LWNvcmUvc3JjL3BsdWdpbic7CmltcG9ydCBCdXR0b25WaWV3IGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdWkvc3JjL2J1dHRvbi9idXR0b252aWV3JzsKaW1wb3J0IHF1b3RlSWNvbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LWNvcmUvdGhlbWUvaWNvbnMvcXVvdGUuc3ZnJzsKaW1wb3J0ICcuLi90aGVtZS9ibG9ja3F1b3RlLmNzcyc7Ci8qKgogKiBUaGUgYmxvY2sgcXVvdGUgVUkgcGx1Z2luLgogKgogKiBJdCBpbnRyb2R1Y2VzIHRoZSBgJ2Jsb2NrUXVvdGUnYCBidXR0b24uCiAqCiAqIEBleHRlbmRzIG1vZHVsZTpjb3JlL3BsdWdpbn5QbHVnaW4KICovCgpleHBvcnQgZGVmYXVsdCBjbGFzcyBCbG9ja1F1b3RlVUkgZXh0ZW5kcyBQbHVnaW4gewogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCiAgaW5pdCgpIHsKICAgIGNvbnN0IGVkaXRvciA9IHRoaXMuZWRpdG9yOwogICAgY29uc3QgdCA9IGVkaXRvci50OwogICAgZWRpdG9yLnVpLmNvbXBvbmVudEZhY3RvcnkuYWRkKCdibG9ja1F1b3RlJywgbG9jYWxlID0+IHsKICAgICAgY29uc3QgY29tbWFuZCA9IGVkaXRvci5jb21tYW5kcy5nZXQoJ2Jsb2NrUXVvdGUnKTsKICAgICAgY29uc3QgYnV0dG9uVmlldyA9IG5ldyBCdXR0b25WaWV3KGxvY2FsZSk7CiAgICAgIGJ1dHRvblZpZXcuc2V0KHsKICAgICAgICBsYWJlbDogdCgnQmxvY2sgcXVvdGUnKSwKICAgICAgICBpY29uOiBxdW90ZUljb24sCiAgICAgICAgdG9vbHRpcDogdHJ1ZSwKICAgICAgICBpc1RvZ2dsZWFibGU6IHRydWUKICAgICAgfSk7IC8vIEJpbmQgYnV0dG9uIG1vZGVsIHRvIGNvbW1hbmQuCgogICAgICBidXR0b25WaWV3LmJpbmQoJ2lzT24nLCAnaXNFbmFibGVkJykudG8oY29tbWFuZCwgJ3ZhbHVlJywgJ2lzRW5hYmxlZCcpOyAvLyBFeGVjdXRlIGNvbW1hbmQuCgogICAgICB0aGlzLmxpc3RlblRvKGJ1dHRvblZpZXcsICdleGVjdXRlJywgKCkgPT4gZWRpdG9yLmV4ZWN1dGUoJ2Jsb2NrUXVvdGUnKSk7CiAgICAgIHJldHVybiBidXR0b25WaWV3OwogICAgfSk7CiAgfQoKfQ=="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteui.js"],"names":["Plugin","ButtonView","quoteIcon","BlockQuoteUI","init","editor","t","ui","componentFactory","add","locale","command","commands","get","buttonView","set","label","icon","tooltip","isToggleable","bind","to","listenTo","execute"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,UAAP,MAAuB,8CAAvB;AAEA,OAAOC,SAAP,MAAsB,gDAAtB;AACA,OAAO,yBAAP;AAEA;;;;;;;;AAOA,eAAe,MAAMC,YAAN,SAA2BH,MAA3B,CAAkC;AAChD;;;AAGAI,EAAAA,IAAI,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,CAAC,GAAGD,MAAM,CAACC,CAAjB;AAEAD,IAAAA,MAAM,CAACE,EAAP,CAAUC,gBAAV,CAA2BC,GAA3B,CAAgC,YAAhC,EAA8CC,MAAM,IAAI;AACvD,YAAMC,OAAO,GAAGN,MAAM,CAACO,QAAP,CAAgBC,GAAhB,CAAqB,YAArB,CAAhB;AACA,YAAMC,UAAU,GAAG,IAAIb,UAAJ,CAAgBS,MAAhB,CAAnB;AAEAI,MAAAA,UAAU,CAACC,GAAX,CAAgB;AACfC,QAAAA,KAAK,EAAEV,CAAC,CAAE,aAAF,CADO;AAEfW,QAAAA,IAAI,EAAEf,SAFS;AAGfgB,QAAAA,OAAO,EAAE,IAHM;AAIfC,QAAAA,YAAY,EAAE;AAJC,OAAhB,EAJuD,CAWvD;;AACAL,MAAAA,UAAU,CAACM,IAAX,CAAiB,MAAjB,EAAyB,WAAzB,EAAuCC,EAAvC,CAA2CV,OAA3C,EAAoD,OAApD,EAA6D,WAA7D,EAZuD,CAcvD;;AACA,WAAKW,QAAL,CAAeR,UAAf,EAA2B,SAA3B,EAAsC,MAAMT,MAAM,CAACkB,OAAP,CAAgB,YAAhB,CAA5C;AAEA,aAAOT,UAAP;AACA,KAlBD;AAmBA;;AA3B+C","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module block-quote/blockquoteui\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n\nimport quoteIcon from '@ckeditor/ckeditor5-core/theme/icons/quote.svg';\nimport '../theme/blockquote.css';\n\n/**\n * The block quote UI plugin.\n *\n * It introduces the `'blockQuote'` button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BlockQuoteUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\teditor.ui.componentFactory.add( 'blockQuote', locale => {\n\t\t\tconst command = editor.commands.get( 'blockQuote' );\n\t\t\tconst buttonView = new ButtonView( locale );\n\n\t\t\tbuttonView.set( {\n\t\t\t\tlabel: t( 'Block quote' ),\n\t\t\t\ticon: quoteIcon,\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\t// Bind button model to command.\n\t\t\tbuttonView.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\t// Execute command.\n\t\t\tthis.listenTo( buttonView, 'execute', () => editor.execute( 'blockQuote' ) );\n\n\t\t\treturn buttonView;\n\t\t} );\n\t}\n}\n"]}]}