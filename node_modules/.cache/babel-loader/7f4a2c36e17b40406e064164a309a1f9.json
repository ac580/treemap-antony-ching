{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js"],"names":["View","FocusTracker","KeystrokeHandler","getOptimalPosition","DropdownView","constructor","locale","buttonView","panelView","bind","bindTemplate","set","focusTracker","keystrokes","setTemplate","tag","attributes","class","to","if","value","children","extendTemplate","render","listenTo","isOpen","on","panelPosition","position","_getOptimalPosition","element","target","fitInViewport","positions","_panelPositions","name","add","closeDropdown","data","cancel","focus","isEnabled","southEast","southWest","northEast","northWest","defaultPanelPositions","uiLanguageDirection","buttonRect","top","bottom","left","panelRect","width","height"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,gBAAP,MAA6B,gDAA7B;AAEA,OAAO,8CAAP;AAEA,SAASC,kBAAT,QAAmC,4CAAnC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,eAAe,MAAMC,YAAN,SAA2BJ,IAA3B,CAAgC;AAC9C;;;;;;;;;AASAK,EAAAA,WAAW,CAAEC,MAAF,EAAUC,UAAV,EAAsBC,SAAtB,EAAkC;AAC5C,UAAOF,MAAP;AAEA,UAAMG,IAAI,GAAG,KAAKC,YAAlB;AAEA;;;;;;;AAMA,SAAKH,UAAL,GAAkBA,UAAlB;AAEA;;;;;;;;;;;;;;;AAcA,SAAKC,SAAL,GAAiBA,SAAjB;AAEA;;;;;;;AAMA,SAAKG,GAAL,CAAU,QAAV,EAAoB,KAApB;AAEA;;;;;;;;;AAQA,SAAKA,GAAL,CAAU,WAAV,EAAuB,IAAvB;AAEA;;;;;;;AAMA,SAAKA,GAAL,CAAU,OAAV;AAEA;;;;;;;;;;;;;;;;AAeA,SAAKA,GAAL,CAAU,eAAV,EAA2B,MAA3B;AAEA;;;;;;;AAMA,SAAKC,YAAL,GAAoB,IAAIX,YAAJ,EAApB;AAEA;;;;;;;;;;;AAUA,SAAKY,UAAL,GAAkB,IAAIX,gBAAJ,EAAlB;AAEA,SAAKY,WAAL,CAAkB;AACjBC,MAAAA,GAAG,EAAE,KADY;AAGjBC,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE,CACN,IADM,EAEN,aAFM,EAGNR,IAAI,CAACS,EAAL,CAAS,OAAT,CAHM,EAINT,IAAI,CAACU,EAAL,CAAS,WAAT,EAAsB,aAAtB,EAAqCC,KAAK,IAAI,CAACA,KAA/C,CAJM;AADI,OAHK;AAYjBC,MAAAA,QAAQ,EAAE,CACTd,UADS,EAETC,SAFS;AAZO,KAAlB;AAkBAD,IAAAA,UAAU,CAACe,cAAX,CAA2B;AAC1BN,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE,CACN,qBADM;AADI;AADc,KAA3B;AAQA;;;;;;;;;;AAUA;;;;;;;;;;AAUA;;;;;;;;;;;;;;AAcA;AAED;;;;;AAGAM,EAAAA,MAAM,GAAG;AACR,UAAMA,MAAN,GADQ,CAGR;;AACA,SAAKC,QAAL,CAAe,KAAKjB,UAApB,EAAgC,MAAhC,EAAwC,MAAM;AAC7C,WAAKkB,MAAL,GAAc,CAAC,KAAKA,MAApB;AACA,KAFD,EAJQ,CAQR;;AACA,SAAKjB,SAAL,CAAeC,IAAf,CAAqB,WAArB,EAAmCS,EAAnC,CAAuC,IAAvC,EAA6C,QAA7C,EATQ,CAWR;AACA;;AACA,SAAKQ,EAAL,CAAS,eAAT,EAA0B,MAAM;AAC/B,UAAK,CAAC,KAAKD,MAAX,EAAoB;AACnB;AACA,OAH8B,CAK/B;AACA;;;AACA,UAAK,KAAKE,aAAL,KAAuB,MAA5B,EAAqC;AACpC,aAAKnB,SAAL,CAAeoB,QAAf,GAA0BxB,YAAY,CAACyB,mBAAb,CAAkC;AAC3DC,UAAAA,OAAO,EAAE,KAAKtB,SAAL,CAAesB,OADmC;AAE3DC,UAAAA,MAAM,EAAE,KAAKxB,UAAL,CAAgBuB,OAFmC;AAG3DE,UAAAA,aAAa,EAAE,IAH4C;AAI3DC,UAAAA,SAAS,EAAE,KAAKC;AAJ2C,SAAlC,EAKtBC,IALJ;AAMA,OAPD,MAOO;AACN,aAAK3B,SAAL,CAAeoB,QAAf,GAA0B,KAAKD,aAA/B;AACA;AACD,KAjBD,EAbQ,CAgCR;;AACA,SAAKd,UAAL,CAAgBW,QAAhB,CAA0B,KAAKM,OAA/B,EAjCQ,CAmCR;;AACA,SAAKlB,YAAL,CAAkBwB,GAAlB,CAAuB,KAAKN,OAA5B;;AAEA,UAAMO,aAAa,GAAG,CAAEC,IAAF,EAAQC,MAAR,KAAoB;AACzC,UAAK,KAAKd,MAAV,EAAmB;AAClB,aAAKlB,UAAL,CAAgBiC,KAAhB;AACA,aAAKf,MAAL,GAAc,KAAd;AACAc,QAAAA,MAAM;AACN;AACD,KAND,CAtCQ,CA8CR;;;AACA,SAAK1B,UAAL,CAAgBF,GAAhB,CAAqB,WAArB,EAAkC,CAAE2B,IAAF,EAAQC,MAAR,KAAoB;AACrD;AACA,UAAK,KAAKhC,UAAL,CAAgBkC,SAAhB,IAA6B,CAAC,KAAKhB,MAAxC,EAAiD;AAChD,aAAKA,MAAL,GAAc,IAAd;AACAc,QAAAA,MAAM;AACN;AACD,KAND,EA/CQ,CAuDR;;AACA,SAAK1B,UAAL,CAAgBF,GAAhB,CAAqB,YAArB,EAAmC,CAAE2B,IAAF,EAAQC,MAAR,KAAoB;AACtD,UAAK,KAAKd,MAAV,EAAmB;AAClBc,QAAAA,MAAM;AACN;AACD,KAJD,EAxDQ,CA8DR;;AACA,SAAK1B,UAAL,CAAgBF,GAAhB,CAAqB,WAArB,EAAkC0B,aAAlC;AACA,SAAKxB,UAAL,CAAgBF,GAAhB,CAAqB,KAArB,EAA4B0B,aAA5B;AACA;AAED;;;;;AAGAG,EAAAA,KAAK,GAAG;AACP,SAAKjC,UAAL,CAAgBiC,KAAhB;AACA;AAED;;;;;;;;;;AAQA,MAAIN,eAAJ,GAAsB;AACrB,UAAM;AAAEQ,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,SAAxB;AAAmCC,MAAAA;AAAnC,QAAiDzC,YAAY,CAAC0C,qBAApE;;AAEA,QAAK,KAAKxC,MAAL,CAAYyC,mBAAZ,KAAoC,KAAzC,EAAiD;AAChD,aAAO,CAAEL,SAAF,EAAaC,SAAb,EAAwBC,SAAxB,EAAmCC,SAAnC,CAAP;AACA,KAFD,MAEO;AACN,aAAO,CAAEF,SAAF,EAAaD,SAAb,EAAwBG,SAAxB,EAAmCD,SAAnC,CAAP;AACA;AACD;;AAjQ6C;AAoQ/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDAxC,YAAY,CAAC0C,qBAAb,GAAqC;AACpCJ,EAAAA,SAAS,EAAEM,UAAU,IAAI;AACxB,WAAO;AACNC,MAAAA,GAAG,EAAED,UAAU,CAACE,MADV;AAENC,MAAAA,IAAI,EAAEH,UAAU,CAACG,IAFX;AAGNhB,MAAAA,IAAI,EAAE;AAHA,KAAP;AAKA,GAPmC;AAQpCQ,EAAAA,SAAS,EAAE,CAAEK,UAAF,EAAcI,SAAd,KAA6B;AACvC,WAAO;AACNH,MAAAA,GAAG,EAAED,UAAU,CAACE,MADV;AAENC,MAAAA,IAAI,EAAEH,UAAU,CAACG,IAAX,GAAkBC,SAAS,CAACC,KAA5B,GAAoCL,UAAU,CAACK,KAF/C;AAGNlB,MAAAA,IAAI,EAAE;AAHA,KAAP;AAKA,GAdmC;AAepCS,EAAAA,SAAS,EAAE,CAAEI,UAAF,EAAcI,SAAd,KAA6B;AACvC,WAAO;AACNH,MAAAA,GAAG,EAAED,UAAU,CAACC,GAAX,GAAiBG,SAAS,CAACE,MAD1B;AAENH,MAAAA,IAAI,EAAEH,UAAU,CAACG,IAFX;AAGNhB,MAAAA,IAAI,EAAE;AAHA,KAAP;AAKA,GArBmC;AAsBpCU,EAAAA,SAAS,EAAE,CAAEG,UAAF,EAAcI,SAAd,KAA6B;AACvC,WAAO;AACNH,MAAAA,GAAG,EAAED,UAAU,CAACE,MAAX,GAAoBE,SAAS,CAACE,MAD7B;AAENH,MAAAA,IAAI,EAAEH,UAAU,CAACG,IAAX,GAAkBC,SAAS,CAACC,KAA5B,GAAoCL,UAAU,CAACK,KAF/C;AAGNlB,MAAAA,IAAI,EAAE;AAHA,KAAP;AAKA;AA5BmC,CAArC;AA+BA;;;;;;;AAMA/B,YAAY,CAACyB,mBAAb,GAAmC1B,kBAAnC","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\n\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n\nimport '../../theme/components/dropdown/dropdown.css';\n\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\n\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n *\t\tconst button = new DropdownButtonView( locale );\n *\t\tconst panel = new DropdownPanelView( locale );\n *\t\tconst dropdown = new DropdownView( locale, button, panel );\n *\n *\t\tbutton.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tpanel.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n *\n * @extends module:ui/view~View\n */\nexport default class DropdownView extends View {\n\t/**\n\t * Creates an instance of the dropdown.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {module:ui/dropdown/button/dropdownbutton~DropdownButton} buttonView\n\t * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} panelView\n\t */\n\tconstructor( locale, buttonView, panelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView} #buttonView\n\t\t */\n\t\tthis.buttonView = buttonView;\n\n\t\t/**\n\t\t * Panel of the dropdown. It opens when the {@link #buttonView} is\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed} (i.e. clicked).\n\t\t *\n\t\t * Child views can be added to the panel's `children` collection:\n\t\t *\n\t\t *\t\tdropdown.panelView.children.add( childView );\n\t\t *\n\t\t * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n\t\t * {@link module:ui/viewcollection~ViewCollection#add}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n\t\t */\n\t\tthis.panelView = panelView;\n\n\t\t/**\n\t\t * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOpen\n\t\t */\n\t\tthis.set( 'isOpen', false );\n\n\t\t/**\n\t\t * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\n\t\t *\n\t\t * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isEnabled\n\t\t */\n\t\tthis.set( 'isEnabled', true );\n\n\t\t/**\n\t\t * (Optional) The additional CSS class set on the dropdown {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * The position of the panel, relative to the dropdown.\n\t\t *\n\t\t * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\n\t\t * in the viewport, visible to the user. The positions correspond directly to\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\n\t\t *\n\t\t * **Note**: This value has an impact on the\n\t\t * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\n\t\t * each time the panel becomes {@link #isOpen open}.\n\t\t *\n\t\t * @observable\n\t\t * @default 'auto'\n\t\t * @member {'auto'|'se'|'sw'|'ne'|'nw'} #panelPosition\n\t\t */\n\t\tthis.set( 'panelPosition', 'auto' );\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t\t * keystrokes of the dropdown:\n\t\t *\n\t\t * * <kbd>▼</kbd> opens the dropdown,\n\t\t * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-dropdown',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tbuttonView,\n\t\t\t\tpanelView\n\t\t\t]\n\t\t} );\n\n\t\tbuttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown__button',\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n\t\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/list/listview~ListView} #listView\n\t\t */\n\n\t\t/**\n\t\t * A child toolbar of the dropdown located in the\n\t\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView} #toolbarView\n\t\t */\n\n\t\t/**\n\t\t * Fired when the toolbar button or list item is executed.\n\t\t *\n\t\t * For {@link #listView} It fires when a child of some {@link module:ui/list/listitemview~ListItemView}\n\t\t * fired `execute`.\n\t\t *\n\t\t * For {@link #toolbarView} It fires when one of the buttons has been\n\t\t * {@link module:ui/button/buttonview~ButtonView#event:execute executed}.\n\t\t *\n\t\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}\n\t\t * or {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t\t *\n\t\t * @event execute\n\t\t */\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Toggle the dropdown when its button has been clicked.\n\t\tthis.listenTo( this.buttonView, 'open', () => {\n\t\t\tthis.isOpen = !this.isOpen;\n\t\t} );\n\n\t\t// Toggle the visibility of the panel when the dropdown becomes open.\n\t\tthis.panelView.bind( 'isVisible' ).to( this, 'isOpen' );\n\n\t\t// Let the dropdown control the position of the panel. The position must\n\t\t// be updated every time the dropdown is open.\n\t\tthis.on( 'change:isOpen', () => {\n\t\t\tif ( !this.isOpen ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If \"auto\", find the best position of the panel to fit into the viewport.\n\t\t\t// Otherwise, simply assign the static position.\n\t\t\tif ( this.panelPosition === 'auto' ) {\n\t\t\t\tthis.panelView.position = DropdownView._getOptimalPosition( {\n\t\t\t\t\telement: this.panelView.element,\n\t\t\t\t\ttarget: this.buttonView.element,\n\t\t\t\t\tfitInViewport: true,\n\t\t\t\t\tpositions: this._panelPositions\n\t\t\t\t} ).name;\n\t\t\t} else {\n\t\t\t\tthis.panelView.position = this.panelPosition;\n\t\t\t}\n\t\t} );\n\n\t\t// Listen for keystrokes coming from within #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\t// Register #element in the focus tracker.\n\t\tthis.focusTracker.add( this.element );\n\n\t\tconst closeDropdown = ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tthis.buttonView.focus();\n\t\t\t\tthis.isOpen = false;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\t// Open the dropdown panel using the arrow down key, just like with return or space.\n\t\tthis.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\t\t// Don't open if the dropdown is disabled or already open.\n\t\t\tif ( this.buttonView.isEnabled && !this.isOpen ) {\n\t\t\t\tthis.isOpen = true;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Block the right arrow key (until nested dropdowns are implemented).\n\t\tthis.keystrokes.set( 'arrowright', ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the dropdown using the arrow left/escape key.\n\t\tthis.keystrokes.set( 'arrowleft', closeDropdown );\n\t\tthis.keystrokes.set( 'esc', closeDropdown );\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tfocus() {\n\t\tthis.buttonView.focus();\n\t}\n\n\t/**\n\t * Returns {@link #panelView panel} positions to be used by the\n\t * {@link module:utils/dom/position~getOptimalPosition `getOptimalPosition()`}\n\t * utility considering the direction of the language the UI of the editor is displayed in.\n\t *\n\t * @type {module:utils/dom/position~Options#positions}\n\t * @private\n\t */\n\tget _panelPositions() {\n\t\tconst { southEast, southWest, northEast, northWest } = DropdownView.defaultPanelPositions;\n\n\t\tif ( this.locale.uiLanguageDirection === 'ltr' ) {\n\t\t\treturn [ southEast, southWest, northEast, northWest ];\n\t\t} else {\n\t\t\treturn [ southWest, southEast, northWest, northEast ];\n\t\t}\n\t}\n}\n\n/**\n * A set of positioning functions used by the dropdown view to determine\n * the optimal position (i.e. fitting into the browser viewport) of its\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n *\n * The available positioning functions are as follow:\n *\n * **South**\n *\n * * `southEast`\n *\n *\t\t[ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * * `southWest`\n *\n *\t\t         [ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * **North**\n *\n * * `northEast`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t[ Button ]\n *\n * * `northWest`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t         [ Button ]\n *\n * Positioning functions are compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in dropdown panel's class that\n * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n * to learn more.\n *\n * @member {Object} module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions\n */\nDropdownView.defaultPanelPositions = {\n\tsouthEast: buttonRect => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'se'\n\t\t};\n\t},\n\tsouthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'sw'\n\t\t};\n\t},\n\tnorthEast: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'ne'\n\t\t};\n\t},\n\tnorthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom - panelRect.height,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'nw'\n\t\t};\n\t}\n};\n\n/**\n * A function used to calculate the optimal position for the dropdown panel.\n *\n * @protected\n * @member {Function} module:ui/dropdown/dropdownview~DropdownView._getOptimalPosition\n */\nDropdownView._getOptimalPosition = getOptimalPosition;\n"]}]}