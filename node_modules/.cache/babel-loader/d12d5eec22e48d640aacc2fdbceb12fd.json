{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-undo/src/undo.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-undo/src/undo.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHVuZG8vdW5kbwogKi8KaW1wb3J0IFBsdWdpbiBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LWNvcmUvc3JjL3BsdWdpbic7CmltcG9ydCBVbmRvRWRpdGluZyBmcm9tICcuL3VuZG9lZGl0aW5nJzsKaW1wb3J0IFVuZG9VSSBmcm9tICcuL3VuZG91aSc7Ci8qKgogKiBUaGUgdW5kbyBmZWF0dXJlLgogKgogKiBUaGlzIGlzIGEgImdsdWUiIHBsdWdpbiB3aGljaCBsb2FkcyB0aGUge0BsaW5rIG1vZHVsZTp1bmRvL3VuZG9lZGl0aW5nflVuZG9FZGl0aW5nIHVuZG8gZWRpdGluZyBmZWF0dXJlfQogKiBhbmQge0BsaW5rIG1vZHVsZTp1bmRvL3VuZG91aX5VbmRvVUkgdW5kbyBVSSBmZWF0dXJlfS4KICoKICogQmVsb3cgaXMgdGhlIGV4cGxhbmF0aW9uIG9mIHRoZSB1bmRvIG1lY2hhbmlzbSB3b3JraW5nIHRvZ2V0aGVyIHdpdGgge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvaGlzdG9yeX5IaXN0b3J5IEhpc3Rvcnl9OgogKgogKiBXaGVuZXZlciBhIHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9uIG9wZXJhdGlvbn0gaXMgYXBwbGllZCB0byB0aGUKICoge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvZG9jdW1lbnR+RG9jdW1lbnQgZG9jdW1lbnR9LCBpdCBpcyBzYXZlZCB0byBgSGlzdG9yeWAgYXMgaXMuCiAqIFRoZSB7QGxpbmsgbW9kdWxlOmVuZ2luZS9tb2RlbC9iYXRjaH5CYXRjaCBiYXRjaH0gdGhhdCBvd25zIHRoYXQgb3BlcmF0aW9uIGlzIGFsc28gc2F2ZWQsIGluCiAqIHtAbGluayBtb2R1bGU6dW5kby91bmRvY29tbWFuZH5VbmRvQ29tbWFuZH0sIHRvZ2V0aGVyIHdpdGggdGhlIHNlbGVjdGlvbiB0aGF0IHdhcyBwcmVzZW50IGluIHRoZSBkb2N1bWVudCBiZWZvcmUgdGhlCiAqIG9wZXJhdGlvbiB3YXMgYXBwbGllZC4gQSBiYXRjaCBpcyBzYXZlZCBpbnN0ZWFkIG9mIHRoZSBvcGVyYXRpb24gYmVjYXVzZSBjaGFuZ2VzIGFyZSB1bmRvbmUgYmF0Y2gtYnktYmF0Y2gsIG5vdCBvcGVyYXRpb24tYnktb3BlcmF0aW9uCiAqIGFuZCBhIGJhdGNoIGlzIHNlZW4gYXMgb25lIHVuZG8gc3RlcC4KICoKICogQWZ0ZXIgc29tZSBjaGFuZ2VzIGhhcHBlbiB0byB0aGUgZG9jdW1lbnQsIHRoZSBgSGlzdG9yeWAgYW5kIGBVbmRvQ29tbWFuZGAgc3RhY2sgY2FuIGJlIHJlcHJlc2VudGVkIGFzIGZvbGxvd3M6CiAqCiAqCQkgICAgSGlzdG9yeSAgICAgICAgICAgICAgICAgICAgICAgICAgICBVbmRvIHN0YWNrCiAqCQk9PT09PT09PT09PT09PSAgICAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqCQlbb3BlcmF0aW9uIEExXSAgICAgICAgICAgICAgICAgICAgICAgICBbYmF0Y2ggQV0KICoJCVtvcGVyYXRpb24gQjFdICAgICAgICAgICAgICAgICAgICAgICAgIFtiYXRjaCBCXQogKgkJW29wZXJhdGlvbiBCMl0gICAgICAgICAgICAgICAgICAgICAgICAgW2JhdGNoIENdCiAqCQlbb3BlcmF0aW9uIEMxXQogKgkJW29wZXJhdGlvbiBDMl0KICoJCVtvcGVyYXRpb24gQjNdCiAqCQlbb3BlcmF0aW9uIEMzXQogKgogKiBXaGVyZSBvcGVyYXRpb25zIHN0YXJ0aW5nIHdpdGggdGhlIHNhbWUgbGV0dGVyIGFyZSBmcm9tIHNhbWUgYmF0Y2guCiAqCiAqIFVuZG9pbmcgYSBiYXRjaCBtZWFucyB0aGF0IGEgc2V0IG9mIG9wZXJhdGlvbnMgd2hpY2ggd2lsbCByZXZlcnNlIHRoZSBlZmZlY3RzIG9mIHRoYXQgYmF0Y2ggbmVlZHMgdG8gYmUgZ2VuZXJhdGVkLgogKiBGb3IgZXhhbXBsZSwgaWYgYSBiYXRjaCBhZGRlZCBzZXZlcmFsIGxldHRlcnMsIHVuZG9pbmcgdGhlIGJhdGNoIHNob3VsZCByZW1vdmUgdGhlbS4gSXQgaXMgaW1wb3J0YW50IHRvIGFwcGx5IHVuZG9pbmcKICogb3BlcmF0aW9ucyBpbiB0aGUgcmV2ZXJzZWQgb3JkZXIsIHNvIGlmIGEgYmF0Y2ggaGFzIG9wZXJhdGlvbiBgWGAsIGBZYCwgYFpgLCByZXZlcnNlZCBvcGVyYXRpb25zIGBacmAsIGBZcmAgYW5kIGBYcmAKICogbmVlZCB0byBiZSBhcHBsaWVkLiBPdGhlcndpc2UgcmV2ZXJzZWQgb3BlcmF0aW9uIGBYcmAgd291bGQgb3BlcmF0ZSBvbiBhIHdyb25nIGRvY3VtZW50IHN0YXRlLCBiZWNhdXNlIG9wZXJhdGlvbiBgWGAKICogZG9lcyBub3Qga25vdyB0aGF0IG9wZXJhdGlvbnMgYFlgIGFuZCBgWmAgaGFwcGVuZWQuCiAqCiAqIEFmdGVyIG9wZXJhdGlvbnMgZnJvbSBhbiB1bmRvbmUgYmF0Y2ggZ290IHtAbGluayBtb2R1bGU6ZW5naW5lL21vZGVsL29wZXJhdGlvbi9vcGVyYXRpb25+T3BlcmF0aW9uI2dldFJldmVyc2VkIHJldmVyc2VkfSwKICogb25lIG5lZWRzIHRvIG1ha2Ugc3VyZSBpZiB0aGV5IGFyZSByZWFkeSB0byBiZSBhcHBsaWVkLiBJbiB0aGUgc2NlbmFyaW8gYWJvdmUsIG9wZXJhdGlvbiBgQzNgIGlzIHRoZSBsYXN0IG9wZXJhdGlvbiBhbmQgYEMzcmAKICogYmFzZXMgb24gdXAtdG8tZGF0ZSBkb2N1bWVudCBzdGF0ZSwgc28gaXQgY2FuIGJlIGFwcGxpZWQgdG8gdGhlIGRvY3VtZW50LgogKgogKgkJICAgICBIaXN0b3J5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICBVbmRvIHN0YWNrCiAqCQk9PT09PT09PT09PT09PT09PSAgICAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqCQlbIG9wZXJhdGlvbiBBMSAgXSAgICAgICAgICAgICAgICAgICAgICBbICBiYXRjaCBBICBdCiAqCQlbIG9wZXJhdGlvbiBCMSAgXSAgICAgICAgICAgICAgICAgICAgICBbICBiYXRjaCBCICBdCiAqCQlbIG9wZXJhdGlvbiBCMiAgXSAgICAgICAgICAgICBbICAgcHJvY2Vzc2luZyB1bmRvaW5nIGJhdGNoIEMgICBdCiAqCQlbIG9wZXJhdGlvbiBDMSAgXQogKgkJWyBvcGVyYXRpb24gQzIgIF0KICoJCVsgb3BlcmF0aW9uIEIzICBdCiAqCQlbIG9wZXJhdGlvbiBDMyAgXQogKgkJWyBvcGVyYXRpb24gQzNyIF0KICoKICogTmV4dCBpcyBvcGVyYXRpb24gYEMyYCwgcmV2ZXJzZWQgdG8gYEMycmAuIGBDMnJgIGJhc2VzIG9uIGBDMmAsIHNvIGl0IGJhc2VzIG9uIHRoZSB3cm9uZyBkb2N1bWVudCBzdGF0ZS4gSXQgbmVlZHMgdG8gYmUKICogdHJhbnNmb3JtZWQgYnkgb3BlcmF0aW9ucyBmcm9tIGhpc3RvcnkgdGhhdCBoYXBwZW5lZCBhZnRlciBpdCwgc28gaXQgImtub3dzIiBhYm91dCB0aGVtLiBMZXQgdXMgYXNzdW1lIHRoYXQgYEMyJyA9IEMyciAqIEIzICogQzMgKiBDM3JgLAogKiB3aGVyZSBgKmAgbWVhbnMgInRyYW5zZm9ybWVkIGJ5Ii4gUmVzdCBvZiBvcGVyYXRpb25zIGZyb20gdGhhdCBiYXRjaCBhcmUgcHJvY2Vzc2VkIGluIHRoZSBzYW1lIGZhc2hpb24uCiAqCiAqCQkgICAgIEhpc3RvcnkgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFVuZG8gc3RhY2sgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlZG8gc3RhY2sKICoJCT09PT09PT09PT09PT09PT09ICAgICAgICAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gICAgICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogKgkJWyBvcGVyYXRpb24gQTEgIF0gICAgICAgICAgICAgICAgICAgICAgWyAgYmF0Y2ggQSAgXSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsgYmF0Y2ggQ3IgXQogKgkJWyBvcGVyYXRpb24gQjEgIF0gICAgICAgICAgICAgICAgICAgICAgWyAgYmF0Y2ggQiAgXQogKgkJWyBvcGVyYXRpb24gQjIgIF0KICoJCVsgb3BlcmF0aW9uIEMxICBdCiAqCQlbIG9wZXJhdGlvbiBDMiAgXQogKgkJWyBvcGVyYXRpb24gQjMgIF0KICoJCVsgb3BlcmF0aW9uIEMzICBdCiAqCQlbIG9wZXJhdGlvbiBDM3IgXQogKgkJWyBvcGVyYXRpb24gQzInIF0KICoJCVsgb3BlcmF0aW9uIEMxJyBdCiAqCiAqIFNlbGVjdGl2ZSB1bmRvIHdvcmtzIG9uIHRoZSBzYW1lIGJhc2lzLCBob3dldmVyLCBpbnN0ZWFkIG9mIHVuZG9pbmcgdGhlIGxhc3QgYmF0Y2ggaW4gdGhlIHVuZG8gc3RhY2ssIGFueSBiYXRjaCBjYW4gYmUgdW5kb25lLgogKiBUaGUgc2FtZSBhbGdvcml0aG0gYXBwbGllczogb3BlcmF0aW9ucyBmcm9tIGEgYmF0Y2ggKGkuZS4gYEExYCkgYXJlIHJldmVyc2VkIGFuZCB0aGVuIHRyYW5zZm9ybWVkIGJ5IG9wZXJhdGlvbnMgc3RvcmVkIGluIGhpc3RvcnkuCiAqCiAqIFJlZG8gYWxzbyBpcyB2ZXJ5IHNpbWlsYXIgdG8gdW5kby4gSXQgaGFzIGl0cyBvd24gc3RhY2sgdGhhdCBpcyBmaWxsZWQgd2l0aCB1bmRvaW5nIChyZXZlcnNlZCBiYXRjaGVzKS4gT3BlcmF0aW9ucyBmcm9tCiAqIGJhdGNoIHRoYXQgaXMgcmUtZG9uZSBhcmUgcmV2ZXJzZWQtYmFjaywgdHJhbnNmb3JtZWQgaW4gcHJvcGVyIG9yZGVyIGFuZCBhcHBsaWVkIHRvIHRoZSBkb2N1bWVudC4KICoKICoJCSAgICAgSGlzdG9yeSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVW5kbyBzdGFjayAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVkbyBzdGFjawogKgkJPT09PT09PT09PT09PT09PT0gICAgICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAgICAgICAgICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiAqCQlbIG9wZXJhdGlvbiBBMSAgXSAgICAgICAgICAgICAgICAgICAgICBbICBiYXRjaCBBICBdCiAqCQlbIG9wZXJhdGlvbiBCMSAgXSAgICAgICAgICAgICAgICAgICAgICBbICBiYXRjaCBCICBdCiAqCQlbIG9wZXJhdGlvbiBCMiAgXSAgICAgICAgICAgICAgICAgICAgICBbIGJhdGNoIENyciBdCiAqCQlbIG9wZXJhdGlvbiBDMSAgXQogKgkJWyBvcGVyYXRpb24gQzIgIF0KICoJCVsgb3BlcmF0aW9uIEIzICBdCiAqCQlbIG9wZXJhdGlvbiBDMyAgXQogKgkJWyBvcGVyYXRpb24gQzNyIF0KICoJCVsgb3BlcmF0aW9uIEMyJyBdCiAqCQlbIG9wZXJhdGlvbiBDMScgXQogKgkJWyBvcGVyYXRpb24gQzEncl0KICoJCVsgb3BlcmF0aW9uIEMyJ3JdCiAqCQlbIG9wZXJhdGlvbiBDM3JyXQogKgogKiBAZXh0ZW5kcyBtb2R1bGU6Y29yZS9wbHVnaW5+UGx1Z2luCiAqLwoKZXhwb3J0IGRlZmF1bHQgY2xhc3MgVW5kbyBleHRlbmRzIFBsdWdpbiB7CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KICBzdGF0aWMgZ2V0IHJlcXVpcmVzKCkgewogICAgcmV0dXJuIFtVbmRvRWRpdGluZywgVW5kb1VJXTsKICB9CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KCgogIHN0YXRpYyBnZXQgcGx1Z2luTmFtZSgpIHsKICAgIHJldHVybiAnVW5kbyc7CiAgfQoKfQ=="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-undo/src/undo.js"],"names":["Plugin","UndoEditing","UndoUI","Undo","requires","pluginName"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA,eAAe,MAAMC,IAAN,SAAmBH,MAAnB,CAA0B;AACxC;;;AAGA,aAAWI,QAAX,GAAsB;AACrB,WAAO,CAAEH,WAAF,EAAeC,MAAf,CAAP;AACA;AAED;;;;;AAGA,aAAWG,UAAX,GAAwB;AACvB,WAAO,MAAP;AACA;;AAbuC","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undo\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoEditing from './undoediting';\nimport UndoUI from './undoui';\n\n/**\n * The undo feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:undo/undoediting~UndoEditing undo editing feature}\n * and {@link module:undo/undoui~UndoUI undo UI feature}.\n *\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\n *\n * Whenever a {@link module:engine/model/operation/operation~Operation operation} is applied to the\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\n * The {@link module:engine/model/batch~Batch batch} that owns that operation is also saved, in\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\n * operation was applied. A batch is saved instead of the operation because changes are undone batch-by-batch, not operation-by-operation\n * and a batch is seen as one undo step.\n *\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\n *\n *\t\t    History                            Undo stack\n *\t\t==============             ==================================\n *\t\t[operation A1]                         [batch A]\n *\t\t[operation B1]                         [batch B]\n *\t\t[operation B2]                         [batch C]\n *\t\t[operation C1]\n *\t\t[operation C2]\n *\t\t[operation B3]\n *\t\t[operation C3]\n *\n * Where operations starting with the same letter are from same batch.\n *\n * Undoing a batch means that a set of operations which will reverse the effects of that batch needs to be generated.\n * For example, if a batch added several letters, undoing the batch should remove them. It is important to apply undoing\n * operations in the reversed order, so if a batch has operation `X`, `Y`, `Z`, reversed operations `Zr`, `Yr` and `Xr`\n * need to be applied. Otherwise reversed operation `Xr` would operate on a wrong document state, because operation `X`\n * does not know that operations `Y` and `Z` happened.\n *\n * After operations from an undone batch got {@link module:engine/model/operation/operation~Operation#getReversed reversed},\n * one needs to make sure if they are ready to be applied. In the scenario above, operation `C3` is the last operation and `C3r`\n * bases on up-to-date document state, so it can be applied to the document.\n *\n *\t\t     History                             Undo stack\n *\t\t=================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]             [   processing undoing batch C   ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\n * Next is operation `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\n * transformed by operations from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\n * where `*` means \"transformed by\". Rest of operations from that batch are processed in the same fashion.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]                                    [ batch Cr ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\n * The same algorithm applies: operations from a batch (i.e. `A1`) are reversed and then transformed by operations stored in history.\n *\n * Redo also is very similar to undo. It has its own stack that is filled with undoing (reversed batches). Operations from\n * batch that is re-done are reversed-back, transformed in proper order and applied to the document.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]                      [ batch Crr ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\t\t[ operation C1'r]\n *\t\t[ operation C2'r]\n *\t\t[ operation C3rr]\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Undo extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ UndoEditing, UndoUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Undo';\n\t}\n}\n"]}]}