{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-image/src/imageupload.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-image/src/imageupload.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIGltYWdlL2ltYWdldXBsb2FkCiAqLwppbXBvcnQgUGx1Z2luIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtY29yZS9zcmMvcGx1Z2luJzsKaW1wb3J0IEltYWdlVXBsb2FkVUkgZnJvbSAnLi9pbWFnZXVwbG9hZC9pbWFnZXVwbG9hZHVpJzsKaW1wb3J0IEltYWdlVXBsb2FkUHJvZ3Jlc3MgZnJvbSAnLi9pbWFnZXVwbG9hZC9pbWFnZXVwbG9hZHByb2dyZXNzJzsKaW1wb3J0IEltYWdlVXBsb2FkRWRpdGluZyBmcm9tICcuL2ltYWdldXBsb2FkL2ltYWdldXBsb2FkZWRpdGluZyc7Ci8qKgogKiBUaGUgaW1hZ2UgdXBsb2FkIHBsdWdpbi4KICoKICogRm9yIGEgZGV0YWlsZWQgb3ZlcnZpZXcsIGNoZWNrIHRoZSB7QGdsaW5rIGZlYXR1cmVzL2ltYWdlLXVwbG9hZC9pbWFnZS11cGxvYWQgaW1hZ2UgdXBsb2FkIGZlYXR1cmV9IGRvY3VtZW50YXRpb24uCiAqCiAqIFRoaXMgcGx1Z2luIGRvZXMgbm90IGRvIGFueXRoaW5nIGRpcmVjdGx5LCBidXQgaXQgbG9hZHMgYSBzZXQgb2Ygc3BlY2lmaWMgcGx1Z2lucyB0byBlbmFibGUgaW1hZ2UgdXBsb2FkaW5nOgogKgogKiAqIHtAbGluayBtb2R1bGU6aW1hZ2UvaW1hZ2V1cGxvYWQvaW1hZ2V1cGxvYWRlZGl0aW5nfkltYWdlVXBsb2FkRWRpdGluZ30sCiAqICoge0BsaW5rIG1vZHVsZTppbWFnZS9pbWFnZXVwbG9hZC9pbWFnZXVwbG9hZHVpfkltYWdlVXBsb2FkVUl9LAogKiAqIHtAbGluayBtb2R1bGU6aW1hZ2UvaW1hZ2V1cGxvYWQvaW1hZ2V1cGxvYWRwcm9ncmVzc35JbWFnZVVwbG9hZFByb2dyZXNzfS4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEltYWdlVXBsb2FkIGV4dGVuZHMgUGx1Z2luIHsKICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwogIHN0YXRpYyBnZXQgcGx1Z2luTmFtZSgpIHsKICAgIHJldHVybiAnSW1hZ2VVcGxvYWQnOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgc3RhdGljIGdldCByZXF1aXJlcygpIHsKICAgIHJldHVybiBbSW1hZ2VVcGxvYWRFZGl0aW5nLCBJbWFnZVVwbG9hZFVJLCBJbWFnZVVwbG9hZFByb2dyZXNzXTsKICB9Cgp9Ci8qKgogKiBJbWFnZSB1cGxvYWQgY29uZmlndXJhdGlvbi4KICoKICogQG1lbWJlciB7bW9kdWxlOmltYWdlL2ltYWdldXBsb2FkfkltYWdlVXBsb2FkQ29uZmlnfSBtb2R1bGU6aW1hZ2UvaW1hZ2V+SW1hZ2VDb25maWcjdXBsb2FkCiAqLwoKLyoqCiAqIFRoZSBjb25maWd1cmF0aW9uIG9mIHRoZSBpbWFnZSB1cGxvYWQgZmVhdHVyZS4gVXNlZCBieSB0aGUgaW1hZ2UgdXBsb2FkIGZlYXR1cmUgaW4gdGhlIGBAY2tlZGl0b3IvY2tlZGl0b3I1LWltYWdlYCBwYWNrYWdlLgogKgogKgkJQ2xhc3NpY0VkaXRvcgogKgkJCS5jcmVhdGUoIGVkaXRvckVsZW1lbnQsIHsKICogCQkJCWltYWdlOiB7CiAqIAkJCQkJdXBsb2FkOiAgLi4uIC8vIEltYWdlIHVwbG9hZCBmZWF0dXJlIG9wdGlvbnMuCiAqIAkJCQl9CiAqCQkJfSApCiAqCQkJLnRoZW4oIC4uLiApCiAqCQkJLmNhdGNoKCAuLi4gKTsKICoKICogU2VlIHtAbGluayBtb2R1bGU6Y29yZS9lZGl0b3IvZWRpdG9yY29uZmlnfkVkaXRvckNvbmZpZyBhbGwgZWRpdG9yIG9wdGlvbnN9LgogKgogKiBAaW50ZXJmYWNlIG1vZHVsZTppbWFnZS9pbWFnZXVwbG9hZH5JbWFnZVVwbG9hZENvbmZpZwogKi8KCi8qKgogKiBUaGUgbGlzdCBvZiBhY2NlcHRlZCBpbWFnZSB0eXBlcy4KICoKICogVGhlIGFjY2VwdGVkIHR5cGVzIG9mIGltYWdlcyBjYW4gYmUgY3VzdG9taXplZCB0byBhbGxvdyBvbmx5IGNlcnRhaW4gdHlwZXMgb2YgaW1hZ2VzOgogKgogKgkJLy8gQWxsb3cgb25seSBKUEVHIGFuZCBQTkcgaW1hZ2VzOgogKgkJY29uc3QgaW1hZ2VVcGxvYWRDb25maWcgPSB7CiAqCQkJdHlwZXM6IFsgJ3BuZycsICdqcGVnJyBdCiAqCQl9OwogKgogKiBUaGUgdHlwZSBzdHJpbmcgc2hvdWxkIG1hdGNoIFtvbmUgb2YgdGhlIHN1Yi10eXBlc10oaHR0cHM6Ly93d3cuaWFuYS5vcmcvYXNzaWdubWVudHMvbWVkaWEtdHlwZXMvbWVkaWEtdHlwZXMueGh0bWwjaW1hZ2UpCiAqIG9mIHRoZSBpbWFnZSBNSU1FIHR5cGUuIEUuZy4gZm9yIHRoZSBgaW1hZ2UvanBlZ2AgTUlNRSB0eXBlLCBhZGQgYCdqcGVnJ2AgdG8geW91ciBpbWFnZSB1cGxvYWQgY29uZmlndXJhdGlvbi4KICoKICogKipOb3RlOioqIFRoaXMgc2V0dGluZyBvbmx5IHJlc3RyaWN0cyBzb21lIGltYWdlIHR5cGVzIHRvIGJlIHNlbGVjdGVkIGFuZCB1cGxvYWRlZCB0aHJvdWdoIHRoZSBDS0VkaXRvciBVSSBhbmQgY29tbWFuZHMuIEltYWdlIHR5cGUKICogcmVjb2duaXRpb24gYW5kIGZpbHRlcmluZyBzaG91bGQgYWxzbyBiZSBpbXBsZW1lbnRlZCBvbiB0aGUgc2VydmVyIHdoaWNoIGFjY2VwdHMgaW1hZ2UgdXBsb2Fkcy4KICoKICogQG1lbWJlciB7QXJyYXkuPFN0cmluZz59IG1vZHVsZTppbWFnZS9pbWFnZXVwbG9hZH5JbWFnZVVwbG9hZENvbmZpZyN0eXBlcwogKiBAZGVmYXVsdCBbICdqcGVnJywgJ3BuZycsICdnaWYnLCAnYm1wJywgJ3dlYnAnLCAndGlmZicgXQogKi8="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-image/src/imageupload.js"],"names":["Plugin","ImageUploadUI","ImageUploadProgress","ImageUploadEditing","ImageUpload","pluginName","requires"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AAEA;;;;;;;;;;;;;;AAaA,eAAe,MAAMC,WAAN,SAA0BJ,MAA1B,CAAiC;AAC/C;;;AAGA,aAAWK,UAAX,GAAwB;AACvB,WAAO,aAAP;AACA;AAED;;;;;AAGA,aAAWC,QAAX,GAAsB;AACrB,WAAO,CAAEH,kBAAF,EAAsBF,aAAtB,EAAqCC,mBAArC,CAAP;AACA;;AAb8C;AAgBhD;;;;;;AAMA;;;;;;;;;;;;;;;;;AAiBA","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imageupload\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ImageUploadUI from './imageupload/imageuploadui';\nimport ImageUploadProgress from './imageupload/imageuploadprogress';\nimport ImageUploadEditing from './imageupload/imageuploadediting';\n\n/**\n * The image upload plugin.\n *\n * For a detailed overview, check the {@glink features/image-upload/image-upload image upload feature} documentation.\n *\n * This plugin does not do anything directly, but it loads a set of specific plugins to enable image uploading:\n *\n * * {@link module:image/imageupload/imageuploadediting~ImageUploadEditing},\n * * {@link module:image/imageupload/imageuploadui~ImageUploadUI},\n * * {@link module:image/imageupload/imageuploadprogress~ImageUploadProgress}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageUpload extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageUpload';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageUploadEditing, ImageUploadUI, ImageUploadProgress ];\n\t}\n}\n\n/**\n * Image upload configuration.\n *\n * @member {module:image/imageupload~ImageUploadConfig} module:image/image~ImageConfig#upload\n */\n\n/**\n * The configuration of the image upload feature. Used by the image upload feature in the `@ckeditor/ckeditor5-image` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\timage: {\n * \t\t\t\t\tupload:  ... // Image upload feature options.\n * \t\t\t\t}\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface module:image/imageupload~ImageUploadConfig\n */\n\n/**\n * The list of accepted image types.\n *\n * The accepted types of images can be customized to allow only certain types of images:\n *\n *\t\t// Allow only JPEG and PNG images:\n *\t\tconst imageUploadConfig = {\n *\t\t\ttypes: [ 'png', 'jpeg' ]\n *\t\t};\n *\n * The type string should match [one of the sub-types](https://www.iana.org/assignments/media-types/media-types.xhtml#image)\n * of the image MIME type. E.g. for the `image/jpeg` MIME type, add `'jpeg'` to your image upload configuration.\n *\n * **Note:** This setting only restricts some image types to be selected and uploaded through the CKEditor UI and commands. Image type\n * recognition and filtering should also be implemented on the server which accepts image uploads.\n *\n * @member {Array.<String>} module:image/imageupload~ImageUploadConfig#types\n * @default [ 'jpeg', 'png', 'gif', 'bmp', 'webp', 'tiff' ]\n */\n"]}]}