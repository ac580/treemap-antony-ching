{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/eslint-loader/index.js??ref--13-0!/Users/antonyching/Desktop/project/new-builder-demo/src/mixins/apiService.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/src/mixins/apiService.js","mtime":1581577342000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Y29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIGFwaVJlc3VsdDogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRlc3RNaXhpbigpIHsKICAgICAgY29uc29sZS5sb2coInRlc3QgbWl4aW4gc3VjY2Vzc2Z1bCIpOwogICAgICBheGlvcy5wb3N0KCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMiLCB7CiAgICAgICAgZmlyc3ROYW1lOiAiSm9obiIKICAgICAgfSkudGhlbihyZXMgPT4gY29uc29sZS5sb2coImFwaSByZXN1bHQgc3VjY2VzcyIsIHJlcykpLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZygiYXBpIHJlc3VsdCBmYWlsIiwgZXJyKSk7CiAgICB9LAoKICAgIHRlc3RMb2dpbih1c2VySWQsIHBhc3N3b3JkKSB7CiAgICAgIGNvbnNvbGUubG9nKCJ0ZXN0IGxvZ2luIik7CiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgInVzZXJJZCI6IHVzZXJJZCwKICAgICAgICAicGFzc3dvcmQiOiBwYXNzd29yZAogICAgICB9OwogICAgICByZXR1cm4gdGhpcy5kb1Bvc3QoIi9sb2dpbiIsIHBhcmFtcywge30pOwogICAgfSwKCiAgICBzYXZlRm9ybUJ1aWxkZXIodXNlcklkLCBqc29uU3RyaW5nKSB7CiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgInVzZXJJZCI6IHVzZXJJZCwKICAgICAgICAiZm9ybUxpc3QiOiBqc29uU3RyaW5nCiAgICAgIH07CiAgICAgIHJldHVybiB0aGlzLmRvUG9zdCgiL3NhdmVGb3JtQnVpbGRlciIsIHBhcmFtcywge30pOwogICAgfSwKCiAgICBsb2FkRm9ybUJ1aWxkZXIodXNlcklkKSB7CiAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgInVzZXJJZCI6IHVzZXJJZAogICAgICB9OwogICAgICByZXR1cm4gdGhpcy5kb1Bvc3QoIi9sb2FkRm9ybUJ1aWxkZXIiLCBwYXJhbXMsIHt9KTsKICAgIH0sCgogICAgZG9Qb3N0KHBhdGgsIGZvcm1EYXRhLCBodHRwT3B0aW9ucykgewogICAgICBpZiAoaHR0cE9wdGlvbnMgPT09IG51bGwpIHsKICAgICAgICBodHRwT3B0aW9ucyA9IHt9OwogICAgICB9CgogICAgICBsZXQgYmFzZVVybCA9ICdodHRwczovL2lmdDguZXR0cmFkZS5jb20uaGsvbW8nOwogICAgICByZXR1cm4gYXhpb3MucG9zdChiYXNlVXJsICsgcGF0aCwgZm9ybURhdGEpLnRoZW4ocmVzID0+IHsKICAgICAgICBjb25zb2xlLmxvZygiYXBpIGNhbGwgLSIgKyBiYXNlVXJsICsgcGF0aCArICIgc3VjY2VzczogIiwgcmVzKTsKICAgICAgICByZXR1cm4gcmVzOwogICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCJhcGkgY2FsbCAtIiArIGJhc2VVcmwgKyBwYXRoICsgIiBmYWlsOiAiLCBlcnIpOwogICAgICAgIHJldHVybiBlcnI7CiAgICAgIH0pOwogICAgfQoKICB9Cn07"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/src/mixins/apiService.js"],"names":["axios","require","data","apiResult","methods","testMixin","console","log","post","firstName","then","res","catch","err","testLogin","userId","password","params","doPost","saveFormBuilder","jsonString","loadFormBuilder","path","formData","httpOptions","baseUrl"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,eAAc;AACVC,EAAAA,IAAI,EAAE,YAAU;AACZ,WAAM;AACFC,MAAAA,SAAS,EAAE;AADT,KAAN;AAGH,GALS;AAMVC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,GAAE;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAP,MAAAA,KAAK,CAACQ,IAAN,CAAW,4CAAX,EAAwD;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAxD,EACCC,IADD,CACMC,GAAG,IAAEL,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCI,GAAjC,CADX,EAECC,KAFD,CAEOC,GAAG,IAAGP,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BM,GAA9B,CAFb;AAGH,KANI;;AAOLC,IAAAA,SAAS,CAACC,MAAD,EAASC,QAAT,EAAmB;AACxBV,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAIU,MAAM,GAAG;AAAC,kBAAUF,MAAX;AAAkB,oBAAYC;AAA9B,OAAb;AACA,aAAO,KAAKE,MAAL,CAAY,QAAZ,EAAsBD,MAAtB,EAA8B,EAA9B,CAAP;AACH,KAXI;;AAYLE,IAAAA,eAAe,CAACJ,MAAD,EAASK,UAAT,EAAqB;AAChC,UAAIH,MAAM,GAAG;AAAC,kBAAUF,MAAX;AAAkB,oBAAYK;AAA9B,OAAb;AACA,aAAO,KAAKF,MAAL,CAAY,kBAAZ,EAAgCD,MAAhC,EAAwC,EAAxC,CAAP;AACH,KAfI;;AAgBLI,IAAAA,eAAe,CAACN,MAAD,EAAS;AACpB,UAAIE,MAAM,GAAG;AAAC,kBAAUF;AAAX,OAAb;AACA,aAAO,KAAKG,MAAL,CAAY,kBAAZ,EAAgCD,MAAhC,EAAwC,EAAxC,CAAP;AACH,KAnBI;;AAoBLC,IAAAA,MAAM,CAACI,IAAD,EAAOC,QAAP,EAAiBC,WAAjB,EAA8B;AAChC,UAAIA,WAAW,KAAK,IAApB,EAA0B;AACxBA,QAAAA,WAAW,GAAG,EAAd;AACD;;AACD,UAAIC,OAAO,GAAG,gCAAd;AAEA,aAAOzB,KAAK,CAACQ,IAAN,CAAWiB,OAAO,GAACH,IAAnB,EAAwBC,QAAxB,EACNb,IADM,CACDC,GAAG,IACL;AAACL,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAakB,OAAb,GAAqBH,IAArB,GAA2B,YAAvC,EAAoDX,GAApD;AACG,eAAOA,GAAP;AACH,OAJE,EAKNC,KALM,CAKAC,GAAG,IACN;AAACP,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAakB,OAAb,GAAqBH,IAArB,GAA2B,SAAvC,EAAiDT,GAAjD;AACG,eAAOA,GAAP;AACH,OARE,CAAP;AAUH;;AApCI;AANC,CAAd","sourcesContent":["const axios = require('axios');\r\nexport default{\r\n    data: function(){\r\n        return{\r\n            apiResult: null\r\n        }\r\n    },\r\n    methods: {\r\n        testMixin(){\r\n            console.log(\"test mixin successful\")\r\n            axios.post(\"https://jsonplaceholder.typicode.com/posts\",{firstName: \"John\"})\r\n            .then(res=>console.log(\"api result success\",res))\r\n            .catch(err=> console.log(\"api result fail\",err));\r\n        },\r\n        testLogin(userId, password) {\r\n            console.log(\"test login\");\r\n            let params = {\"userId\": userId,\"password\": password};\r\n            return this.doPost(\"/login\", params, {})\r\n        },\r\n        saveFormBuilder(userId, jsonString) {\r\n            let params = {\"userId\": userId,\"formList\": jsonString};\r\n            return this.doPost(\"/saveFormBuilder\", params, {});\r\n        },\r\n        loadFormBuilder(userId) {\r\n            let params = {\"userId\": userId};\r\n            return this.doPost(\"/loadFormBuilder\", params, {})\r\n        },\r\n        doPost(path, formData, httpOptions) {\r\n            if (httpOptions === null) {\r\n              httpOptions = {};\r\n            }\r\n            let baseUrl = 'https://ift8.ettrade.com.hk/mo';\r\n\r\n            return axios.post(baseUrl+path,formData)\r\n            .then(res=>\r\n                {console.log(\"api call -\"+baseUrl+path+ \" success: \",res);\r\n                    return res;\r\n                })\r\n            .catch(err=> \r\n                {console.log(\"api call -\"+baseUrl+path+ \" fail: \",err)\r\n                    return err;\r\n                });\r\n            \r\n        }\r\n    },\r\n}"]}]}