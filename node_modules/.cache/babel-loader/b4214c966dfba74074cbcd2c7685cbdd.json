{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/utils/getlasttextline.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/utils/getlasttextline.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHR5cGluZy91dGlscy9nZXRsYXN0dGV4dGxpbmUKICovCgovKioKICogUmV0dXJucyB0aGUgbGFzdCB0ZXh0IGxpbmUgZnJvbSB0aGUgZ2l2ZW4gcmFuZ2UuCiAqCiAqICJUaGUgbGFzdCB0ZXh0IGxpbmUiIGlzIHVuZGVyc3Rvb2QgYXMgdGV4dCAoZnJvbSBvbmUgb3IgbW9yZSB0ZXh0IG5vZGVzKSB3aGljaCBpcyBsaW1pdGVkIGVpdGhlciBieSBhIHBhcmVudCBibG9jawogKiBvciBieSBpbmxpbmUgZWxlbWVudHMgKGUuZy4gYDxzb2Z0QnJlYWs+YCkuCiAqCiAqCQljb25zdCByYW5nZVRvQ2hlY2sgPSBtb2RlbC5jcmVhdGVSYW5nZSgKICoJCQltb2RlbC5jcmVhdGVQb3NpdGlvbkF0KCBwYXJhZ3JhcGgsIDAgKSwKICoJCQltb2RlbC5jcmVhdGVQb3NpdGlvbkF0KCBwYXJhZ3JhcGgsICdlbmQnICkKICoJCSk7CiAqCiAqCQljb25zdCB7IHRleHQsIHJhbmdlIH0gPSBnZXRMYXN0VGV4dExpbmUoIHJhbmdlVG9DaGVjaywgbW9kZWwgKTsKICoKICogRm9yIG1vZGVsIGJlbG93LCB0aGUgcmV0dXJuZWQgYHRleHRgIHdpbGwgYmUgIkZvbyBiYXIgYmF6IiBhbmQgYHJhbmdlYCB3aWxsIGJlIHNldCBvbiB3aG9sZSBgPHBhcmFncmFwaD5gIGNvbnRlbnQ6CiAqCiAqCQk8cGFyYWdyYXBoPkZvbyBiYXIgYmF6PHBhcmFncmFwaD4KICoKICogSG93ZXZlciwgaW4gYmVsb3cgY2FzZSwgYHRleHRgIHdpbGwgYmUgc2V0IHRvICJiYXoiIGFuZCBgcmFuZ2VgIHdpbGwgYmUgc2V0IG9ubHkgb24gImJheiIuCiAqCiAqCQk8cGFyYWdyYXBoPkZvbzxzb2Z0QnJlYWs+PC9zb2Z0QnJlYWs+YmFyPHNvZnRCcmVhaz48L3NvZnRCcmVhaz5iYXo8cGFyYWdyYXBoPgogKgogKiBAcHJvdGVjdGVkCiAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9yYW5nZX5SYW5nZX0gcmFuZ2UKICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL21vZGVsfk1vZGVsfSBtb2RlbAogKiBAcmV0dXJucyB7bW9kdWxlOnR5cGluZy91dGlscy9nZXRsYXN0dGV4dGxpbmV+TGFzdFRleHRMaW5lRGF0YX0KICovCmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldExhc3RUZXh0TGluZShyYW5nZSwgbW9kZWwpIHsKICBsZXQgc3RhcnQgPSByYW5nZS5zdGFydDsKICBjb25zdCB0ZXh0ID0gQXJyYXkuZnJvbShyYW5nZS5nZXRJdGVtcygpKS5yZWR1Y2UoKHJhbmdlVGV4dCwgbm9kZSkgPT4gewogICAgLy8gVHJpbSB0ZXh0IHRvIGEgbGFzdCBvY2N1cnJlbmNlIG9mIGFuIGlubGluZSBlbGVtZW50IGFuZCB1cGRhdGUgcmFuZ2Ugc3RhcnQuCiAgICBpZiAoIShub2RlLmlzKCd0ZXh0JykgfHwgbm9kZS5pcygndGV4dFByb3h5JykpKSB7CiAgICAgIHN0YXJ0ID0gbW9kZWwuY3JlYXRlUG9zaXRpb25BZnRlcihub2RlKTsKICAgICAgcmV0dXJuICcnOwogICAgfQoKICAgIHJldHVybiByYW5nZVRleHQgKyBub2RlLmRhdGE7CiAgfSwgJycpOwogIHJldHVybiB7CiAgICB0ZXh0LAogICAgcmFuZ2U6IG1vZGVsLmNyZWF0ZVJhbmdlKHN0YXJ0LCByYW5nZS5lbmQpCiAgfTsKfQovKioKICogVGhlIHZhbHVlIHJldHVybmVkIGJ5IHtAbGluayBtb2R1bGU6dHlwaW5nL3V0aWxzL2dldGxhc3R0ZXh0bGluZX5nZXRMYXN0VGV4dExpbmV9LgogKgogKiBAdHlwZWRlZiB7T2JqZWN0fSBtb2R1bGU6dHlwaW5nL3V0aWxzL2dldGxhc3R0ZXh0bGluZX5MYXN0VGV4dExpbmVEYXRhCiAqCiAqIEBwcm9wZXJ0eSB7U3RyaW5nfSB0ZXh0IFRoZSB0ZXh0IGZyb20gdGhlIHRleHQgbm9kZXMgaW4gdGhlIGxhc3QgdGV4dCBsaW5lLgogKiBAcHJvcGVydHkge21vZHVsZTplbmdpbmUvbW9kZWwvcmFuZ2V+UmFuZ2V9IHJhbmdlIFRoZSByYW5nZSBzZXQgb24gdGhlIHRleHQgbm9kZXMgaW4gdGhlIGxhc3QgdGV4dCBsaW5lLgogKi8="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/utils/getlasttextline.js"],"names":["getLastTextLine","range","model","start","text","Array","from","getItems","reduce","rangeText","node","is","createPositionAfter","data","createRange","end"],"mappings":"AAAA;;;;;AAKA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAe,SAASA,eAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAyC;AACvD,MAAIC,KAAK,GAAGF,KAAK,CAACE,KAAlB;AAEA,QAAMC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAYL,KAAK,CAACM,QAAN,EAAZ,EAA+BC,MAA/B,CAAuC,CAAEC,SAAF,EAAaC,IAAb,KAAuB;AAC1E;AACA,QAAK,EAAGA,IAAI,CAACC,EAAL,CAAS,MAAT,KAAqBD,IAAI,CAACC,EAAL,CAAS,WAAT,CAAxB,CAAL,EAAwD;AACvDR,MAAAA,KAAK,GAAGD,KAAK,CAACU,mBAAN,CAA2BF,IAA3B,CAAR;AAEA,aAAO,EAAP;AACA;;AAED,WAAOD,SAAS,GAAGC,IAAI,CAACG,IAAxB;AACA,GATY,EASV,EATU,CAAb;AAWA,SAAO;AAAET,IAAAA,IAAF;AAAQH,IAAAA,KAAK,EAAEC,KAAK,CAACY,WAAN,CAAmBX,KAAnB,EAA0BF,KAAK,CAACc,GAAhC;AAAf,GAAP;AACA;AAED","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/getlasttextline\n */\n\n/**\n * Returns the last text line from the given range.\n *\n * \"The last text line\" is understood as text (from one or more text nodes) which is limited either by a parent block\n * or by inline elements (e.g. `<softBreak>`).\n *\n *\t\tconst rangeToCheck = model.createRange(\n *\t\t\tmodel.createPositionAt( paragraph, 0 ),\n *\t\t\tmodel.createPositionAt( paragraph, 'end' )\n *\t\t);\n *\n *\t\tconst { text, range } = getLastTextLine( rangeToCheck, model );\n *\n * For model below, the returned `text` will be \"Foo bar baz\" and `range` will be set on whole `<paragraph>` content:\n *\n *\t\t<paragraph>Foo bar baz<paragraph>\n *\n * However, in below case, `text` will be set to \"baz\" and `range` will be set only on \"baz\".\n *\n *\t\t<paragraph>Foo<softBreak></softBreak>bar<softBreak></softBreak>baz<paragraph>\n *\n * @protected\n * @param {module:engine/model/range~Range} range\n * @param {module:engine/model/model~Model} model\n * @returns {module:typing/utils/getlasttextline~LastTextLineData}\n */\nexport default function getLastTextLine( range, model ) {\n\tlet start = range.start;\n\n\tconst text = Array.from( range.getItems() ).reduce( ( rangeText, node ) => {\n\t\t// Trim text to a last occurrence of an inline element and update range start.\n\t\tif ( !( node.is( 'text' ) || node.is( 'textProxy' ) ) ) {\n\t\t\tstart = model.createPositionAfter( node );\n\n\t\t\treturn '';\n\t\t}\n\n\t\treturn rangeText + node.data;\n\t}, '' );\n\n\treturn { text, range: model.createRange( start, range.end ) };\n}\n\n/**\n * The value returned by {@link module:typing/utils/getlasttextline~getLastTextLine}.\n *\n * @typedef {Object} module:typing/utils/getlasttextline~LastTextLineData\n *\n * @property {String} text The text from the text nodes in the last text line.\n * @property {module:engine/model/range~Range} range The range set on the text nodes in the last text line.\n */\n"]}]}