{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-utils/src/tomap.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-utils/src/tomap.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHV0aWxzL3RvbWFwCiAqLwppbXBvcnQgb2JqZWN0VG9NYXAgZnJvbSAnLi9vYmplY3R0b21hcCc7CmltcG9ydCB7IGlzUGxhaW5PYmplY3QgfSBmcm9tICdsb2Rhc2gtZXMnOwovKioKICogVHJhbnNmb3JtcyBvYmplY3Qgb3IgaXRlcmFibGUgdG8gbWFwLiBJdGVyYWJsZSBuZWVkcyB0byBiZSBpbiB0aGUgZm9ybWF0IGFjY2VwdGFibGUgYnkgdGhlIGBNYXBgIGNvbnN0cnVjdG9yLgogKgogKgkJbWFwID0gdG9NYXAoIHsgJ2Zvbyc6IDEsICdiYXInOiAyIH0gKTsKICoJCW1hcCA9IHRvTWFwKCBbIFsgJ2ZvbycsIDEgXSwgWyAnYmFyJywgMiBdIF0gKTsKICoJCW1hcCA9IHRvTWFwKCBhbm90aGVyTWFwICk7CiAqCiAqIEBwYXJhbSB7T2JqZWN0fEl0ZXJhYmxlfSBkYXRhIE9iamVjdCBvciBpdGVyYWJsZSB0byB0cmFuc2Zvcm0uCiAqIEByZXR1cm5zIHtNYXB9IE1hcCBjcmVhdGVkIGZyb20gZGF0YS4KICovCgpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0b01hcChkYXRhKSB7CiAgaWYgKGlzUGxhaW5PYmplY3QoZGF0YSkpIHsKICAgIHJldHVybiBvYmplY3RUb01hcChkYXRhKTsKICB9IGVsc2UgewogICAgcmV0dXJuIG5ldyBNYXAoZGF0YSk7CiAgfQp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-utils/src/tomap.js"],"names":["objectToMap","isPlainObject","toMap","data","Map"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA;;;;;;;;;;;AAUA,eAAe,SAASC,KAAT,CAAgBC,IAAhB,EAAuB;AACrC,MAAKF,aAAa,CAAEE,IAAF,CAAlB,EAA6B;AAC5B,WAAOH,WAAW,CAAEG,IAAF,CAAlB;AACA,GAFD,MAEO;AACN,WAAO,IAAIC,GAAJ,CAASD,IAAT,CAAP;AACA;AACD","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/tomap\n */\n\nimport objectToMap from './objecttomap';\nimport { isPlainObject } from 'lodash-es';\n\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\nexport default function toMap( data ) {\n\tif ( isPlainObject( data ) ) {\n\t\treturn objectToMap( data );\n\t} else {\n\t\treturn new Map( data );\n\t}\n}\n"]}]}