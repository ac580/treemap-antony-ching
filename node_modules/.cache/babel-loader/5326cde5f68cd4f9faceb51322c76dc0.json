{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js"],"names":["Range","EmitterMixin","mix","LiveRange","constructor","start","end","bindWithDocument","call","detach","stopListening","is","type","toRange","fromRange","range","listenTo","root","document","model","event","args","operation","isDocumentOperation","transform","priority","ranges","getTransformedByOperation","result","_createFromRanges","boundariesChanged","isEqual","contentChanged","doesOperationChangeRangeContent","deletionPosition","rootName","sourcePosition","oldRange","fire","containsPosition","position","targetPosition","splitPosition","insertionPosition"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liverange\n */\n\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\nexport default class LiveRange extends Range {\n\t/**\n\t * Creates a live range.\n\t *\n\t * @see module:engine/model/range~Range\n\t */\n\tconstructor( start, end ) {\n\t\tsuper( start, end );\n\n\t\tbindWithDocument.call( this );\n\t}\n\n\t/**\n\t * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n\t * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n\t * referring to it).\n\t */\n\tdetach() {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether this object is of the given.\n\t *\n\t *\t\tliveRange.is( 'range' ); // -> true\n\t *\t\tliveRange.is( 'model:range' ); // -> true\n\t *\t\tliveRange.is( 'liveRange' ); // -> true\n\t *\t\tliveRange.is( 'model:liveRange' ); // -> true\n\t *\n\t *\t\tliveRange.is( 'view:range' ); // -> false\n\t *\t\tliveRange.is( 'documentSelection' ); // -> false\n\t *\n\t * {@link module:engine/model/node~Node#is Check the entire list of model objects} which implement the `is()` method.\n\t *\n\t * @param {String} type\n\t * @returns {Boolean}\n\t */\n\tis( type ) {\n\t\treturn type == 'liveRange' || type == 'model:liveRange' || super.is( type );\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/model/range~Range range instance} that is equal to this live range.\n\t *\n\t * @returns {module:engine/model/range~Range}\n\t */\n\ttoRange() {\n\t\treturn new Range( this.start, this.end );\n\t}\n\n\t/**\n\t * Creates a `LiveRange` instance that is equal to the given range.\n\t *\n\t * @param {module:engine/model/range~Range} range\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\tstatic fromRange( range ) {\n\t\treturn new LiveRange( range.start, range.end );\n\t}\n\n\t/**\n\t * @see module:engine/model/range~Range._createIn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createIn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createOn\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createOn\n\t * @param {module:engine/model/element~Element} element\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * @see module:engine/model/range~Range._createFromPositionAndShift\n\t * @static\n\t * @protected\n\t * @method module:engine/model/liverange~LiveRange._createFromPositionAndShift\n\t * @param {module:engine/model/position~Position} position\n\t * @param {Number} shift\n\t * @returns {module:engine/model/liverange~LiveRange}\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have changed due to changes in the\n\t * {@link module:engine/model/document~Document document}.\n\t *\n\t * @event change:range\n\t * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\n\t * range before it got changed.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {module:engine/model/position~Position|null} data.deletionPosition Source position for remove and merge changes.\n\t * Available if the range was moved to the graveyard root, `null` otherwise.\n\t */\n\n\t/**\n\t * Fired when `LiveRange` instance boundaries have not changed after a change in {@link module:engine/model/document~Document document}\n\t * but the change took place inside the range, effectively changing its content.\n\t *\n\t * @event change:content\n\t * @param {module:engine/model/range~Range} range Range with start and end position equal to start and end position of\n\t * change range.\n\t * @param {Object} data Object with additional information about the change.\n\t * @param {null} data.deletionPosition Due to the nature of this event, this property is always set to `null`. It is passed\n\t * for compatibility with the {@link module:engine/model/liverange~LiveRange#event:change:range} event.\n\t */\n}\n\n// Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n// that owns this range's {@link module:engine/model/range~Range#root root}.\n//\n// @private\nfunction bindWithDocument() {\n\tthis.listenTo(\n\t\tthis.root.document.model,\n\t\t'applyOperation',\n\t\t( event, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransform.call( this, operation );\n\t\t},\n\t\t{ priority: 'low' }\n\t);\n}\n\n// Updates this range accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\nfunction transform( operation ) {\n\t// Transform the range by the operation. Join the result ranges if needed.\n\tconst ranges = this.getTransformedByOperation( operation );\n\tconst result = Range._createFromRanges( ranges );\n\n\tconst boundariesChanged = !result.isEqual( this );\n\tconst contentChanged = doesOperationChangeRangeContent( this, operation );\n\n\tlet deletionPosition = null;\n\n\tif ( boundariesChanged ) {\n\t\t// If range boundaries have changed, fire `change:range` event.\n\t\t//\n\t\tif ( result.root.rootName == '$graveyard' ) {\n\t\t\t// If the range was moved to the graveyard root, set `deletionPosition`.\n\t\t\tif ( operation.type == 'remove' ) {\n\t\t\t\tdeletionPosition = operation.sourcePosition;\n\t\t\t} else {\n\t\t\t\t// Merge operation.\n\t\t\t\tdeletionPosition = operation.deletionPosition;\n\t\t\t}\n\t\t}\n\n\t\tconst oldRange = this.toRange();\n\n\t\tthis.start = result.start;\n\t\tthis.end = result.end;\n\n\t\tthis.fire( 'change:range', oldRange, { deletionPosition } );\n\t} else if ( contentChanged ) {\n\t\t// If range boundaries have not changed, but there was change inside the range, fire `change:content` event.\n\t\tthis.fire( 'change:content', this.toRange(), { deletionPosition } );\n\t}\n}\n\n// Checks whether given operation changes something inside the range (even if it does not change boundaries).\n//\n// @private\n// @param {module:engine/model/range~Range} range Range to check.\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n// @returns {Boolean}\nfunction doesOperationChangeRangeContent( range, operation ) {\n\tswitch ( operation.type ) {\n\t\tcase 'insert':\n\t\t\treturn range.containsPosition( operation.position );\n\t\tcase 'move':\n\t\tcase 'remove':\n\t\tcase 'reinsert':\n\t\tcase 'merge':\n\t\t\treturn range.containsPosition( operation.sourcePosition ) ||\n\t\t\t\trange.start.isEqual( operation.sourcePosition ) ||\n\t\t\t\trange.containsPosition( operation.targetPosition );\n\t\tcase 'split':\n\t\t\treturn range.containsPosition( operation.splitPosition ) || range.containsPosition( operation.insertionPosition );\n\t}\n\n\treturn false;\n}\n\nmix( LiveRange, EmitterMixin );\n"]}]}