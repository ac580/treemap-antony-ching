{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHVuZG8vdW5kb2VkaXRpbmcKICovCmltcG9ydCBQbHVnaW4gZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS1jb3JlL3NyYy9wbHVnaW4nOwppbXBvcnQgVW5kb0NvbW1hbmQgZnJvbSAnLi91bmRvY29tbWFuZCc7CmltcG9ydCBSZWRvQ29tbWFuZCBmcm9tICcuL3JlZG9jb21tYW5kJzsKLyoqCiAqIFRoZSB1bmRvIGVuZ2luZSBmZWF0dXJlLgogKgogKiBJdCBpbnRyb2R1Y2VzIHRoZSBgJ3VuZG8nYCBhbmQgYCdyZWRvJ2AgY29tbWFuZHMgdG8gdGhlIGVkaXRvci4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVuZG9FZGl0aW5nIGV4dGVuZHMgUGx1Z2luIHsKICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwogIHN0YXRpYyBnZXQgcGx1Z2luTmFtZSgpIHsKICAgIHJldHVybiAnVW5kb0VkaXRpbmcnOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgY29uc3RydWN0b3IoZWRpdG9yKSB7CiAgICBzdXBlcihlZGl0b3IpOwogICAgLyoqCiAgICAgKiBUaGUgY29tbWFuZCB0aGF0IG1hbmFnZXMgdW5kbyB7QGxpbmsgbW9kdWxlOmVuZ2luZS9tb2RlbC9iYXRjaH5CYXRjaCBiYXRjaGVzfSBzdGFjayAoaGlzdG9yeSkuCiAgICAgKiBDcmVhdGVkIGFuZCByZWdpc3RlcmVkIGR1cmluZyB0aGUge0BsaW5rICNpbml0IGZlYXR1cmUgaW5pdGlhbGl6YXRpb259LgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dW5kby91bmRvY29tbWFuZH5VbmRvQ29tbWFuZH0gI191bmRvQ29tbWFuZAogICAgICovCgogICAgLyoqCiAgICAgKiBUaGUgY29tbWFuZCB0aGF0IG1hbmFnZXMgcmVkbyB7QGxpbmsgbW9kdWxlOmVuZ2luZS9tb2RlbC9iYXRjaH5CYXRjaCBiYXRjaGVzfSBzdGFjayAoaGlzdG9yeSkuCiAgICAgKiBDcmVhdGVkIGFuZCByZWdpc3RlcmVkIGR1cmluZyB0aGUge0BsaW5rICNpbml0IGZlYXR1cmUgaW5pdGlhbGl6YXRpb259LgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dW5kby91bmRvY29tbWFuZH5VbmRvQ29tbWFuZH0gI19yZWRvQ29tbWFuZAogICAgICovCgogICAgLyoqCiAgICAgKiBLZWVwcyB0cmFjayBvZiB3aGljaCBiYXRjaGVzIHdlcmUgcmVnaXN0ZXJlZCBpbiB1bmRvLgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKiBAbWVtYmVyIHtXZWFrU2V0Ljxtb2R1bGU6ZW5naW5lL21vZGVsL2JhdGNofkJhdGNoPn0KICAgICAqLwoKICAgIHRoaXMuX2JhdGNoUmVnaXN0cnkgPSBuZXcgV2Vha1NldCgpOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgaW5pdCgpIHsKICAgIGNvbnN0IGVkaXRvciA9IHRoaXMuZWRpdG9yOyAvLyBDcmVhdGUgY29tbWFuZHMuCgogICAgdGhpcy5fdW5kb0NvbW1hbmQgPSBuZXcgVW5kb0NvbW1hbmQoZWRpdG9yKTsKICAgIHRoaXMuX3JlZG9Db21tYW5kID0gbmV3IFJlZG9Db21tYW5kKGVkaXRvcik7IC8vIFJlZ2lzdGVyIGNvbW1hbmQgdG8gdGhlIGVkaXRvci4KCiAgICBlZGl0b3IuY29tbWFuZHMuYWRkKCd1bmRvJywgdGhpcy5fdW5kb0NvbW1hbmQpOwogICAgZWRpdG9yLmNvbW1hbmRzLmFkZCgncmVkbycsIHRoaXMuX3JlZG9Db21tYW5kKTsKICAgIHRoaXMubGlzdGVuVG8oZWRpdG9yLm1vZGVsLCAnYXBwbHlPcGVyYXRpb24nLCAoZXZ0LCBhcmdzKSA9PiB7CiAgICAgIGNvbnN0IG9wZXJhdGlvbiA9IGFyZ3NbMF07IC8vIERvIG5vdCByZWdpc3RlciBiYXRjaCBpZiB0aGUgb3BlcmF0aW9uIGlzIG5vdCBhIGRvY3VtZW50IG9wZXJhdGlvbi4KICAgICAgLy8gVGhpcyBwcmV2ZW50cyBmcm9tIGNyZWF0aW5nIGVtcHR5IHVuZG8gc3RlcHMsIHdoZXJlIGFsbCBvcGVyYXRpb25zIHdoZXJlIG5vbi1kb2N1bWVudCBvcGVyYXRpb25zLgogICAgICAvLyBOb24tZG9jdW1lbnQgb3BlcmF0aW9ucyBjcmVhdGVzIGFuZCBhbHRlcnMgY29udGVudCBpbiBkZXRhY2hlZCB0cmVlIGZyYWdtZW50cyAoZm9yIGV4YW1wbGUsIGRvY3VtZW50IGZyYWdtZW50cykuCiAgICAgIC8vIE1vc3Qgb2YgdGltZSB0aGlzIGlzIHByZXBhcmluZyBkYXRhIGJlZm9yZSBpdCBpcyBpbnNlcnRlZCBpbnRvIGFjdHVhbCB0cmVlIChmb3IgZXhhbXBsZSBkdXJpbmcgY29weSAmIHBhc3RlKS4KICAgICAgLy8gU3VjaCBvcGVyYXRpb25zIHNob3VsZCBub3QgYmUgcmV2ZXJzZWQuCgogICAgICBpZiAoIW9wZXJhdGlvbi5pc0RvY3VtZW50T3BlcmF0aW9uKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBiYXRjaCA9IG9wZXJhdGlvbi5iYXRjaDsKCiAgICAgIGNvbnN0IGlzUmVkb0JhdGNoID0gdGhpcy5fcmVkb0NvbW1hbmQuX2NyZWF0ZWRCYXRjaGVzLmhhcyhiYXRjaCk7CgogICAgICBjb25zdCBpc1VuZG9CYXRjaCA9IHRoaXMuX3VuZG9Db21tYW5kLl9jcmVhdGVkQmF0Y2hlcy5oYXMoYmF0Y2gpOwoKICAgICAgY29uc3QgaXNSZWdpc3RlcmVkQmF0Y2ggPSB0aGlzLl9iYXRjaFJlZ2lzdHJ5LmhhcyhiYXRjaCk7IC8vIElmIGNoYW5nZXMgYXJlIG5vdCBhIHBhcnQgb2YgYSBiYXRjaCBvciB0aGlzIGlzIG5vdCBhIG5ldyBiYXRjaCwgb21pdCB0aG9zZSBjaGFuZ2VzLgoKCiAgICAgIGlmIChpc1JlZ2lzdGVyZWRCYXRjaCB8fCBiYXRjaC50eXBlID09ICd0cmFuc3BhcmVudCcgJiYgIWlzUmVkb0JhdGNoICYmICFpc1VuZG9CYXRjaCkgewogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoaXNSZWRvQmF0Y2gpIHsKICAgICAgICAgIC8vIElmIHRoaXMgYmF0Y2ggY29tZXMgZnJvbSBgcmVkb0NvbW1hbmRgLCBhZGQgaXQgdG8gYHVuZG9Db21tYW5kYCBzdGFjay4KICAgICAgICAgIHRoaXMuX3VuZG9Db21tYW5kLmFkZEJhdGNoKGJhdGNoKTsKICAgICAgICB9IGVsc2UgaWYgKCFpc1VuZG9CYXRjaCkgewogICAgICAgICAgLy8gQSBkZWZhdWx0IGJhdGNoIC0gdGhlc2UgYXJlIG5ldyBjaGFuZ2VzIGluIHRoZSBkb2N1bWVudCwgbm90IGludHJvZHVjZWQgYnkgdW5kbyBmZWF0dXJlLgogICAgICAgICAgLy8gQWRkIHRoZW0gdG8gYHVuZG9Db21tYW5kYCBzdGFjayBhbmQgY2xlYXIgYHJlZG9Db21tYW5kYCBzdGFjay4KICAgICAgICAgIHRoaXMuX3VuZG9Db21tYW5kLmFkZEJhdGNoKGJhdGNoKTsKCiAgICAgICAgICB0aGlzLl9yZWRvQ29tbWFuZC5jbGVhclN0YWNrKCk7CiAgICAgICAgfQogICAgICB9IC8vIEFkZCB0aGUgYmF0Y2ggdG8gdGhlIHJlZ2lzdHJ5IHNvIGl0IHdpbGwgbm90IGJlIHByb2Nlc3NlZCBhZ2Fpbi4KCgogICAgICB0aGlzLl9iYXRjaFJlZ2lzdHJ5LmFkZChiYXRjaCk7CiAgICB9LCB7CiAgICAgIHByaW9yaXR5OiAnaGlnaGVzdCcKICAgIH0pOwogICAgdGhpcy5saXN0ZW5Ubyh0aGlzLl91bmRvQ29tbWFuZCwgJ3JldmVydCcsIChldnQsIHVuZG9uZUJhdGNoLCB1bmRvaW5nQmF0Y2gpID0+IHsKICAgICAgdGhpcy5fcmVkb0NvbW1hbmQuYWRkQmF0Y2godW5kb2luZ0JhdGNoKTsKICAgIH0pOwogICAgZWRpdG9yLmtleXN0cm9rZXMuc2V0KCdDVFJMK1onLCAndW5kbycpOwogICAgZWRpdG9yLmtleXN0cm9rZXMuc2V0KCdDVFJMK1knLCAncmVkbycpOwogICAgZWRpdG9yLmtleXN0cm9rZXMuc2V0KCdDVFJMK1NISUZUK1onLCAncmVkbycpOwogIH0KCn0="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js"],"names":["Plugin","UndoCommand","RedoCommand","UndoEditing","pluginName","constructor","editor","_batchRegistry","WeakSet","init","_undoCommand","_redoCommand","commands","add","listenTo","model","evt","args","operation","isDocumentOperation","batch","isRedoBatch","_createdBatches","has","isUndoBatch","isRegisteredBatch","type","addBatch","clearStack","priority","undoneBatch","undoingBatch","keystrokes","set"],"mappings":"AAAA;;;;;AAKA;;;AAIA,OAAOA,MAAP,MAAmB,qCAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;;;;;;;;AAOA,eAAe,MAAMC,WAAN,SAA0BH,MAA1B,CAAiC;AAC/C;;;AAGA,aAAWI,UAAX,GAAwB;AACvB,WAAO,aAAP;AACA;AAED;;;;;AAGAC,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB,UAAOA,MAAP;AAEA;;;;;;;;AAQA;;;;;;;;AAQA;;;;;;;AAMA,SAAKC,cAAL,GAAsB,IAAIC,OAAJ,EAAtB;AACA;AAED;;;;;AAGAC,EAAAA,IAAI,GAAG;AACN,UAAMH,MAAM,GAAG,KAAKA,MAApB,CADM,CAGN;;AACA,SAAKI,YAAL,GAAoB,IAAIT,WAAJ,CAAiBK,MAAjB,CAApB;AACA,SAAKK,YAAL,GAAoB,IAAIT,WAAJ,CAAiBI,MAAjB,CAApB,CALM,CAON;;AACAA,IAAAA,MAAM,CAACM,QAAP,CAAgBC,GAAhB,CAAqB,MAArB,EAA6B,KAAKH,YAAlC;AACAJ,IAAAA,MAAM,CAACM,QAAP,CAAgBC,GAAhB,CAAqB,MAArB,EAA6B,KAAKF,YAAlC;AAEA,SAAKG,QAAL,CAAeR,MAAM,CAACS,KAAtB,EAA6B,gBAA7B,EAA+C,CAAEC,GAAF,EAAOC,IAAP,KAAiB;AAC/D,YAAMC,SAAS,GAAGD,IAAI,CAAE,CAAF,CAAtB,CAD+D,CAG/D;AACA;AACA;AACA;AACA;;AACA,UAAK,CAACC,SAAS,CAACC,mBAAhB,EAAsC;AACrC;AACA;;AAED,YAAMC,KAAK,GAAGF,SAAS,CAACE,KAAxB;;AAEA,YAAMC,WAAW,GAAG,KAAKV,YAAL,CAAkBW,eAAlB,CAAkCC,GAAlC,CAAuCH,KAAvC,CAApB;;AACA,YAAMI,WAAW,GAAG,KAAKd,YAAL,CAAkBY,eAAlB,CAAkCC,GAAlC,CAAuCH,KAAvC,CAApB;;AACA,YAAMK,iBAAiB,GAAG,KAAKlB,cAAL,CAAoBgB,GAApB,CAAyBH,KAAzB,CAA1B,CAhB+D,CAkB/D;;;AACA,UAAKK,iBAAiB,IAAML,KAAK,CAACM,IAAN,IAAc,aAAd,IAA+B,CAACL,WAAhC,IAA+C,CAACG,WAA5E,EAA4F;AAC3F;AACA,OAFD,MAEO;AACN,YAAKH,WAAL,EAAmB;AAClB;AACA,eAAKX,YAAL,CAAkBiB,QAAlB,CAA4BP,KAA5B;AACA,SAHD,MAGO,IAAK,CAACI,WAAN,EAAoB;AAC1B;AACA;AACA,eAAKd,YAAL,CAAkBiB,QAAlB,CAA4BP,KAA5B;;AACA,eAAKT,YAAL,CAAkBiB,UAAlB;AACA;AACD,OA/B8D,CAiC/D;;;AACA,WAAKrB,cAAL,CAAoBM,GAApB,CAAyBO,KAAzB;AACA,KAnCD,EAmCG;AAAES,MAAAA,QAAQ,EAAE;AAAZ,KAnCH;AAqCA,SAAKf,QAAL,CAAe,KAAKJ,YAApB,EAAkC,QAAlC,EAA4C,CAAEM,GAAF,EAAOc,WAAP,EAAoBC,YAApB,KAAsC;AACjF,WAAKpB,YAAL,CAAkBgB,QAAlB,CAA4BI,YAA5B;AACA,KAFD;AAIAzB,IAAAA,MAAM,CAAC0B,UAAP,CAAkBC,GAAlB,CAAuB,QAAvB,EAAiC,MAAjC;AACA3B,IAAAA,MAAM,CAAC0B,UAAP,CAAkBC,GAAlB,CAAuB,QAAvB,EAAiC,MAAjC;AACA3B,IAAAA,MAAM,CAAC0B,UAAP,CAAkBC,GAAlB,CAAuB,cAAvB,EAAuC,MAAvC;AACA;;AAjG8C","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoCommand from './undocommand';\nimport RedoCommand from './redocommand';\n\n/**\n * The undo engine feature.\n *\n * It introduces the `'undo'` and `'redo'` commands to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class UndoEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'UndoEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_undoCommand\n\t\t */\n\n\t\t/**\n\t\t * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n\t\t * Created and registered during the {@link #init feature initialization}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:undo/undocommand~UndoCommand} #_redoCommand\n\t\t */\n\n\t\t/**\n\t\t * Keeps track of which batches were registered in undo.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<module:engine/model/batch~Batch>}\n\t\t */\n\t\tthis._batchRegistry = new WeakSet();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Create commands.\n\t\tthis._undoCommand = new UndoCommand( editor );\n\t\tthis._redoCommand = new RedoCommand( editor );\n\n\t\t// Register command to the editor.\n\t\teditor.commands.add( 'undo', this._undoCommand );\n\t\teditor.commands.add( 'redo', this._redoCommand );\n\n\t\tthis.listenTo( editor.model, 'applyOperation', ( evt, args ) => {\n\t\t\tconst operation = args[ 0 ];\n\n\t\t\t// Do not register batch if the operation is not a document operation.\n\t\t\t// This prevents from creating empty undo steps, where all operations where non-document operations.\n\t\t\t// Non-document operations creates and alters content in detached tree fragments (for example, document fragments).\n\t\t\t// Most of time this is preparing data before it is inserted into actual tree (for example during copy & paste).\n\t\t\t// Such operations should not be reversed.\n\t\t\tif ( !operation.isDocumentOperation ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst batch = operation.batch;\n\n\t\t\tconst isRedoBatch = this._redoCommand._createdBatches.has( batch );\n\t\t\tconst isUndoBatch = this._undoCommand._createdBatches.has( batch );\n\t\t\tconst isRegisteredBatch = this._batchRegistry.has( batch );\n\n\t\t\t// If changes are not a part of a batch or this is not a new batch, omit those changes.\n\t\t\tif ( isRegisteredBatch || ( batch.type == 'transparent' && !isRedoBatch && !isUndoBatch ) ) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif ( isRedoBatch ) {\n\t\t\t\t\t// If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t} else if ( !isUndoBatch ) {\n\t\t\t\t\t// A default batch - these are new changes in the document, not introduced by undo feature.\n\t\t\t\t\t// Add them to `undoCommand` stack and clear `redoCommand` stack.\n\t\t\t\t\tthis._undoCommand.addBatch( batch );\n\t\t\t\t\tthis._redoCommand.clearStack();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the batch to the registry so it will not be processed again.\n\t\t\tthis._batchRegistry.add( batch );\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo( this._undoCommand, 'revert', ( evt, undoneBatch, undoingBatch ) => {\n\t\t\tthis._redoCommand.addBatch( undoingBatch );\n\t\t} );\n\n\t\teditor.keystrokes.set( 'CTRL+Z', 'undo' );\n\t\teditor.keystrokes.set( 'CTRL+Y', 'redo' );\n\t\teditor.keystrokes.set( 'CTRL+SHIFT+Z', 'redo' );\n\t}\n}\n"]}]}