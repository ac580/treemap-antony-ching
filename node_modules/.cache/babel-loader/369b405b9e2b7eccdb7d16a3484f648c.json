{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-media-embed/src/automediaembed.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-media-embed/src/automediaembed.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIG1lZGlhLWVtYmVkL2F1dG9tZWRpYWVtYmVkCiAqLwppbXBvcnQgTWVkaWFFbWJlZEVkaXRpbmcgZnJvbSAnLi9tZWRpYWVtYmVkZWRpdGluZyc7CmltcG9ydCBQbHVnaW4gZnJvbSAnQGNrZWRpdG9yL2NrZWRpdG9yNS1jb3JlL3NyYy9wbHVnaW4nOwppbXBvcnQgQ2xpcGJvYXJkIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtY2xpcGJvYXJkL3NyYy9jbGlwYm9hcmQnOwppbXBvcnQgTGl2ZVJhbmdlIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtZW5naW5lL3NyYy9tb2RlbC9saXZlcmFuZ2UnOwppbXBvcnQgTGl2ZVBvc2l0aW9uIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtZW5naW5lL3NyYy9tb2RlbC9saXZlcG9zaXRpb24nOwppbXBvcnQgVW5kbyBmcm9tICdAY2tlZGl0b3IvY2tlZGl0b3I1LXVuZG8vc3JjL3VuZG8nOwppbXBvcnQgZ2xvYmFsIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2RvbS9nbG9iYWwnOwppbXBvcnQgeyBpbnNlcnRNZWRpYSB9IGZyb20gJy4vdXRpbHMnOwpjb25zdCBVUkxfUkVHRVhQID0gL14oPzpodHRwKHMpPzpcL1wvKT9bXHcuLV0rKD86XC5bXHcuLV0rKStbXHdcLS5ffjovPyNbXF1AISQmJygpKissOz1dKyQvOwovKioKICogVGhlIGF1dG8tbWVkaWEgZW1iZWQgcGx1Z2luLiBJdCByZWNvZ25pemVzIG1lZGlhIGxpbmtzIGluIHRoZSBwYXN0ZWQgY29udGVudCBhbmQgZW1iZWRzCiAqIHRoZW0gc2hvcnRseSBhZnRlciB0aGV5IGFyZSBpbmplY3RlZCBpbnRvIHRoZSBkb2N1bWVudC4KICoKICogQGV4dGVuZHMgbW9kdWxlOmNvcmUvcGx1Z2luflBsdWdpbgogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIEF1dG9NZWRpYUVtYmVkIGV4dGVuZHMgUGx1Z2luIHsKICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwogIHN0YXRpYyBnZXQgcmVxdWlyZXMoKSB7CiAgICByZXR1cm4gW0NsaXBib2FyZCwgVW5kb107CiAgfQogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCgoKICBzdGF0aWMgZ2V0IHBsdWdpbk5hbWUoKSB7CiAgICByZXR1cm4gJ0F1dG9NZWRpYUVtYmVkJzsKICB9CiAgLyoqCiAgICogQGluaGVyaXREb2MKICAgKi8KCgogIGNvbnN0cnVjdG9yKGVkaXRvcikgewogICAgc3VwZXIoZWRpdG9yKTsKICAgIC8qKgogICAgICogVGhlIHBhc3Rl4oCTdG/igJNlbWJlZCBgc2V0VGltZW91dGAgSUQuIFN0b3JlZCBhcyBhIHByb3BlcnR5IHRvIGFsbG93CiAgICAgKiBjbGVhbmluZyBvZiB0aGUgdGltZW91dC4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQG1lbWJlciB7TnVtYmVyfSAjX3RpbWVvdXRJZAogICAgICovCgogICAgdGhpcy5fdGltZW91dElkID0gbnVsbDsKICAgIC8qKgogICAgICogVGhlIHBvc2l0aW9uIHdoZXJlIHRoZSBgPG1lZGlhPmAgZWxlbWVudCB3aWxsIGJlIGluc2VydGVkIGFmdGVyIHRoZSB0aW1lb3V0LAogICAgICogZGV0ZXJtaW5lZCBlYWNoIHRpbWUgdGhlIG5ldyBjb250ZW50IGlzIHBhc3RlZCBpbnRvIHRoZSBkb2N1bWVudC4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQG1lbWJlciB7bW9kdWxlOmVuZ2luZS9tb2RlbC9saXZlcG9zaXRpb25+TGl2ZVBvc2l0aW9ufSAjX3Bvc2l0aW9uVG9JbnNlcnQKICAgICAqLwoKICAgIHRoaXMuX3Bvc2l0aW9uVG9JbnNlcnQgPSBudWxsOwogIH0KICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwoKCiAgaW5pdCgpIHsKICAgIGNvbnN0IGVkaXRvciA9IHRoaXMuZWRpdG9yOwogICAgY29uc3QgbW9kZWxEb2N1bWVudCA9IGVkaXRvci5tb2RlbC5kb2N1bWVudDsgLy8gV2UgbmVlZCB0byBsaXN0ZW4gb24gYENsaXBib2FyZCNpbnB1dFRyYW5zZm9ybWF0aW9uYCBiZWNhdXNlIHdlIG5lZWQgdG8gc2F2ZSBwb3NpdGlvbnMgb2Ygc2VsZWN0aW9uLgogICAgLy8gQWZ0ZXIgcGFzdGluZywgdGhlIGNvbnRlbnQgYmV0d2VlbiB0aG9zZSBwb3NpdGlvbnMgd2lsbCBiZSBjaGVja2VkIGZvciBhIFVSTCB0aGF0IGNvdWxkIGJlIHRyYW5zZm9ybWVkCiAgICAvLyBpbnRvIG1lZGlhLgoKICAgIHRoaXMubGlzdGVuVG8oZWRpdG9yLnBsdWdpbnMuZ2V0KENsaXBib2FyZCksICdpbnB1dFRyYW5zZm9ybWF0aW9uJywgKCkgPT4gewogICAgICBjb25zdCBmaXJzdFJhbmdlID0gbW9kZWxEb2N1bWVudC5zZWxlY3Rpb24uZ2V0Rmlyc3RSYW5nZSgpOwogICAgICBjb25zdCBsZWZ0TGl2ZVBvc2l0aW9uID0gTGl2ZVBvc2l0aW9uLmZyb21Qb3NpdGlvbihmaXJzdFJhbmdlLnN0YXJ0KTsKICAgICAgbGVmdExpdmVQb3NpdGlvbi5zdGlja2luZXNzID0gJ3RvUHJldmlvdXMnOwogICAgICBjb25zdCByaWdodExpdmVQb3NpdGlvbiA9IExpdmVQb3NpdGlvbi5mcm9tUG9zaXRpb24oZmlyc3RSYW5nZS5lbmQpOwogICAgICByaWdodExpdmVQb3NpdGlvbi5zdGlja2luZXNzID0gJ3RvTmV4dCc7CiAgICAgIG1vZGVsRG9jdW1lbnQub25jZSgnY2hhbmdlOmRhdGEnLCAoKSA9PiB7CiAgICAgICAgdGhpcy5fZW1iZWRNZWRpYUJldHdlZW5Qb3NpdGlvbnMobGVmdExpdmVQb3NpdGlvbiwgcmlnaHRMaXZlUG9zaXRpb24pOwoKICAgICAgICBsZWZ0TGl2ZVBvc2l0aW9uLmRldGFjaCgpOwogICAgICAgIHJpZ2h0TGl2ZVBvc2l0aW9uLmRldGFjaCgpOwogICAgICB9LCB7CiAgICAgICAgcHJpb3JpdHk6ICdoaWdoJwogICAgICB9KTsKICAgIH0pOwogICAgZWRpdG9yLmNvbW1hbmRzLmdldCgndW5kbycpLm9uKCdleGVjdXRlJywgKCkgPT4gewogICAgICBpZiAodGhpcy5fdGltZW91dElkKSB7CiAgICAgICAgZ2xvYmFsLndpbmRvdy5jbGVhclRpbWVvdXQodGhpcy5fdGltZW91dElkKTsKCiAgICAgICAgdGhpcy5fcG9zaXRpb25Ub0luc2VydC5kZXRhY2goKTsKCiAgICAgICAgdGhpcy5fdGltZW91dElkID0gbnVsbDsKICAgICAgICB0aGlzLl9wb3NpdGlvblRvSW5zZXJ0ID0gbnVsbDsKICAgICAgfQogICAgfSwgewogICAgICBwcmlvcml0eTogJ2hpZ2gnCiAgICB9KTsKICB9CiAgLyoqCiAgICogQW5hbHl6ZXMgdGhlIHBhcnQgb2YgdGhlIGRvY3VtZW50IGJldHdlZW4gcHJvdmlkZWQgcG9zaXRpb25zIGluIHNlYXJjaCBmb3IgYSBVUkwgcmVwcmVzZW50aW5nIG1lZGlhLgogICAqIFdoZW4gdGhlIFVSTCBpcyBmb3VuZCwgaXQgaXMgYXV0b21hdGljYWxseSBjb252ZXJ0ZWQgaW50byBtZWRpYS4KICAgKgogICAqIEBwcm90ZWN0ZWQKICAgKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvbGl2ZXBvc2l0aW9ufkxpdmVQb3NpdGlvbn0gbGVmdFBvc2l0aW9uIExlZnQgcG9zaXRpb24gb2YgdGhlIHNlbGVjdGlvbi4KICAgKiBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvbGl2ZXBvc2l0aW9ufkxpdmVQb3NpdGlvbn0gcmlnaHRQb3NpdGlvbiBSaWdodCBwb3NpdGlvbiBvZiB0aGUgc2VsZWN0aW9uLgogICAqLwoKCiAgX2VtYmVkTWVkaWFCZXR3ZWVuUG9zaXRpb25zKGxlZnRQb3NpdGlvbiwgcmlnaHRQb3NpdGlvbikgewogICAgY29uc3QgZWRpdG9yID0gdGhpcy5lZGl0b3I7CiAgICBjb25zdCBtZWRpYVJlZ2lzdHJ5ID0gZWRpdG9yLnBsdWdpbnMuZ2V0KE1lZGlhRW1iZWRFZGl0aW5nKS5yZWdpc3RyeTsgLy8gVE9ETzogVXNlIG1hcmtlciBpbnN0ZWFkIG9mIExpdmVSYW5nZSAmIExpdmVQb3NpdGlvbnMuCgogICAgY29uc3QgdXJsUmFuZ2UgPSBuZXcgTGl2ZVJhbmdlKGxlZnRQb3NpdGlvbiwgcmlnaHRQb3NpdGlvbik7CiAgICBjb25zdCB3YWxrZXIgPSB1cmxSYW5nZS5nZXRXYWxrZXIoewogICAgICBpZ25vcmVFbGVtZW50RW5kOiB0cnVlCiAgICB9KTsKICAgIGxldCB1cmwgPSAnJzsKCiAgICBmb3IgKGNvbnN0IG5vZGUgb2Ygd2Fsa2VyKSB7CiAgICAgIGlmIChub2RlLml0ZW0uaXMoJ3RleHRQcm94eScpKSB7CiAgICAgICAgdXJsICs9IG5vZGUuaXRlbS5kYXRhOwogICAgICB9CiAgICB9CgogICAgdXJsID0gdXJsLnRyaW0oKTsgLy8gSWYgdGhlIFVSTCBkb2VzIG5vdCBtYXRjaCB0byB1bml2ZXJzYWwgVVJMIHJlZ2V4cCwgbGV0J3Mgc2tpcCB0aGF0LgoKICAgIGlmICghdXJsLm1hdGNoKFVSTF9SRUdFWFApKSB7CiAgICAgIHJldHVybjsKICAgIH0gLy8gSWYgdGhlIFVSTCByZXByZXNlbnRzIGEgbWVkaWEsIGxldCdzIHVzZSBpdC4KCgogICAgaWYgKCFtZWRpYVJlZ2lzdHJ5Lmhhc01lZGlhKHVybCkpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGNvbnN0IG1lZGlhRW1iZWRDb21tYW5kID0gZWRpdG9yLmNvbW1hbmRzLmdldCgnbWVkaWFFbWJlZCcpOyAvLyBEbyBub3QgYW55dGhpbmcgaWYgbWVkaWEgZWxlbWVudCBjYW5ub3QgYmUgaW5zZXJ0ZWQgYXQgdGhlIGN1cnJlbnQgcG9zaXRpb24gKCM0NykuCgogICAgaWYgKCFtZWRpYUVtYmVkQ29tbWFuZC5pc0VuYWJsZWQpIHsKICAgICAgcmV0dXJuOwogICAgfSAvLyBQb3NpdGlvbiB3b24ndCBiZSBhdmFpbGFibGUgaW4gdGhlIGBzZXRUaW1lb3V0YCBmdW5jdGlvbiBzbyBsZXQncyBjbG9uZSBpdC4KCgogICAgdGhpcy5fcG9zaXRpb25Ub0luc2VydCA9IExpdmVQb3NpdGlvbi5mcm9tUG9zaXRpb24obGVmdFBvc2l0aW9uKTsgLy8gVGhpcyBhY3Rpb24gbXVzdG4ndCBiZSBleGVjdXRlZCBpZiB1bmRvIHdhcyBjYWxsZWQgYmV0d2VlbiBwYXN0aW5nIGFuZCBhdXRvLWVtYmVkZGluZy4KCiAgICB0aGlzLl90aW1lb3V0SWQgPSBnbG9iYWwud2luZG93LnNldFRpbWVvdXQoKCkgPT4gewogICAgICBlZGl0b3IubW9kZWwuY2hhbmdlKHdyaXRlciA9PiB7CiAgICAgICAgdGhpcy5fdGltZW91dElkID0gbnVsbDsKICAgICAgICB3cml0ZXIucmVtb3ZlKHVybFJhbmdlKTsKICAgICAgICBsZXQgaW5zZXJ0aW9uUG9zaXRpb247IC8vIENoZWNrIGlmIHBvc2l0aW9uIHdoZXJlIHRoZSBtZWRpYSBlbGVtZW50IHNob3VsZCBiZSBpbnNlcnRlZCBpcyBzdGlsbCB2YWxpZC4KICAgICAgICAvLyBPdGhlcndpc2UgbGVhdmUgaXQgYXMgdW5kZWZpbmVkIHRvIHVzZSBkb2N1bWVudC5zZWxlY3Rpb24gLSBkZWZhdWx0IGJlaGF2aW9yIG9mIG1vZGVsLmluc2VydENvbnRlbnQoKS4KCiAgICAgICAgaWYgKHRoaXMuX3Bvc2l0aW9uVG9JbnNlcnQucm9vdC5yb290TmFtZSAhPT0gJyRncmF2ZXlhcmQnKSB7CiAgICAgICAgICBpbnNlcnRpb25Qb3NpdGlvbiA9IHRoaXMuX3Bvc2l0aW9uVG9JbnNlcnQ7CiAgICAgICAgfQoKICAgICAgICBpbnNlcnRNZWRpYShlZGl0b3IubW9kZWwsIHVybCwgaW5zZXJ0aW9uUG9zaXRpb24pOwoKICAgICAgICB0aGlzLl9wb3NpdGlvblRvSW5zZXJ0LmRldGFjaCgpOwoKICAgICAgICB0aGlzLl9wb3NpdGlvblRvSW5zZXJ0ID0gbnVsbDsKICAgICAgfSk7CiAgICB9LCAxMDApOwogIH0KCn0="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-media-embed/src/automediaembed.js"],"names":["MediaEmbedEditing","Plugin","Clipboard","LiveRange","LivePosition","Undo","global","insertMedia","URL_REGEXP","AutoMediaEmbed","requires","pluginName","constructor","editor","_timeoutId","_positionToInsert","init","modelDocument","model","document","listenTo","plugins","get","firstRange","selection","getFirstRange","leftLivePosition","fromPosition","start","stickiness","rightLivePosition","end","once","_embedMediaBetweenPositions","detach","priority","commands","on","window","clearTimeout","leftPosition","rightPosition","mediaRegistry","registry","urlRange","walker","getWalker","ignoreElementEnd","url","node","item","is","data","trim","match","hasMedia","mediaEmbedCommand","isEnabled","setTimeout","change","writer","remove","insertionPosition","root","rootName"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/automediaembed\n */\n\nimport MediaEmbedEditing from './mediaembedediting';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport LiveRange from '@ckeditor/ckeditor5-engine/src/model/liverange';\nimport LivePosition from '@ckeditor/ckeditor5-engine/src/model/liveposition';\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { insertMedia } from './utils';\n\nconst URL_REGEXP = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w.-]+)+[\\w\\-._~:/?#[\\]@!$&'()*+,;=]+$/;\n\n/**\n * The auto-media embed plugin. It recognizes media links in the pasted content and embeds\n * them shortly after they are injected into the document.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class AutoMediaEmbed extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Clipboard, Undo ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'AutoMediaEmbed';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The paste–to–embed `setTimeout` ID. Stored as a property to allow\n\t\t * cleaning of the timeout.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_timeoutId\n\t\t */\n\t\tthis._timeoutId = null;\n\n\t\t/**\n\t\t * The position where the `<media>` element will be inserted after the timeout,\n\t\t * determined each time the new content is pasted into the document.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/model/liveposition~LivePosition} #_positionToInsert\n\t\t */\n\t\tthis._positionToInsert = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst modelDocument = editor.model.document;\n\n\t\t// We need to listen on `Clipboard#inputTransformation` because we need to save positions of selection.\n\t\t// After pasting, the content between those positions will be checked for a URL that could be transformed\n\t\t// into media.\n\t\tthis.listenTo( editor.plugins.get( Clipboard ), 'inputTransformation', () => {\n\t\t\tconst firstRange = modelDocument.selection.getFirstRange();\n\n\t\t\tconst leftLivePosition = LivePosition.fromPosition( firstRange.start );\n\t\t\tleftLivePosition.stickiness = 'toPrevious';\n\n\t\t\tconst rightLivePosition = LivePosition.fromPosition( firstRange.end );\n\t\t\trightLivePosition.stickiness = 'toNext';\n\n\t\t\tmodelDocument.once( 'change:data', () => {\n\t\t\t\tthis._embedMediaBetweenPositions( leftLivePosition, rightLivePosition );\n\n\t\t\t\tleftLivePosition.detach();\n\t\t\t\trightLivePosition.detach();\n\t\t\t}, { priority: 'high' } );\n\t\t} );\n\n\t\teditor.commands.get( 'undo' ).on( 'execute', () => {\n\t\t\tif ( this._timeoutId ) {\n\t\t\t\tglobal.window.clearTimeout( this._timeoutId );\n\t\t\t\tthis._positionToInsert.detach();\n\n\t\t\t\tthis._timeoutId = null;\n\t\t\t\tthis._positionToInsert = null;\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Analyzes the part of the document between provided positions in search for a URL representing media.\n\t * When the URL is found, it is automatically converted into media.\n\t *\n\t * @protected\n\t * @param {module:engine/model/liveposition~LivePosition} leftPosition Left position of the selection.\n\t * @param {module:engine/model/liveposition~LivePosition} rightPosition Right position of the selection.\n\t */\n\t_embedMediaBetweenPositions( leftPosition, rightPosition ) {\n\t\tconst editor = this.editor;\n\t\tconst mediaRegistry = editor.plugins.get( MediaEmbedEditing ).registry;\n\t\t// TODO: Use marker instead of LiveRange & LivePositions.\n\t\tconst urlRange = new LiveRange( leftPosition, rightPosition );\n\t\tconst walker = urlRange.getWalker( { ignoreElementEnd: true } );\n\n\t\tlet url = '';\n\n\t\tfor ( const node of walker ) {\n\t\t\tif ( node.item.is( 'textProxy' ) ) {\n\t\t\t\turl += node.item.data;\n\t\t\t}\n\t\t}\n\n\t\turl = url.trim();\n\n\t\t// If the URL does not match to universal URL regexp, let's skip that.\n\t\tif ( !url.match( URL_REGEXP ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the URL represents a media, let's use it.\n\t\tif ( !mediaRegistry.hasMedia( url ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst mediaEmbedCommand = editor.commands.get( 'mediaEmbed' );\n\n\t\t// Do not anything if media element cannot be inserted at the current position (#47).\n\t\tif ( !mediaEmbedCommand.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Position won't be available in the `setTimeout` function so let's clone it.\n\t\tthis._positionToInsert = LivePosition.fromPosition( leftPosition );\n\n\t\t// This action mustn't be executed if undo was called between pasting and auto-embedding.\n\t\tthis._timeoutId = global.window.setTimeout( () => {\n\t\t\teditor.model.change( writer => {\n\t\t\t\tthis._timeoutId = null;\n\n\t\t\t\twriter.remove( urlRange );\n\n\t\t\t\tlet insertionPosition;\n\n\t\t\t\t// Check if position where the media element should be inserted is still valid.\n\t\t\t\t// Otherwise leave it as undefined to use document.selection - default behavior of model.insertContent().\n\t\t\t\tif ( this._positionToInsert.root.rootName !== '$graveyard' ) {\n\t\t\t\t\tinsertionPosition = this._positionToInsert;\n\t\t\t\t}\n\n\t\t\t\tinsertMedia( editor.model, url, insertionPosition );\n\n\t\t\t\tthis._positionToInsert.detach();\n\t\t\t\tthis._positionToInsert = null;\n\t\t\t} );\n\t\t}, 100 );\n\t}\n}\n"]}]}