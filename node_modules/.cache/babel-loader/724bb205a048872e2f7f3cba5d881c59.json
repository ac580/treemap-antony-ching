{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-utils/src/mix.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-utils/src/mix.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHV0aWxzL21peAogKi8KCi8qKgogKiBDb3BpZXMgZW51bWVyYWJsZSBwcm9wZXJ0aWVzIGFuZCBzeW1ib2xzIGZyb20gdGhlIG9iamVjdHMgZ2l2ZW4gYXMgMm5kKyBwYXJhbWV0ZXJzIHRvIHRoZQogKiBwcm90b3R5cGUgb2YgZmlyc3Qgb2JqZWN0IChhIGNvbnN0cnVjdG9yKS4KICoKICoJCWNsYXNzIEVkaXRvciB7CiAqCQkJLi4uCiAqCQl9CiAqCiAqCQljb25zdCBTb21lTWl4aW4gPSB7CiAqCQkJYSgpIHsKICoJCQkJcmV0dXJuICdhJzsKICoJCQl9CiAqCQl9OwogKgogKgkJbWl4KCBFZGl0b3IsIFNvbWVNaXhpbiwgLi4uICk7CiAqCiAqCQluZXcgRWRpdG9yKCkuYSgpOyAvLyAtPiAnYScKICoKICogTm90ZTogUHJvcGVydGllcyB3aGljaCBhbHJlYWR5IGV4aXN0IGluIHRoZSBiYXNlIGNsYXNzIHdpbGwgbm90IGJlIG92ZXJyaWRlbi4KICoKICogQHBhcmFtIHtGdW5jdGlvbn0gW2Jhc2VDbGFzc10gQ2xhc3Mgd2hpY2ggcHJvdG90eXBlIHdpbGwgYmUgZXh0ZW5kZWQuCiAqIEBwYXJhbSB7T2JqZWN0fSBbLi4ubWl4aW5zXSBPYmplY3RzIGZyb20gd2hpY2ggdG8gZ2V0IHByb3BlcnRpZXMuCiAqLwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtaXgoYmFzZUNsYXNzLCAuLi5taXhpbnMpIHsKICBtaXhpbnMuZm9yRWFjaChtaXhpbiA9PiB7CiAgICBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhtaXhpbikuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMobWl4aW4pKS5mb3JFYWNoKGtleSA9PiB7CiAgICAgIGlmIChrZXkgaW4gYmFzZUNsYXNzLnByb3RvdHlwZSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3Qgc291cmNlRGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobWl4aW4sIGtleSk7CiAgICAgIHNvdXJjZURlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGZhbHNlOwogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYmFzZUNsYXNzLnByb3RvdHlwZSwga2V5LCBzb3VyY2VEZXNjcmlwdG9yKTsKICAgIH0pOwogIH0pOwp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-utils/src/mix.js"],"names":["mix","baseClass","mixins","forEach","mixin","Object","getOwnPropertyNames","concat","getOwnPropertySymbols","key","prototype","sourceDescriptor","getOwnPropertyDescriptor","enumerable","defineProperty"],"mappings":"AAAA;;;;;AAKA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAe,SAASA,GAAT,CAAcC,SAAd,EAAyB,GAAGC,MAA5B,EAAqC;AACnDA,EAAAA,MAAM,CAACC,OAAP,CAAgBC,KAAK,IAAI;AACxBC,IAAAA,MAAM,CAACC,mBAAP,CAA4BF,KAA5B,EAAoCG,MAApC,CAA4CF,MAAM,CAACG,qBAAP,CAA8BJ,KAA9B,CAA5C,EACED,OADF,CACWM,GAAG,IAAI;AAChB,UAAKA,GAAG,IAAIR,SAAS,CAACS,SAAtB,EAAkC;AACjC;AACA;;AAED,YAAMC,gBAAgB,GAAGN,MAAM,CAACO,wBAAP,CAAiCR,KAAjC,EAAwCK,GAAxC,CAAzB;AACAE,MAAAA,gBAAgB,CAACE,UAAjB,GAA8B,KAA9B;AAEAR,MAAAA,MAAM,CAACS,cAAP,CAAuBb,SAAS,CAACS,SAAjC,EAA4CD,GAA5C,EAAiDE,gBAAjD;AACA,KAVF;AAWA,GAZD;AAaA","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix( baseClass, ...mixins ) {\n\tmixins.forEach( mixin => {\n\t\tObject.getOwnPropertyNames( mixin ).concat( Object.getOwnPropertySymbols( mixin ) )\n\t\t\t.forEach( key => {\n\t\t\t\tif ( key in baseClass.prototype ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sourceDescriptor = Object.getOwnPropertyDescriptor( mixin, key );\n\t\t\t\tsourceDescriptor.enumerable = false;\n\n\t\t\t\tObject.defineProperty( baseClass.prototype, key, sourceDescriptor );\n\t\t\t} );\n\t} );\n}\n"]}]}