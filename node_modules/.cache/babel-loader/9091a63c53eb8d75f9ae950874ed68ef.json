{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/ui/colortableview.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/ui/colortableview.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-font/src/ui/colortableview.js"],"names":["View","ButtonView","ColorTileView","ColorGridView","LabelView","DocumentColorCollection","Template","FocusTracker","FocusCycler","KeystrokeHandler","removeButtonIcon","ColorTableView","constructor","locale","colors","columns","removeButtonLabel","documentColorsLabel","documentColorsCount","items","createCollection","colorDefinitions","focusTracker","keystrokes","set","documentColors","staticColorsGrid","_createStaticColorsGrid","documentColorsGrid","_focusCycler","focusables","keystrokeHandler","actions","focusPrevious","focusNext","setTemplate","tag","attributes","class","children","add","_removeColorButton","bind","label","text","extendTemplate","if","_createDocumentColorsGrid","updateDocumentColors","model","attributeName","document","maxCount","clear","rootName","getRootNames","root","getRoot","range","createRangeIn","node","getItems","is","hasAttribute","_addColorToDocumentColors","getAttribute","length","updateSelectedColors","selectedColor","render","item","element","listenTo","focus","focusFirst","focusLast","buttonView","withText","icon","tooltip","on","fire","value","colorGrid","delegate","to","bindTo","using","colorObj","colorTile","color","hasBorder","options","evt","name","val","predefinedColor","find","definition","Object","assign"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/ui/colortableview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport ColorTileView from '@ckeditor/ckeditor5-ui/src/colorgrid/colortileview';\nimport ColorGridView from '@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview';\nimport LabelView from '@ckeditor/ckeditor5-ui/src/label/labelview';\nimport DocumentColorCollection from '../documentcolorcollection';\nimport Template from '@ckeditor/ckeditor5-ui/src/template';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport removeButtonIcon from '@ckeditor/ckeditor5-core/theme/icons/eraser.svg';\nimport '../../theme/fontcolor.css';\n\n/**\n * A class which represents a view with the following sub–components:\n *\n * * A remove color button,\n * * A static {@link module:ui/colorgrid/colorgrid~ColorGridView} of colors defined in the configuration,\n * * A dynamic {@link module:ui/colorgrid/colorgrid~ColorGridView} of colors used in the document.\n *\n * @extends module:ui/view~View\n */\nexport default class ColorTableView extends View {\n\t/**\n\t * Creates a view to be inserted as a child of {@link module:ui/dropdown/dropdownview~DropdownView}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {Object} config The configuration object.\n\t * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} config.colors An array with definitions of colors to\n\t * be displayed in the table.\n\t * @param {Number} config.columns The number of columns in the color grid.\n\t * @param {String} config.removeButtonLabel The label of the button responsible for removing the color.\n\t * @param {String} config.documentColorsLabel The label for the section with the document colors.\n\t * @param {String} config.documentColorsCount The number of colors in the document colors section inside the color dropdown.\n\t */\n\tconstructor( locale, { colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount } ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * A collection of the children of the table.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * An array with objects representing colors to be displayed in the grid.\n\t\t *\n\t\t * @type {Arrray.<module:ui/colorgrid/colorgrid~ColorDefinition>}\n\t\t */\n\t\tthis.colorDefinitions = colors;\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Keeps the value of the command associated with the table for the current selection.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.set( 'selectedColor' );\n\n\t\t/**\n\t\t * The label of the button responsible for removing color attributes.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.removeButtonLabel = removeButtonLabel;\n\n\t\t/**\n\t\t * The number of columns in the color grid.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\t\tthis.columns = columns;\n\n\t\t/**\n\t\t * A collection of definitions that store the document colors.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:font/documentcolorcollection~DocumentColorCollection}\n\t\t */\n\t\tthis.documentColors = new DocumentColorCollection();\n\n\t\t/**\n\t\t * The maximum number of colors in the document colors section.\n\t\t * If it equals 0, the document colors section is not added.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Number}\n\t\t */\n\t\tthis.documentColorsCount = documentColorsCount;\n\n\t\t/**\n\t\t * Preserves the reference to {@link module:ui/colorgrid/colorgrid~ColorGridView} used to create\n\t\t * the default (static) color set.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/colorgrid/colorgrid~ColorGridView}\n\t\t */\n\t\tthis.staticColorsGrid = this._createStaticColorsGrid();\n\n\t\t/**\n\t\t * Preserves the reference to {@link module:ui/colorgrid/colorgrid~ColorGridView} used to create\n\t\t * the document colors. It remains undefined if the document colors feature is disabled.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/colorgrid/colorgrid~ColorGridView}\n\t\t */\n\t\tthis.documentColorsGrid;\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the list.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the Arrow Up key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate list items forwards using the Arrow Down key.\n\t\t\t\tfocusNext: 'arrowdown',\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-table'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.items\n\t\t} );\n\n\t\tthis.items.add( this._removeColorButton() );\n\t\tthis.items.add( this.staticColorsGrid );\n\n\t\tif ( documentColorsCount ) {\n\t\t\t// Create a label for document colors.\n\t\t\tconst bind = Template.bind( this.documentColors, this.documentColors );\n\t\t\tconst label = new LabelView( this.locale );\n\n\t\t\tlabel.text = documentColorsLabel;\n\t\t\tlabel.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t'ck-color-grid__label',\n\t\t\t\t\t\tbind.if( 'isEmpty', 'ck-hidden' )\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.items.add( label );\n\n\t\t\tthis.documentColorsGrid = this._createDocumentColorsGrid();\n\t\t\tthis.items.add( this.documentColorsGrid );\n\t\t}\n\t}\n\n\t/**\n\t * Scans through the editor model and searches for text node attributes with the given attribute name.\n\t * Found entries are set as document colors.\n\t *\n\t * All the previously stored document colors will be lost in the process.\n\t *\n\t * @param {module:engine/model/model~Model} model The model used as a source to obtain the document colors.\n\t * @param {String} attributeName Determines the name of the related model's attribute for a given dropdown.\n\t */\n\tupdateDocumentColors( model, attributeName ) {\n\t\tconst document = model.document;\n\t\tconst maxCount = this.documentColorsCount;\n\n\t\tthis.documentColors.clear();\n\n\t\tfor ( const rootName of document.getRootNames() ) {\n\t\t\tconst root = document.getRoot( rootName );\n\t\t\tconst range = model.createRangeIn( root );\n\n\t\t\tfor ( const node of range.getItems() ) {\n\t\t\t\tif ( node.is( 'textProxy' ) && node.hasAttribute( attributeName ) ) {\n\t\t\t\t\tthis._addColorToDocumentColors( node.getAttribute( attributeName ) );\n\n\t\t\t\t\tif ( this.documentColors.length >= maxCount ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Refreshes the state of the selected color in one or both {@link module:ui/colorgrid/colorgrid~ColorGridView}s\n\t * available in the {@link module:font/ui/colortableview~ColorTableView}. It guarantees that the selection will occur only in one\n\t * of them.\n\t */\n\tupdateSelectedColors() {\n\t\tconst documentColorsGrid = this.documentColorsGrid;\n\t\tconst staticColorsGrid = this.staticColorsGrid;\n\t\tconst selectedColor = this.selectedColor;\n\n\t\tstaticColorsGrid.selectedColor = selectedColor;\n\n\t\tif ( documentColorsGrid ) {\n\t\t\tdocumentColorsGrid.selectedColor = selectedColor;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * Focuses the first focusable element in {@link #items}.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable element in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tthis._focusCycler.focusLast();\n\t}\n\n\t/**\n\t * Adds the remove color button as a child of the current view.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_removeColorButton() {\n\t\tconst buttonView = new ButtonView();\n\n\t\tbuttonView.set( {\n\t\t\twithText: true,\n\t\t\ticon: removeButtonIcon,\n\t\t\ttooltip: true,\n\t\t\tlabel: this.removeButtonLabel\n\t\t} );\n\n\t\tbuttonView.class = 'ck-color-table__remove-color';\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tthis.fire( 'execute', { value: null } );\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Creates a static color table grid based on the editor configuration.\n\t *\n\t * @private\n\t * @returns {module:ui/colorgrid/colorgrid~ColorGridView}\n\t */\n\t_createStaticColorsGrid() {\n\t\tconst colorGrid = new ColorGridView( this.locale, {\n\t\t\tcolorDefinitions: this.colorDefinitions,\n\t\t\tcolumns: this.columns\n\t\t} );\n\n\t\tcolorGrid.delegate( 'execute' ).to( this );\n\n\t\treturn colorGrid;\n\t}\n\n\t/**\n\t * Creates the document colors section view and binds it to {@link #documentColors}.\n\t *\n\t * @private\n\t * @returns {module:ui/colorgrid/colorgrid~ColorGridView}\n\t */\n\t_createDocumentColorsGrid() {\n\t\tconst bind = Template.bind( this.documentColors, this.documentColors );\n\t\tconst documentColorsGrid = new ColorGridView( this.locale, {\n\t\t\tcolumns: this.columns\n\t\t} );\n\n\t\tdocumentColorsGrid.delegate( 'execute' ).to( this );\n\n\t\tdocumentColorsGrid.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: bind.if( 'isEmpty', 'ck-hidden' )\n\t\t\t}\n\t\t} );\n\n\t\tdocumentColorsGrid.items.bindTo( this.documentColors ).using(\n\t\t\tcolorObj => {\n\t\t\t\tconst colorTile = new ColorTileView();\n\n\t\t\t\tcolorTile.set( {\n\t\t\t\t\tcolor: colorObj.color,\n\t\t\t\t\thasBorder: colorObj.options && colorObj.options.hasBorder\n\t\t\t\t} );\n\n\t\t\t\tif ( colorObj.label ) {\n\t\t\t\t\tcolorTile.set( {\n\t\t\t\t\t\tlabel: colorObj.label,\n\t\t\t\t\t\ttooltip: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tcolorTile.on( 'execute', () => {\n\t\t\t\t\tthis.fire( 'execute', {\n\t\t\t\t\t\tvalue: colorObj.color\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\t\treturn colorTile;\n\t\t\t}\n\t\t);\n\n\t\t// Selected color should be cleared when document colors became empty.\n\t\tthis.documentColors.on( 'change:isEmpty', ( evt, name, val ) => {\n\t\t\tif ( val ) {\n\t\t\t\tdocumentColorsGrid.selectedColor = null;\n\t\t\t}\n\t\t} );\n\n\t\treturn documentColorsGrid;\n\t}\n\n\t/**\n\t * Adds a given color to the document colors list. If possible, the method will attempt to use\n\t * data from the {@link #colorDefinitions} (label, color options).\n\t *\n\t * @private\n\t * @param {String} color A string that stores the value of the recently applied color.\n\t */\n\t_addColorToDocumentColors( color ) {\n\t\tconst predefinedColor = this.colorDefinitions\n\t\t\t.find( definition => definition.color === color );\n\n\t\tif ( !predefinedColor ) {\n\t\t\tthis.documentColors.add( {\n\t\t\t\tcolor,\n\t\t\t\tlabel: color,\n\t\t\t\toptions: {\n\t\t\t\t\thasBorder: false\n\t\t\t\t}\n\t\t\t} );\n\t\t} else {\n\t\t\tthis.documentColors.add( Object.assign( {}, predefinedColor ) );\n\t\t}\n\t}\n}\n"]}]}