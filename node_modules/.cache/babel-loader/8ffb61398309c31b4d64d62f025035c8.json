{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHVpL2NvbG9yZ3JpZC9jb2xvcmdyaWQKICovCmltcG9ydCBWaWV3IGZyb20gJy4uL3ZpZXcnOwppbXBvcnQgQ29sb3JUaWxlVmlldyBmcm9tICcuL2NvbG9ydGlsZXZpZXcnOwppbXBvcnQgRm9jdXNUcmFja2VyIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2ZvY3VzdHJhY2tlcic7CmltcG9ydCBGb2N1c0N5Y2xlciBmcm9tICcuLi9mb2N1c2N5Y2xlcic7CmltcG9ydCBLZXlzdHJva2VIYW5kbGVyIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtdXRpbHMvc3JjL2tleXN0cm9rZWhhbmRsZXInOwppbXBvcnQgJy4uLy4uL3RoZW1lL2NvbXBvbmVudHMvY29sb3JncmlkL2NvbG9yZ3JpZC5jc3MnOwovKioKICogQSBncmlkIG9mIHtAbGluayBtb2R1bGU6dWkvY29sb3JncmlkL2NvbG9ydGlsZX5Db2xvclRpbGVWaWV3IGNvbG9yIHRpbGVzfS4KICoKICogQGV4dGVuZHMgbW9kdWxlOnVpL3ZpZXd+VmlldwogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbG9yR3JpZFZpZXcgZXh0ZW5kcyBWaWV3IHsKICAvKioKICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIGEgY29sb3IgZ3JpZCBjb250YWluaW5nIHtAbGluayBtb2R1bGU6dWkvY29sb3JncmlkL2NvbG9ydGlsZX5Db2xvclRpbGVWaWV3IHRpbGVzfS4KICAgKgogICAqIEBwYXJhbSB7bW9kdWxlOnV0aWxzL2xvY2FsZX5Mb2NhbGV9IFtsb2NhbGVdIFRoZSBsb2NhbGl6YXRpb24gc2VydmljZXMgaW5zdGFuY2UuCiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMgQ29tcG9uZW50IGNvbmZpZ3VyYXRpb24KICAgKiBAcGFyYW0ge0FycmF5Ljxtb2R1bGU6dWkvY29sb3JncmlkL2NvbG9yZ3JpZH5Db2xvckRlZmluaXRpb24+fSBbb3B0aW9ucy5jb2xvckRlZmluaXRpb25zXSBBcnJheSB3aXRoIGRlZmluaXRpb25zCiAgICogcmVxdWlyZWQgdG8gY3JlYXRlIHRoZSB7QGxpbmsgbW9kdWxlOnVpL2NvbG9yZ3JpZC9jb2xvcnRpbGV+Q29sb3JUaWxlVmlldyB0aWxlc30uCiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMuY29sdW1ucyBBIG51bWJlciBvZiBjb2x1bW5zIHRvIGRpc3BsYXkgdGhlIHRpbGVzLgogICAqLwogIGNvbnN0cnVjdG9yKGxvY2FsZSwgb3B0aW9ucykgewogICAgc3VwZXIobG9jYWxlKTsKICAgIGNvbnN0IGNvbG9yRGVmaW5pdGlvbnMgPSBvcHRpb25zICYmIG9wdGlvbnMuY29sb3JEZWZpbml0aW9ucyB8fCBbXTsKICAgIGNvbnN0IHZpZXdTdHlsZUF0dHJpYnV0ZSA9IHt9OwoKICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMuY29sdW1ucykgewogICAgICB2aWV3U3R5bGVBdHRyaWJ1dGUuZ3JpZFRlbXBsYXRlQ29sdW1ucyA9IGByZXBlYXQoICR7b3B0aW9ucy5jb2x1bW5zfSwgMWZyKWA7CiAgICB9CiAgICAvKioKICAgICAqIFRoZSBjb2xvciBvZiB0aGUgY3VycmVudGx5IHNlbGVjdGVkIGNvbG9yIHRpbGUgaW4ge0BsaW5rICNpdGVtc30uCiAgICAgKgogICAgICogQG9ic2VydmFibGUKICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgKi8KCgogICAgdGhpcy5zZXQoJ3NlbGVjdGVkQ29sb3InKTsKICAgIC8qKgogICAgICogQ29sbGVjdGlvbiBvZiB0aGUgY2hpbGQgdGlsZSB2aWV3cy4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBtZW1iZXIge21vZHVsZTp1aS92aWV3Y29sbGVjdGlvbn5WaWV3Q29sbGVjdGlvbn0KICAgICAqLwoKICAgIHRoaXMuaXRlbXMgPSB0aGlzLmNyZWF0ZUNvbGxlY3Rpb24oKTsKICAgIC8qKgogICAgICogVHJhY2tzIGluZm9ybWF0aW9uIGFib3V0IERPTSBmb2N1cyBpbiB0aGUgZ3JpZC4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBtZW1iZXIge21vZHVsZTp1dGlscy9mb2N1c3RyYWNrZXJ+Rm9jdXNUcmFja2VyfQogICAgICovCgogICAgdGhpcy5mb2N1c1RyYWNrZXIgPSBuZXcgRm9jdXNUcmFja2VyKCk7CiAgICAvKioKICAgICAqIEluc3RhbmNlIG9mIHRoZSB7QGxpbmsgbW9kdWxlOnV0aWxzL2tleXN0cm9rZWhhbmRsZXJ+S2V5c3Ryb2tlSGFuZGxlcn0uCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAbWVtYmVyIHttb2R1bGU6dXRpbHMva2V5c3Ryb2tlaGFuZGxlcn5LZXlzdHJva2VIYW5kbGVyfQogICAgICovCgogICAgdGhpcy5rZXlzdHJva2VzID0gbmV3IEtleXN0cm9rZUhhbmRsZXIoKTsKICAgIC8qKgogICAgICogSGVscHMgY3ljbGluZyBvdmVyIGZvY3VzYWJsZSB7QGxpbmsgI2l0ZW1zfSBpbiB0aGUgZ3JpZC4KICAgICAqCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBwcm90ZWN0ZWQKICAgICAqIEBtZW1iZXIge21vZHVsZTp1aS9mb2N1c2N5Y2xlcn5Gb2N1c0N5Y2xlcn0KICAgICAqLwoKICAgIHRoaXMuX2ZvY3VzQ3ljbGVyID0gbmV3IEZvY3VzQ3ljbGVyKHsKICAgICAgZm9jdXNhYmxlczogdGhpcy5pdGVtcywKICAgICAgZm9jdXNUcmFja2VyOiB0aGlzLmZvY3VzVHJhY2tlciwKICAgICAga2V5c3Ryb2tlSGFuZGxlcjogdGhpcy5rZXlzdHJva2VzLAogICAgICBhY3Rpb25zOiB7CiAgICAgICAgLy8gTmF2aWdhdGUgZ3JpZCBpdGVtcyBiYWNrd2FyZHMgdXNpbmcgdGhlIGFycm93dXAga2V5LgogICAgICAgIGZvY3VzUHJldmlvdXM6ICdhcnJvd2xlZnQnLAogICAgICAgIC8vIE5hdmlnYXRlIGdyaWQgaXRlbXMgZm9yd2FyZHMgdXNpbmcgdGhlIGFycm93ZG93biBrZXkuCiAgICAgICAgZm9jdXNOZXh0OiAnYXJyb3dyaWdodCcKICAgICAgfQogICAgfSk7CiAgICB0aGlzLml0ZW1zLm9uKCdhZGQnLCAoZXZ0LCBjb2xvclRpbGUpID0+IHsKICAgICAgY29sb3JUaWxlLmlzT24gPSBjb2xvclRpbGUuY29sb3IgPT09IHRoaXMuc2VsZWN0ZWRDb2xvcjsKICAgIH0pOwogICAgY29sb3JEZWZpbml0aW9ucy5mb3JFYWNoKGl0ZW0gPT4gewogICAgICBjb25zdCBjb2xvclRpbGUgPSBuZXcgQ29sb3JUaWxlVmlldygpOwogICAgICBjb2xvclRpbGUuc2V0KHsKICAgICAgICBjb2xvcjogaXRlbS5jb2xvciwKICAgICAgICBsYWJlbDogaXRlbS5sYWJlbCwKICAgICAgICB0b29sdGlwOiB0cnVlLAogICAgICAgIGhhc0JvcmRlcjogaXRlbS5vcHRpb25zLmhhc0JvcmRlcgogICAgICB9KTsKICAgICAgY29sb3JUaWxlLm9uKCdleGVjdXRlJywgKCkgPT4gewogICAgICAgIHRoaXMuZmlyZSgnZXhlY3V0ZScsIHsKICAgICAgICAgIHZhbHVlOiBpdGVtLmNvbG9yLAogICAgICAgICAgaGFzQm9yZGVyOiBpdGVtLm9wdGlvbnMuaGFzQm9yZGVyLAogICAgICAgICAgbGFiZWw6IGl0ZW0ubGFiZWwKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHRoaXMuaXRlbXMuYWRkKGNvbG9yVGlsZSk7CiAgICB9KTsKICAgIHRoaXMuc2V0VGVtcGxhdGUoewogICAgICB0YWc6ICdkaXYnLAogICAgICBjaGlsZHJlbjogdGhpcy5pdGVtcywKICAgICAgYXR0cmlidXRlczogewogICAgICAgIGNsYXNzOiBbJ2NrJywgJ2NrLWNvbG9yLWdyaWQnXSwKICAgICAgICBzdHlsZTogdmlld1N0eWxlQXR0cmlidXRlCiAgICAgIH0KICAgIH0pOwogICAgdGhpcy5vbignY2hhbmdlOnNlbGVjdGVkQ29sb3InLCAoZXZ0LCBuYW1lLCBzZWxlY3RlZENvbG9yKSA9PiB7CiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB0aGlzLml0ZW1zKSB7CiAgICAgICAgaXRlbS5pc09uID0gaXRlbS5jb2xvciA9PT0gc2VsZWN0ZWRDb2xvcjsKICAgICAgfQogICAgfSk7CiAgfQogIC8qKgogICAqIEZvY3VzZXMgdGhlIGZpcnN0IGZvY3VzYWJsZSBpbiB7QGxpbmsgI2l0ZW1zfS4KICAgKi8KCgogIGZvY3VzKCkgewogICAgaWYgKHRoaXMuaXRlbXMubGVuZ3RoKSB7CiAgICAgIHRoaXMuaXRlbXMuZmlyc3QuZm9jdXMoKTsKICAgIH0KICB9CiAgLyoqCiAgICogRm9jdXNlcyB0aGUgbGFzdCBmb2N1c2FibGUgaW4ge0BsaW5rICNpdGVtc30uCiAgICovCgoKICBmb2N1c0xhc3QoKSB7CiAgICBpZiAodGhpcy5pdGVtcy5sZW5ndGgpIHsKICAgICAgdGhpcy5pdGVtcy5sYXN0LmZvY3VzKCk7CiAgICB9CiAgfQogIC8qKgogICAqIEBpbmhlcml0RG9jCiAgICovCgoKICByZW5kZXIoKSB7CiAgICBzdXBlci5yZW5kZXIoKTsgLy8gSXRlbXMgYWRkZWQgYmVmb3JlIHJlbmRlcmluZyBzaG91bGQgYmUga25vd24gdG8gdGhlICNmb2N1c1RyYWNrZXIuCgogICAgZm9yIChjb25zdCBpdGVtIG9mIHRoaXMuaXRlbXMpIHsKICAgICAgdGhpcy5mb2N1c1RyYWNrZXIuYWRkKGl0ZW0uZWxlbWVudCk7CiAgICB9CgogICAgdGhpcy5pdGVtcy5vbignYWRkJywgKGV2dCwgaXRlbSkgPT4gewogICAgICB0aGlzLmZvY3VzVHJhY2tlci5hZGQoaXRlbS5lbGVtZW50KTsKICAgIH0pOwogICAgdGhpcy5pdGVtcy5vbigncmVtb3ZlJywgKGV2dCwgaXRlbSkgPT4gewogICAgICB0aGlzLmZvY3VzVHJhY2tlci5yZW1vdmUoaXRlbS5lbGVtZW50KTsKICAgIH0pOyAvLyBTdGFydCBsaXN0ZW5pbmcgZm9yIHRoZSBrZXlzdHJva2VzIGNvbWluZyBmcm9tICNlbGVtZW50LgoKICAgIHRoaXMua2V5c3Ryb2tlcy5saXN0ZW5Ubyh0aGlzLmVsZW1lbnQpOwogIH0KCn0KLyoqCiAqIEEgY29sb3IgZGVmaW5pdGlvbiB1c2VkIHRvIGNyZWF0ZSBhIHtAbGluayBtb2R1bGU6dWkvY29sb3JncmlkL2NvbG9ydGlsZX5Db2xvclRpbGVWaWV3fS4KICoKICoJCXsKICoJCQljb2xvcjogaHNsKDAsIDAlLCA3NSUpLAogKgkJCWxhYmVsOiAnTGlnaHQgR3JleScsCiAqCQkJb3B0aW9uczogewogKgkJCQloYXNCb3JkZXI6IHRydWUKICoJCQl9CiAqCQl9CiAqCiAqIEB0eXBlZGVmIHtPYmplY3R9IG1vZHVsZTp1aS9jb2xvcmdyaWQvY29sb3JncmlkfkNvbG9yRGVmaW5pdGlvbgogKiBAdHlwZSBPYmplY3QKICoKICogQHByb3BlcnR5IHtTdHJpbmd9IGNvbG9yIFN0cmluZyByZXByZXNlbnRpbmcgYSBjb2xvci4KICogSXQgaXMgdXNlZCBhcyB2YWx1ZSBvZiBiYWNrZ3JvdW5kLWNvbG9yIHN0eWxlIGluIHtAbGluayBtb2R1bGU6dWkvY29sb3JncmlkL2NvbG9ydGlsZX5Db2xvclRpbGVWaWV3fS4KICogQHByb3BlcnR5IHtTdHJpbmd9IGxhYmVsIFN0cmluZyB1c2VkIGFzIGxhYmVsIGZvciB7QGxpbmsgbW9kdWxlOnVpL2NvbG9yZ3JpZC9jb2xvcnRpbGV+Q29sb3JUaWxlVmlld30uCiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBvcHRpb25zIEFkZGl0aW9uYWwgb3B0aW9ucyBwYXNzZWQgdG8gY3JlYXRlIGEge0BsaW5rIG1vZHVsZTp1aS9jb2xvcmdyaWQvY29sb3J0aWxlfkNvbG9yVGlsZVZpZXd9LgogKiBAcHJvcGVydHkge0Jvb2xlYW59IG9wdGlvbnMuaGFzQm9yZGVyIEEgZmxhZyB0aGF0IGluZGljYXRlcyBpZiBzcGVjaWFsIGEgQ1NTIGNsYXNzIHNob3VsZCBiZSBhZGRlZAogKiB0byB7QGxpbmsgbW9kdWxlOnVpL2NvbG9yZ3JpZC9jb2xvcnRpbGV+Q29sb3JUaWxlVmlld30sIHdoaWNoIHJlbmRlcnMgYSBib3JkZXIgYXJvdW5kIGl0LgogKi8="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.js"],"names":["View","ColorTileView","FocusTracker","FocusCycler","KeystrokeHandler","ColorGridView","constructor","locale","options","colorDefinitions","viewStyleAttribute","columns","gridTemplateColumns","set","items","createCollection","focusTracker","keystrokes","_focusCycler","focusables","keystrokeHandler","actions","focusPrevious","focusNext","on","evt","colorTile","isOn","color","selectedColor","forEach","item","label","tooltip","hasBorder","fire","value","add","setTemplate","tag","children","attributes","class","style","name","focus","length","first","focusLast","last","render","element","remove","listenTo"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/colorgrid\n */\n\nimport View from '../view';\nimport ColorTileView from './colortileview';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/colorgrid/colorgrid.css';\n\n/**\n * A grid of {@link module:ui/colorgrid/colortile~ColorTileView color tiles}.\n *\n * @extends module:ui/view~View\n */\nexport default class ColorGridView extends View {\n\t/**\n\t * Creates an instance of a color grid containing {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {Object} options Component configuration\n\t * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} [options.colorDefinitions] Array with definitions\n\t * required to create the {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n\t * @param {Number} options.columns A number of columns to display the tiles.\n\t */\n\tconstructor( locale, options ) {\n\t\tsuper( locale );\n\n\t\tconst colorDefinitions = options && options.colorDefinitions || [];\n\t\tconst viewStyleAttribute = {};\n\n\t\tif ( options && options.columns ) {\n\t\t\tviewStyleAttribute.gridTemplateColumns = `repeat( ${ options.columns }, 1fr)`;\n\t\t}\n\n\t\t/**\n\t\t * The color of the currently selected color tile in {@link #items}.\n\t\t *\n\t\t * @observable\n\t\t * @type {String}\n\t\t */\n\t\tthis.set( 'selectedColor' );\n\n\t\t/**\n\t\t * Collection of the child tile views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the grid.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Helps cycling over focusable {@link #items} in the grid.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate grid items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowleft',\n\n\t\t\t\t// Navigate grid items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowright',\n\t\t\t}\n\t\t} );\n\n\t\tthis.items.on( 'add', ( evt, colorTile ) => {\n\t\t\tcolorTile.isOn = colorTile.color === this.selectedColor;\n\t\t} );\n\n\t\tcolorDefinitions.forEach( item => {\n\t\t\tconst colorTile = new ColorTileView();\n\n\t\t\tcolorTile.set( {\n\t\t\t\tcolor: item.color,\n\t\t\t\tlabel: item.label,\n\t\t\t\ttooltip: true,\n\t\t\t\thasBorder: item.options.hasBorder\n\t\t\t} );\n\n\t\t\tcolorTile.on( 'execute', () => {\n\t\t\t\tthis.fire( 'execute', {\n\t\t\t\t\tvalue: item.color,\n\t\t\t\t\thasBorder: item.options.hasBorder,\n\t\t\t\t\tlabel: item.label\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tthis.items.add( colorTile );\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: this.items,\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-grid'\n\t\t\t\t],\n\t\t\t\tstyle: viewStyleAttribute\n\t\t\t}\n\t\t} );\n\n\t\tthis.on( 'change:selectedColor', ( evt, name, selectedColor ) => {\n\t\t\tfor ( const item of this.items ) {\n\t\t\t\titem.isOn = item.color === selectedColor;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.first.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.last.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n}\n\n/**\n * A color definition used to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n *\n *\t\t{\n *\t\t\tcolor: hsl(0, 0%, 75%),\n *\t\t\tlabel: 'Light Grey',\n *\t\t\toptions: {\n *\t\t\t\thasBorder: true\n *\t\t\t}\n *\t\t}\n *\n * @typedef {Object} module:ui/colorgrid/colorgrid~ColorDefinition\n * @type Object\n *\n * @property {String} color String representing a color.\n * It is used as value of background-color style in {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {String} label String used as label for {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Object} options Additional options passed to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Boolean} options.hasBorder A flag that indicates if special a CSS class should be added\n * to {@link module:ui/colorgrid/colortile~ColorTileView}, which renders a border around it.\n */\n"]}]}