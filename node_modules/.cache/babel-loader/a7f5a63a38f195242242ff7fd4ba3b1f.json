{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHR5cGluZy91dGlscy9jaGFuZ2VidWZmZXIKICovCgovKioKICogQ2hhbmdlIGJ1ZmZlciBhbGxvd3MgdG8gZ3JvdXAgYXRvbWljIGNoYW5nZXMgKGxpa2UgY2hhcmFjdGVycyB0aGF0IGhhdmUgYmVlbiB0eXBlZCkgaW50bwogKiB7QGxpbmsgbW9kdWxlOmVuZ2luZS9tb2RlbC9iYXRjaH5CYXRjaCBiYXRjaGVzfS4KICoKICogQmF0Y2hlcyByZXByZXNlbnQgc2luZ2xlIHVuZG8gc3RlcHMsIGhlbmNlIGNoYW5nZXMgYWRkZWQgdG8gb25lIHNpbmdsZSBiYXRjaCBhcmUgdW5kb25lIHRvZ2V0aGVyLgogKgogKiBUaGUgYnVmZmVyIGhhcyBhIGNvbmZpZ3VyYWJsZSBsaW1pdCBvZiBhdG9taWMgY2hhbmdlcyB0aGF0IGl0IGNhbiBhY2NvbW1vZGF0ZS4gQWZ0ZXIgdGhlIGxpbWl0IHdhcwogKiBleGNlZWRlZCAoc2VlIHtAbGluayB+Q2hhbmdlQnVmZmVyI2lucHV0fSksIGEgbmV3IGJhdGNoIGlzIGNyZWF0ZWQgaW4ge0BsaW5rIH5DaGFuZ2VCdWZmZXIjYmF0Y2h9LgogKgogKiBUbyB1c2UgdGhlIGNoYW5nZSBidWZmZXIgeW91IG5lZWQgdG8gbGV0IGl0IGtub3cgYWJvdXQgdGhlIG51bWJlciBvZiBjaGFuZ2VzIHRoYXQgd2VyZSBhZGRlZCB0byB0aGUgYmF0Y2g6CiAqCiAqCQljb25zdCBidWZmZXIgPSBuZXcgQ2hhbmdlQnVmZmVyKCBtb2RlbCwgTElNSVQgKTsKICoKICoJCS8vIExhdGVyIG9uIGluIHlvdXIgZmVhdHVyZToKICoJCWJ1ZmZlci5iYXRjaC5pbnNlcnQoIHBvcywgaW5zZXJ0ZWRDaGFyYWN0ZXJzICk7CiAqCQlidWZmZXIuaW5wdXQoIGluc2VydGVkQ2hhcmFjdGVycy5sZW5ndGggKTsKICoKICovCmV4cG9ydCBkZWZhdWx0IGNsYXNzIENoYW5nZUJ1ZmZlciB7CiAgLyoqCiAgICogQ3JlYXRlcyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgY2hhbmdlIGJ1ZmZlci4KICAgKgogICAqIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC9tb2RlbH5Nb2RlbH0gbW9kZWwKICAgKiBAcGFyYW0ge051bWJlcn0gW2xpbWl0PTIwXSBUaGUgbWF4aW11bSBudW1iZXIgb2YgYXRvbWljIGNoYW5nZXMgd2hpY2ggY2FuIGJlIGNvbnRhaW5lZCBpbiBvbmUgYmF0Y2guCiAgICovCiAgY29uc3RydWN0b3IobW9kZWwsIGxpbWl0ID0gMjApIHsKICAgIC8qKgogICAgICogVGhlIG1vZGVsIGluc3RhbmNlLgogICAgICoKICAgICAqIEByZWFkb25seQogICAgICogQG1lbWJlciB7bW9kdWxlOmVuZ2luZS9tb2RlbC9tb2RlbH5Nb2RlbH0gI21vZGVsCiAgICAgKi8KICAgIHRoaXMubW9kZWwgPSBtb2RlbDsKICAgIC8qKgogICAgICogVGhlIG51bWJlciBvZiBhdG9taWMgY2hhbmdlcyBpbiB0aGUgYnVmZmVyLiBPbmNlIGl0IGV4Y2VlZHMgdGhlIHtAbGluayAjbGltaXR9LAogICAgICogdGhlIHtAbGluayAjYmF0Y2ggYmF0Y2h9IGlzIHNldCB0byBhIG5ldyBvbmUuCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAbWVtYmVyIHtOdW1iZXJ9ICNzaXplCiAgICAgKi8KCiAgICB0aGlzLnNpemUgPSAwOwogICAgLyoqCiAgICAgKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgYXRvbWljIGNoYW5nZXMgd2hpY2ggY2FuIGJlIGNvbnRhaW5lZCBpbiBvbmUgYmF0Y2guCiAgICAgKgogICAgICogQHJlYWRvbmx5CiAgICAgKiBAbWVtYmVyIHtOdW1iZXJ9ICNsaW1pdAogICAgICovCgogICAgdGhpcy5saW1pdCA9IGxpbWl0OwogICAgLyoqCiAgICAgKiBXaGV0aGVyIHRoZSBidWZmZXIgaXMgbG9ja2VkLiBBIGxvY2tlZCBidWZmZXIgY2Fubm90IGJlIHJlc2V0IHVubGVzcyBpdCBnZXRzIHVubG9ja2VkLgogICAgICoKICAgICAqIEByZWFkb25seQogICAgICogQG1lbWJlciB7Qm9vbGVhbn0gI2lzTG9ja2VkCiAgICAgKi8KCiAgICB0aGlzLmlzTG9ja2VkID0gZmFsc2U7IC8vIFRoZSBmdW5jdGlvbiB0byBiZSBjYWxsZWQgaW4gb3JkZXIgdG8gbm90aWZ5IHRoZSBidWZmZXIgYWJvdXQgYmF0Y2hlcyB3aGljaCBhcHBlYXJlZCBpbiB0aGUgZG9jdW1lbnQuCiAgICAvLyBUaGUgY2FsbGJhY2sgd2lsbCBjaGVjayB3aGV0aGVyIGl0IGlzIGEgbmV3IGJhdGNoIGFuZCBpbiB0aGF0IGNhc2UgdGhlIGJ1ZmZlciB3aWxsIGJlIGZsdXNoZWQuCiAgICAvLwogICAgLy8gVGhlIHJlYXNvbiB3aHkgdGhlIGJ1ZmZlciBuZWVkcyB0byBiZSBmbHVzaGVkIHdoZW5ldmVyIGEgbmV3IGJhdGNoIGFwcGVhcnMgaXMgdGhhdCB0aGUgY2hhbmdlcyBhZGRlZCBhZnRlcndhcmRzCiAgICAvLyBzaG91bGQgYmUgYWRkZWQgdG8gYSBuZXcgYmF0Y2guIEZvciBpbnN0YW5jZSwgd2hlbiB0aGUgIHVzZXIgdHlwZXMsIHRoZW4gaW5zZXJ0cyBhbiBpbWFnZSwgYW5kIHRoZW4gdHlwZXMgYWdhaW4sCiAgICAvLyB0aGUgY2hhcmFjdGVycyB0eXBlZCBhZnRlciBpbnNlcnRpbmcgdGhlIGltYWdlIHNob3VsZCBiZSBhZGRlZCB0byBhIGRpZmZlcmVudCBiYXRjaCB0aGFuIHRoZSBjaGFyYWN0ZXJzIHR5cGVkIGJlZm9yZS4KCiAgICB0aGlzLl9jaGFuZ2VDYWxsYmFjayA9IChldnQsIGJhdGNoKSA9PiB7CiAgICAgIGlmIChiYXRjaC50eXBlICE9ICd0cmFuc3BhcmVudCcgJiYgYmF0Y2ggIT09IHRoaXMuX2JhdGNoKSB7CiAgICAgICAgdGhpcy5fcmVzZXQodHJ1ZSk7CiAgICAgIH0KICAgIH07CgogICAgdGhpcy5fc2VsZWN0aW9uQ2hhbmdlQ2FsbGJhY2sgPSAoKSA9PiB7CiAgICAgIHRoaXMuX3Jlc2V0KCk7CiAgICB9OwoKICAgIHRoaXMubW9kZWwuZG9jdW1lbnQub24oJ2NoYW5nZScsIHRoaXMuX2NoYW5nZUNhbGxiYWNrKTsKICAgIHRoaXMubW9kZWwuZG9jdW1lbnQuc2VsZWN0aW9uLm9uKCdjaGFuZ2U6cmFuZ2UnLCB0aGlzLl9zZWxlY3Rpb25DaGFuZ2VDYWxsYmFjayk7CiAgICB0aGlzLm1vZGVsLmRvY3VtZW50LnNlbGVjdGlvbi5vbignY2hhbmdlOmF0dHJpYnV0ZScsIHRoaXMuX3NlbGVjdGlvbkNoYW5nZUNhbGxiYWNrKTsKICAgIC8qKgogICAgICogVGhlIGN1cnJlbnQgYmF0Y2ggaW5zdGFuY2UuCiAgICAgKgogICAgICogQHByaXZhdGUKICAgICAqIEBtZW1iZXIgI19iYXRjaAogICAgICovCgogICAgLyoqCiAgICAgKiBUaGUgY2FsbGJhY2sgdG8gZG9jdW1lbnQgdGhlIGNoYW5nZSBldmVudCB3aGljaCBsYXRlciBuZWVkcyB0byBiZSByZW1vdmVkLgogICAgICoKICAgICAqIEBwcml2YXRlCiAgICAgKiBAbWVtYmVyICNfY2hhbmdlQ2FsbGJhY2sKICAgICAqLwoKICAgIC8qKgogICAgICogVGhlIGNhbGxiYWNrIHRvIGRvY3VtZW50IHNlbGVjdGlvbiBgY2hhbmdlOmF0dHJpYnV0ZWAgYW5kIGBjaGFuZ2U6cmFuZ2VgIGV2ZW50cyB3aGljaCByZXNldHMgdGhlIGJ1ZmZlci4KICAgICAqCiAgICAgKiBAcHJpdmF0ZQogICAgICogQG1lbWJlciAjX3NlbGVjdGlvbkNoYW5nZUNhbGxiYWNrCiAgICAgKi8KICB9CiAgLyoqCiAgICogVGhlIGN1cnJlbnQgYmF0Y2ggdG8gd2hpY2ggYSBmZWF0dXJlIHNob3VsZCBhZGQgaXRzIG9wZXJhdGlvbnMuIE9uY2UgdGhlIHtAbGluayAjc2l6ZX0KICAgKiBpcyByZWFjaGVkIG9yIGV4Y2VlZHMgdGhlIHtAbGluayAjbGltaXR9LCB0aGUgYmF0Y2ggaXMgc2V0IHRvIGEgbmV3IGluc3RhbmNlIGFuZCB0aGUgc2l6ZSBpcyByZXNldC4KICAgKgogICAqIEB0eXBlIHttb2R1bGU6ZW5naW5lL21vZGVsL2JhdGNofkJhdGNofQogICAqLwoKCiAgZ2V0IGJhdGNoKCkgewogICAgaWYgKCF0aGlzLl9iYXRjaCkgewogICAgICB0aGlzLl9iYXRjaCA9IHRoaXMubW9kZWwuY3JlYXRlQmF0Y2goKTsKICAgIH0KCiAgICByZXR1cm4gdGhpcy5fYmF0Y2g7CiAgfQogIC8qKgogICAqIFRoZSBpbnB1dCBudW1iZXIgb2YgY2hhbmdlcyBpbnRvIHRoZSBidWZmZXIuIE9uY2UgdGhlIHtAbGluayAjc2l6ZX0gaXMKICAgKiByZWFjaGVkIG9yIGV4Y2VlZHMgdGhlIHtAbGluayAjbGltaXR9LCB0aGUgYmF0Y2ggaXMgc2V0IHRvIGEgbmV3IGluc3RhbmNlIGFuZCB0aGUgc2l6ZSBpcyByZXNldC4KICAgKgogICAqIEBwYXJhbSB7TnVtYmVyfSBjaGFuZ2VDb3VudCBUaGUgbnVtYmVyIG9mIGF0b21pYyBjaGFuZ2VzIHRvIGlucHV0LgogICAqLwoKCiAgaW5wdXQoY2hhbmdlQ291bnQpIHsKICAgIHRoaXMuc2l6ZSArPSBjaGFuZ2VDb3VudDsKCiAgICBpZiAodGhpcy5zaXplID49IHRoaXMubGltaXQpIHsKICAgICAgdGhpcy5fcmVzZXQodHJ1ZSk7CiAgICB9CiAgfQogIC8qKgogICAqIExvY2tzIHRoZSBidWZmZXIuCiAgICovCgoKICBsb2NrKCkgewogICAgdGhpcy5pc0xvY2tlZCA9IHRydWU7CiAgfQogIC8qKgogICAqIFVubG9ja3MgdGhlIGJ1ZmZlci4KICAgKi8KCgogIHVubG9jaygpIHsKICAgIHRoaXMuaXNMb2NrZWQgPSBmYWxzZTsKICB9CiAgLyoqCiAgICogRGVzdHJveXMgdGhlIGJ1ZmZlci4KICAgKi8KCgogIGRlc3Ryb3koKSB7CiAgICB0aGlzLm1vZGVsLmRvY3VtZW50Lm9mZignY2hhbmdlJywgdGhpcy5fY2hhbmdlQ2FsbGJhY2spOwogICAgdGhpcy5tb2RlbC5kb2N1bWVudC5zZWxlY3Rpb24ub2ZmKCdjaGFuZ2U6cmFuZ2UnLCB0aGlzLl9zZWxlY3Rpb25DaGFuZ2VDYWxsYmFjayk7CiAgICB0aGlzLm1vZGVsLmRvY3VtZW50LnNlbGVjdGlvbi5vZmYoJ2NoYW5nZTphdHRyaWJ1dGUnLCB0aGlzLl9zZWxlY3Rpb25DaGFuZ2VDYWxsYmFjayk7CiAgfQogIC8qKgogICAqIFJlc2V0cyB0aGUgY2hhbmdlIGJ1ZmZlci4KICAgKgogICAqIEBwcml2YXRlCiAgICogQHBhcmFtIHtCb29sZWFufSBbaWdub3JlTG9ja10gV2hldGhlciBpbnRlcm5hbCBsb2NrIHtAbGluayAjaXNMb2NrZWR9IHNob3VsZCBiZSBpZ25vcmVkLgogICAqLwoKCiAgX3Jlc2V0KGlnbm9yZUxvY2spIHsKICAgIGlmICghdGhpcy5pc0xvY2tlZCB8fCBpZ25vcmVMb2NrKSB7CiAgICAgIHRoaXMuX2JhdGNoID0gbnVsbDsKICAgICAgdGhpcy5zaXplID0gMDsKICAgIH0KICB9Cgp9"},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js"],"names":["ChangeBuffer","constructor","model","limit","size","isLocked","_changeCallback","evt","batch","type","_batch","_reset","_selectionChangeCallback","document","on","selection","createBatch","input","changeCount","lock","unlock","destroy","off","ignoreLock"],"mappings":"AAAA;;;;;AAKA;;;;AAIA;;;;;;;;;;;;;;;;;;AAkBA,eAAe,MAAMA,YAAN,CAAmB;AACjC;;;;;;AAMAC,EAAAA,WAAW,CAAEC,KAAF,EAASC,KAAK,GAAG,EAAjB,EAAsB;AAChC;;;;;;AAMA,SAAKD,KAAL,GAAaA,KAAb;AAEA;;;;;;;;AAOA,SAAKE,IAAL,GAAY,CAAZ;AAEA;;;;;;;AAMA,SAAKD,KAAL,GAAaA,KAAb;AAEA;;;;;;;AAMA,SAAKE,QAAL,GAAgB,KAAhB,CAhCgC,CAkChC;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKC,eAAL,GAAuB,CAAEC,GAAF,EAAOC,KAAP,KAAkB;AACxC,UAAKA,KAAK,CAACC,IAAN,IAAc,aAAd,IAA+BD,KAAK,KAAK,KAAKE,MAAnD,EAA4D;AAC3D,aAAKC,MAAL,CAAa,IAAb;AACA;AACD,KAJD;;AAMA,SAAKC,wBAAL,GAAgC,MAAM;AACrC,WAAKD,MAAL;AACA,KAFD;;AAIA,SAAKT,KAAL,CAAWW,QAAX,CAAoBC,EAApB,CAAwB,QAAxB,EAAkC,KAAKR,eAAvC;AAEA,SAAKJ,KAAL,CAAWW,QAAX,CAAoBE,SAApB,CAA8BD,EAA9B,CAAkC,cAAlC,EAAkD,KAAKF,wBAAvD;AACA,SAAKV,KAAL,CAAWW,QAAX,CAAoBE,SAApB,CAA8BD,EAA9B,CAAkC,kBAAlC,EAAsD,KAAKF,wBAA3D;AAEA;;;;;;;AAOA;;;;;;;AAOA;;;;;;AAMA;AAED;;;;;;;;AAMA,MAAIJ,KAAJ,GAAY;AACX,QAAK,CAAC,KAAKE,MAAX,EAAoB;AACnB,WAAKA,MAAL,GAAc,KAAKR,KAAL,CAAWc,WAAX,EAAd;AACA;;AAED,WAAO,KAAKN,MAAZ;AACA;AAED;;;;;;;;AAMAO,EAAAA,KAAK,CAAEC,WAAF,EAAgB;AACpB,SAAKd,IAAL,IAAac,WAAb;;AAEA,QAAK,KAAKd,IAAL,IAAa,KAAKD,KAAvB,EAA+B;AAC9B,WAAKQ,MAAL,CAAa,IAAb;AACA;AACD;AAED;;;;;AAGAQ,EAAAA,IAAI,GAAG;AACN,SAAKd,QAAL,GAAgB,IAAhB;AACA;AAED;;;;;AAGAe,EAAAA,MAAM,GAAG;AACR,SAAKf,QAAL,GAAgB,KAAhB;AACA;AAED;;;;;AAGAgB,EAAAA,OAAO,GAAG;AACT,SAAKnB,KAAL,CAAWW,QAAX,CAAoBS,GAApB,CAAyB,QAAzB,EAAmC,KAAKhB,eAAxC;AACA,SAAKJ,KAAL,CAAWW,QAAX,CAAoBE,SAApB,CAA8BO,GAA9B,CAAmC,cAAnC,EAAmD,KAAKV,wBAAxD;AACA,SAAKV,KAAL,CAAWW,QAAX,CAAoBE,SAApB,CAA8BO,GAA9B,CAAmC,kBAAnC,EAAuD,KAAKV,wBAA5D;AACA;AAED;;;;;;;;AAMAD,EAAAA,MAAM,CAAEY,UAAF,EAAe;AACpB,QAAK,CAAC,KAAKlB,QAAN,IAAkBkB,UAAvB,EAAoC;AACnC,WAAKb,MAAL,GAAc,IAAd;AACA,WAAKN,IAAL,GAAY,CAAZ;AACA;AACD;;AAlJgC","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/changebuffer\n */\n\n/**\n * Change buffer allows to group atomic changes (like characters that have been typed) into\n * {@link module:engine/model/batch~Batch batches}.\n *\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\n *\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\n *\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\n *\n *\t\tconst buffer = new ChangeBuffer( model, LIMIT );\n *\n *\t\t// Later on in your feature:\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\n *\t\tbuffer.input( insertedCharacters.length );\n *\n */\nexport default class ChangeBuffer {\n\t/**\n\t * Creates a new instance of the change buffer.\n\t *\n\t * @param {module:engine/model/model~Model} model\n\t * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\n\t */\n\tconstructor( model, limit = 20 ) {\n\t\t/**\n\t\t * The model instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/model~Model} #model\n\t\t */\n\t\tthis.model = model;\n\n\t\t/**\n\t\t * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\n\t\t * the {@link #batch batch} is set to a new one.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #size\n\t\t */\n\t\tthis.size = 0;\n\n\t\t/**\n\t\t * The maximum number of atomic changes which can be contained in one batch.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} #limit\n\t\t */\n\t\tthis.limit = limit;\n\n\t\t/**\n\t\t * Whether the buffer is locked. A locked buffer cannot be reset unless it gets unlocked.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isLocked\n\t\t */\n\t\tthis.isLocked = false;\n\n\t\t// The function to be called in order to notify the buffer about batches which appeared in the document.\n\t\t// The callback will check whether it is a new batch and in that case the buffer will be flushed.\n\t\t//\n\t\t// The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\n\t\t// should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\n\t\t// the characters typed after inserting the image should be added to a different batch than the characters typed before.\n\t\tthis._changeCallback = ( evt, batch ) => {\n\t\t\tif ( batch.type != 'transparent' && batch !== this._batch ) {\n\t\t\t\tthis._reset( true );\n\t\t\t}\n\t\t};\n\n\t\tthis._selectionChangeCallback = () => {\n\t\t\tthis._reset();\n\t\t};\n\n\t\tthis.model.document.on( 'change', this._changeCallback );\n\n\t\tthis.model.document.selection.on( 'change:range', this._selectionChangeCallback );\n\t\tthis.model.document.selection.on( 'change:attribute', this._selectionChangeCallback );\n\n\t\t/**\n\t\t * The current batch instance.\n\t\t *\n\t\t * @private\n\t\t * @member #_batch\n\t\t */\n\n\t\t/**\n\t\t * The callback to document the change event which later needs to be removed.\n\t\t *\n\t\t * @private\n\t\t * @member #_changeCallback\n\t\t */\n\n\t\t/**\n\t\t * The callback to document selection `change:attribute` and `change:range` events which resets the buffer.\n\t\t *\n\t\t * @private\n\t\t * @member #_selectionChangeCallback\n\t\t */\n\t}\n\n\t/**\n\t * The current batch to which a feature should add its operations. Once the {@link #size}\n\t * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @type {module:engine/model/batch~Batch}\n\t */\n\tget batch() {\n\t\tif ( !this._batch ) {\n\t\t\tthis._batch = this.model.createBatch();\n\t\t}\n\n\t\treturn this._batch;\n\t}\n\n\t/**\n\t * The input number of changes into the buffer. Once the {@link #size} is\n\t * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n\t *\n\t * @param {Number} changeCount The number of atomic changes to input.\n\t */\n\tinput( changeCount ) {\n\t\tthis.size += changeCount;\n\n\t\tif ( this.size >= this.limit ) {\n\t\t\tthis._reset( true );\n\t\t}\n\t}\n\n\t/**\n\t * Locks the buffer.\n\t */\n\tlock() {\n\t\tthis.isLocked = true;\n\t}\n\n\t/**\n\t * Unlocks the buffer.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t}\n\n\t/**\n\t * Destroys the buffer.\n\t */\n\tdestroy() {\n\t\tthis.model.document.off( 'change', this._changeCallback );\n\t\tthis.model.document.selection.off( 'change:range', this._selectionChangeCallback );\n\t\tthis.model.document.selection.off( 'change:attribute', this._selectionChangeCallback );\n\t}\n\n\t/**\n\t * Resets the change buffer.\n\t *\n\t * @private\n\t * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\n\t */\n\t_reset( ignoreLock ) {\n\t\tif ( !this.isLocked || ignoreLock ) {\n\t\t\tthis._batch = null;\n\t\t\tthis.size = 0;\n\t\t}\n\t}\n}\n"]}]}