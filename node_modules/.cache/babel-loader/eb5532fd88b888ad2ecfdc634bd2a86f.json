{"remainingRequest":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js!/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-table/src/commands/setheaderrowcommand.js","dependencies":[{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-table/src/commands/setheaderrowcommand.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-dev-webpack-plugin/lib/translatesourceloader.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/antonyching/Desktop/project/new-builder-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqCiAqIEBsaWNlbnNlIENvcHlyaWdodCAoYykgMjAwMy0yMDE5LCBDS1NvdXJjZSAtIEZyZWRlcmljbyBLbmFiYmVuLiBBbGwgcmlnaHRzIHJlc2VydmVkLgogKiBGb3IgbGljZW5zaW5nLCBzZWUgTElDRU5TRS5tZCBvciBodHRwczovL2NrZWRpdG9yLmNvbS9sZWdhbC9ja2VkaXRvci1vc3MtbGljZW5zZQogKi8KCi8qKgogKiBAbW9kdWxlIHRhYmxlL2NvbW1hbmRzL3NldGhlYWRlcnJvd2NvbW1hbmQKICovCmltcG9ydCBDb21tYW5kIGZyb20gJ0Bja2VkaXRvci9ja2VkaXRvcjUtY29yZS9zcmMvY29tbWFuZCc7CmltcG9ydCB7IGNyZWF0ZUVtcHR5VGFibGVDZWxsLCBmaW5kQW5jZXN0b3IsIHVwZGF0ZU51bWVyaWNBdHRyaWJ1dGUgfSBmcm9tICcuL3V0aWxzJzsKaW1wb3J0IFRhYmxlV2Fsa2VyIGZyb20gJy4uL3RhYmxld2Fsa2VyJzsKLyoqCiAqIFRoZSBoZWFkZXIgcm93IGNvbW1hbmQuCiAqCiAqIFRoZSBjb21tYW5kIGlzIHJlZ2lzdGVyZWQgYnkge0BsaW5rIG1vZHVsZTp0YWJsZS90YWJsZWVkaXRpbmd+VGFibGVFZGl0aW5nfSBhcyBgJ3NldFRhYmxlQ29sdW1uSGVhZGVyJ2AgZWRpdG9yIGNvbW1hbmQuCiAqCiAqIFlvdSBjYW4gbWFrZSB0aGUgcm93IGNvbnRhaW5pbmcgdGhlIHNlbGVjdGVkIGNlbGwgYSBbaGVhZGVyXShodHRwczovL3d3dy53My5vcmcvVFIvaHRtbDUwL3RhYnVsYXItZGF0YS5odG1sI3RoZS10aC1lbGVtZW50KSBieSBleGVjdXRpbmc6CiAqCiAqCQllZGl0b3IuZXhlY3V0ZSggJ3NldFRhYmxlUm93SGVhZGVyJyApOwogKgogKiAqKk5vdGU6KiogQWxsIHByZWNlZGluZyByb3dzIHdpbGwgYWxzbyBiZWNvbWUgaGVhZGVycy4gSWYgdGhlIGN1cnJlbnQgcm93IGlzIGFscmVhZHkgYSBoZWFkZXIsIGV4ZWN1dGluZyB0aGlzIGNvbW1hbmQKICogd2lsbCBtYWtlIGl0IGEgcmVndWxhciByb3cgYmFjayBhZ2FpbiAoaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgcm93cykuCiAqCiAqIEBleHRlbmRzIG1vZHVsZTpjb3JlL2NvbW1hbmR+Q29tbWFuZAogKi8KCmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNldEhlYWRlclJvd0NvbW1hbmQgZXh0ZW5kcyBDb21tYW5kIHsKICAvKioKICAgKiBAaW5oZXJpdERvYwogICAqLwogIHJlZnJlc2goKSB7CiAgICBjb25zdCBtb2RlbCA9IHRoaXMuZWRpdG9yLm1vZGVsOwogICAgY29uc3QgZG9jID0gbW9kZWwuZG9jdW1lbnQ7CiAgICBjb25zdCBzZWxlY3Rpb24gPSBkb2Muc2VsZWN0aW9uOwogICAgY29uc3QgcG9zaXRpb24gPSBzZWxlY3Rpb24uZ2V0Rmlyc3RQb3NpdGlvbigpOwogICAgY29uc3QgdGFibGVDZWxsID0gZmluZEFuY2VzdG9yKCd0YWJsZUNlbGwnLCBwb3NpdGlvbik7CiAgICBjb25zdCBpc0luVGFibGUgPSAhIXRhYmxlQ2VsbDsKICAgIHRoaXMuaXNFbmFibGVkID0gaXNJblRhYmxlOwogICAgLyoqCiAgICAgKiBGbGFnIGluZGljYXRpbmcgd2hldGhlciB0aGUgY29tbWFuZCBpcyBhY3RpdmUuIFRoZSBjb21tYW5kIGlzIGFjdGl2ZSB3aGVuIHRoZQogICAgICoge0BsaW5rIG1vZHVsZTplbmdpbmUvbW9kZWwvc2VsZWN0aW9uflNlbGVjdGlvbn0gaXMgaW4gYSBoZWFkZXIgcm93LgogICAgICoKICAgICAqIEBvYnNlcnZhYmxlCiAgICAgKiBAcmVhZG9ubHkKICAgICAqIEBtZW1iZXIge0Jvb2xlYW59ICN2YWx1ZQogICAgICovCgogICAgdGhpcy52YWx1ZSA9IGlzSW5UYWJsZSAmJiB0aGlzLl9pc0luSGVhZGluZyh0YWJsZUNlbGwsIHRhYmxlQ2VsbC5wYXJlbnQucGFyZW50KTsKICB9CiAgLyoqCiAgICogRXhlY3V0ZXMgdGhlIGNvbW1hbmQuCiAgICoKICAgKiBXaGVuIHRoZSBzZWxlY3Rpb24gaXMgaW4gYSBub24taGVhZGVyIHJvdywgdGhlIGNvbW1hbmQgd2lsbCBzZXQgdGhlIGBoZWFkaW5nUm93c2AgdGFibGUgYXR0cmlidXRlIHRvIGNvdmVyIHRoYXQgcm93LgogICAqCiAgICogV2hlbiB0aGUgc2VsZWN0aW9uIGlzIGFscmVhZHkgaW4gYSBoZWFkZXIgcm93LCBpdCB3aWxsIHNldCBgaGVhZGluZ1Jvd3NgIHNvIHRoZSBoZWFkaW5nIHNlY3Rpb24gd2lsbCBlbmQgYmVmb3JlIHRoYXQgcm93LgogICAqCiAgICogQGZpcmVzIGV4ZWN1dGUKICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucwogICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuZm9yY2VWYWx1ZV0gSWYgc2V0LCB0aGUgY29tbWFuZCB3aWxsIHNldCAoYHRydWVgKSBvciB1bnNldCAoYGZhbHNlYCkgaGVhZGVyIHJvd3MgYWNjb3JkaW5nIHRvIGBmb3JjZVZhbHVlYAogICAqIHBhcmFtZXRlciBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IG1vZGVsIHN0YXRlLgogICAqLwoKCiAgZXhlY3V0ZShvcHRpb25zID0ge30pIHsKICAgIGNvbnN0IG1vZGVsID0gdGhpcy5lZGl0b3IubW9kZWw7CiAgICBjb25zdCBkb2MgPSBtb2RlbC5kb2N1bWVudDsKICAgIGNvbnN0IHNlbGVjdGlvbiA9IGRvYy5zZWxlY3Rpb247CiAgICBjb25zdCBwb3NpdGlvbiA9IHNlbGVjdGlvbi5nZXRGaXJzdFBvc2l0aW9uKCk7CiAgICBjb25zdCB0YWJsZUNlbGwgPSBmaW5kQW5jZXN0b3IoJ3RhYmxlQ2VsbCcsIHBvc2l0aW9uKTsKICAgIGNvbnN0IHRhYmxlUm93ID0gdGFibGVDZWxsLnBhcmVudDsKICAgIGNvbnN0IHRhYmxlID0gdGFibGVSb3cucGFyZW50OwogICAgY29uc3QgY3VycmVudEhlYWRpbmdSb3dzID0gdGFibGUuZ2V0QXR0cmlidXRlKCdoZWFkaW5nUm93cycpIHx8IDA7CiAgICBjb25zdCBzZWxlY3Rpb25Sb3cgPSB0YWJsZVJvdy5pbmRleDsKCiAgICBpZiAob3B0aW9ucy5mb3JjZVZhbHVlID09PSB0aGlzLnZhbHVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBjb25zdCBoZWFkaW5nUm93c1RvU2V0ID0gdGhpcy52YWx1ZSA/IHNlbGVjdGlvblJvdyA6IHNlbGVjdGlvblJvdyArIDE7CiAgICBtb2RlbC5jaGFuZ2Uod3JpdGVyID0+IHsKICAgICAgaWYgKGhlYWRpbmdSb3dzVG9TZXQpIHsKICAgICAgICAvLyBDaGFuZ2luZyBoZWFkaW5nIHJvd3MgcmVxdWlyZXMgdG8gY2hlY2sgaWYgYW55IG9mIGEgaGVhZGluZyBjZWxsIGlzIG92ZXJsYXBwaW5nIHZlcnRpY2FsbHkgdGhlIHRhYmxlIGhlYWQuCiAgICAgICAgLy8gQW55IHRhYmxlIGNlbGwgdGhhdCBoYXMgYSByb3dzcGFuIGF0dHJpYnV0ZSA+IDEgd2lsbCBub3QgZXhjZWVkIHRoZSB0YWJsZSBoZWFkIHNvIHdlIG5lZWQgdG8gZml4IGl0IGluIHJvd3MgYmVsb3cuCiAgICAgICAgY29uc3QgY2VsbHNUb1NwbGl0ID0gZ2V0T3ZlcmxhcHBpbmdDZWxscyh0YWJsZSwgaGVhZGluZ1Jvd3NUb1NldCwgY3VycmVudEhlYWRpbmdSb3dzKTsKCiAgICAgICAgZm9yIChjb25zdCBjZWxsIG9mIGNlbGxzVG9TcGxpdCkgewogICAgICAgICAgc3BsaXRIb3Jpem9udGFsbHkoY2VsbCwgaGVhZGluZ1Jvd3NUb1NldCwgd3JpdGVyKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHVwZGF0ZU51bWVyaWNBdHRyaWJ1dGUoJ2hlYWRpbmdSb3dzJywgaGVhZGluZ1Jvd3NUb1NldCwgdGFibGUsIHdyaXRlciwgMCk7CiAgICB9KTsKICB9CiAgLyoqCiAgICogQ2hlY2tzIGlmIGEgdGFibGUgY2VsbCBpcyBpbiB0aGUgaGVhZGluZyBzZWN0aW9uLgogICAqCiAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL2VsZW1lbnR+RWxlbWVudH0gdGFibGVDZWxsCiAgICogQHBhcmFtIHttb2R1bGU6ZW5naW5lL21vZGVsL2VsZW1lbnR+RWxlbWVudH0gdGFibGUKICAgKiBAcmV0dXJucyB7Qm9vbGVhbn0KICAgKiBAcHJpdmF0ZQogICAqLwoKCiAgX2lzSW5IZWFkaW5nKHRhYmxlQ2VsbCwgdGFibGUpIHsKICAgIGNvbnN0IGhlYWRpbmdSb3dzID0gcGFyc2VJbnQodGFibGUuZ2V0QXR0cmlidXRlKCdoZWFkaW5nUm93cycpIHx8IDApOwogICAgcmV0dXJuICEhaGVhZGluZ1Jvd3MgJiYgdGFibGVDZWxsLnBhcmVudC5pbmRleCA8IGhlYWRpbmdSb3dzOwogIH0KCn0gLy8gUmV0dXJucyBjZWxscyB0aGF0IHNwYW4gYmV5b25kIHRoZSBuZXcgaGVhZGluZyBzZWN0aW9uLgovLwovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvZWxlbWVudH5FbGVtZW50fSB0YWJsZSBUaGUgdGFibGUgdG8gY2hlY2suCi8vIEBwYXJhbSB7TnVtYmVyfSBoZWFkaW5nUm93c1RvU2V0IE5ldyBoZWFkaW5nIHJvd3MgYXR0cmlidXRlLgovLyBAcGFyYW0ge051bWJlcn0gY3VycmVudEhlYWRpbmdSb3dzIEN1cnJlbnQgaGVhZGluZyByb3dzIGF0dHJpYnV0ZS4KLy8gQHJldHVybnMge0FycmF5Ljxtb2R1bGU6ZW5naW5lL21vZGVsL2VsZW1lbnR+RWxlbWVudD59CgpmdW5jdGlvbiBnZXRPdmVybGFwcGluZ0NlbGxzKHRhYmxlLCBoZWFkaW5nUm93c1RvU2V0LCBjdXJyZW50SGVhZGluZ1Jvd3MpIHsKICBjb25zdCBjZWxsc1RvU3BsaXQgPSBbXTsKICBjb25zdCBzdGFydEFuYWx5c2lzUm93ID0gaGVhZGluZ1Jvd3NUb1NldCA+IGN1cnJlbnRIZWFkaW5nUm93cyA/IGN1cnJlbnRIZWFkaW5nUm93cyA6IDA7IC8vIFdlJ3JlIGFuYWx5emluZyBvbmx5IHdoZW4gaGVhZGluZ1Jvd3NUb1NldCA+IDAuCgogIGNvbnN0IGVuZEFuYWx5c2lzUm93ID0gaGVhZGluZ1Jvd3NUb1NldCAtIDE7CiAgY29uc3QgdGFibGVXYWxrZXIgPSBuZXcgVGFibGVXYWxrZXIodGFibGUsIHsKICAgIHN0YXJ0Um93OiBzdGFydEFuYWx5c2lzUm93LAogICAgZW5kUm93OiBlbmRBbmFseXNpc1JvdwogIH0pOwoKICBmb3IgKGNvbnN0IHsKICAgIHJvdywKICAgIHJvd3NwYW4sCiAgICBjZWxsCiAgfSBvZiB0YWJsZVdhbGtlcikgewogICAgaWYgKHJvd3NwYW4gPiAxICYmIHJvdyArIHJvd3NwYW4gPiBoZWFkaW5nUm93c1RvU2V0KSB7CiAgICAgIGNlbGxzVG9TcGxpdC5wdXNoKGNlbGwpOwogICAgfQogIH0KCiAgcmV0dXJuIGNlbGxzVG9TcGxpdDsKfSAvLyBTcGxpdHMgdGhlIHRhYmxlIGNlbGwgaG9yaXpvbnRhbGx5LgovLwovLyBAcGFyYW0ge21vZHVsZTplbmdpbmUvbW9kZWwvZWxlbWVudH5FbGVtZW50fSB0YWJsZUNlbGwKLy8gQHBhcmFtIHtOdW1iZXJ9IGhlYWRpbmdSb3dzCi8vIEBwYXJhbSB7bW9kdWxlOmVuZ2luZS9tb2RlbC93cml0ZXJ+V3JpdGVyfSB3cml0ZXIKCgpmdW5jdGlvbiBzcGxpdEhvcml6b250YWxseSh0YWJsZUNlbGwsIGhlYWRpbmdSb3dzLCB3cml0ZXIpIHsKICBjb25zdCB0YWJsZVJvdyA9IHRhYmxlQ2VsbC5wYXJlbnQ7CiAgY29uc3QgdGFibGUgPSB0YWJsZVJvdy5wYXJlbnQ7CiAgY29uc3Qgcm93SW5kZXggPSB0YWJsZVJvdy5pbmRleDsKICBjb25zdCByb3dzcGFuID0gcGFyc2VJbnQodGFibGVDZWxsLmdldEF0dHJpYnV0ZSgncm93c3BhbicpKTsKICBjb25zdCBuZXdSb3dzcGFuID0gaGVhZGluZ1Jvd3MgLSByb3dJbmRleDsKICBjb25zdCBhdHRyaWJ1dGVzID0ge307CiAgY29uc3Qgc3BhblRvU2V0ID0gcm93c3BhbiAtIG5ld1Jvd3NwYW47CgogIGlmIChzcGFuVG9TZXQgPiAxKSB7CiAgICBhdHRyaWJ1dGVzLnJvd3NwYW4gPSBzcGFuVG9TZXQ7CiAgfQoKICBjb25zdCBjb2xzcGFuID0gcGFyc2VJbnQodGFibGVDZWxsLmdldEF0dHJpYnV0ZSgnY29sc3BhbicpIHx8IDEpOwoKICBpZiAoY29sc3BhbiA+IDEpIHsKICAgIGF0dHJpYnV0ZXMuY29sc3BhbiA9IGNvbHNwYW47CiAgfQoKICBjb25zdCBzdGFydFJvdyA9IHRhYmxlLmdldENoaWxkSW5kZXgodGFibGVSb3cpOwogIGNvbnN0IGVuZFJvdyA9IHN0YXJ0Um93ICsgbmV3Um93c3BhbjsKICBjb25zdCB0YWJsZU1hcCA9IFsuLi5uZXcgVGFibGVXYWxrZXIodGFibGUsIHsKICAgIHN0YXJ0Um93LAogICAgZW5kUm93LAogICAgaW5jbHVkZVNwYW5uZWQ6IHRydWUKICB9KV07CiAgbGV0IGNvbHVtbkluZGV4OwoKICBmb3IgKGNvbnN0IHsKICAgIHJvdywKICAgIGNvbHVtbiwKICAgIGNlbGwsCiAgICBjZWxsSW5kZXgKICB9IG9mIHRhYmxlTWFwKSB7CiAgICBpZiAoY2VsbCA9PT0gdGFibGVDZWxsICYmIGNvbHVtbkluZGV4ID09PSB1bmRlZmluZWQpIHsKICAgICAgY29sdW1uSW5kZXggPSBjb2x1bW47CiAgICB9CgogICAgaWYgKGNvbHVtbkluZGV4ICE9PSB1bmRlZmluZWQgJiYgY29sdW1uSW5kZXggPT09IGNvbHVtbiAmJiByb3cgPT09IGVuZFJvdykgewogICAgICBjb25zdCB0YWJsZVJvdyA9IHRhYmxlLmdldENoaWxkKHJvdyk7CiAgICAgIGNvbnN0IHRhYmxlQ2VsbFBvc2l0aW9uID0gd3JpdGVyLmNyZWF0ZVBvc2l0aW9uQXQodGFibGVSb3csIGNlbGxJbmRleCk7CiAgICAgIGNyZWF0ZUVtcHR5VGFibGVDZWxsKHdyaXRlciwgdGFibGVDZWxsUG9zaXRpb24sIGF0dHJpYnV0ZXMpOwogICAgfQogIH0gLy8gVXBkYXRlIHRoZSByb3dzcGFuIGF0dHJpYnV0ZSBhZnRlciB1cGRhdGluZyB0YWJsZS4KCgogIHVwZGF0ZU51bWVyaWNBdHRyaWJ1dGUoJ3Jvd3NwYW4nLCBuZXdSb3dzcGFuLCB0YWJsZUNlbGwsIHdyaXRlcik7Cn0="},{"version":3,"sources":["/Users/antonyching/Desktop/project/new-builder-demo/node_modules/@ckeditor/ckeditor5-table/src/commands/setheaderrowcommand.js"],"names":["Command","createEmptyTableCell","findAncestor","updateNumericAttribute","TableWalker","SetHeaderRowCommand","refresh","model","editor","doc","document","selection","position","getFirstPosition","tableCell","isInTable","isEnabled","value","_isInHeading","parent","execute","options","tableRow","table","currentHeadingRows","getAttribute","selectionRow","index","forceValue","headingRowsToSet","change","writer","cellsToSplit","getOverlappingCells","cell","splitHorizontally","headingRows","parseInt","startAnalysisRow","endAnalysisRow","tableWalker","startRow","endRow","row","rowspan","push","rowIndex","newRowspan","attributes","spanToSet","colspan","getChildIndex","tableMap","includeSpanned","columnIndex","column","cellIndex","undefined","getChild","tableCellPosition","createPositionAt"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/setheaderrowcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n\nimport { createEmptyTableCell, findAncestor, updateNumericAttribute } from './utils';\nimport TableWalker from '../tablewalker';\n\n/**\n * The header row command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as `'setTableColumnHeader'` editor command.\n *\n * You can make the row containing the selected cell a [header](https://www.w3.org/TR/html50/tabular-data.html#the-th-element) by executing:\n *\n *\t\teditor.execute( 'setTableRowHeader' );\n *\n * **Note:** All preceding rows will also become headers. If the current row is already a header, executing this command\n * will make it a regular row back again (including the following rows).\n *\n * @extends module:core/command~Command\n */\nexport default class SetHeaderRowCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\n\t\tconst position = selection.getFirstPosition();\n\t\tconst tableCell = findAncestor( 'tableCell', position );\n\t\tconst isInTable = !!tableCell;\n\n\t\tthis.isEnabled = isInTable;\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. The command is active when the\n\t\t * {@link module:engine/model/selection~Selection} is in a header row.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t\tthis.value = isInTable && this._isInHeading( tableCell, tableCell.parent.parent );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is in a non-header row, the command will set the `headingRows` table attribute to cover that row.\n\t *\n\t * When the selection is already in a header row, it will set `headingRows` so the heading section will end before that row.\n\t *\n\t * @fires execute\n\t * @param {Object} options\n\t * @param {Boolean} [options.forceValue] If set, the command will set (`true`) or unset (`false`) header rows according to `forceValue`\n\t * parameter instead of the current model state.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst selection = doc.selection;\n\n\t\tconst position = selection.getFirstPosition();\n\t\tconst tableCell = findAncestor( 'tableCell', position );\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst currentHeadingRows = table.getAttribute( 'headingRows' ) || 0;\n\t\tconst selectionRow = tableRow.index;\n\n\t\tif ( options.forceValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst headingRowsToSet = this.value ? selectionRow : selectionRow + 1;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( headingRowsToSet ) {\n\t\t\t\t// Changing heading rows requires to check if any of a heading cell is overlapping vertically the table head.\n\t\t\t\t// Any table cell that has a rowspan attribute > 1 will not exceed the table head so we need to fix it in rows below.\n\t\t\t\tconst cellsToSplit = getOverlappingCells( table, headingRowsToSet, currentHeadingRows );\n\n\t\t\t\tfor ( const cell of cellsToSplit ) {\n\t\t\t\t\tsplitHorizontally( cell, headingRowsToSet, writer );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdateNumericAttribute( 'headingRows', headingRowsToSet, table, writer, 0 );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks if a table cell is in the heading section.\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @param {module:engine/model/element~Element} table\n\t * @returns {Boolean}\n\t * @private\n\t */\n\t_isInHeading( tableCell, table ) {\n\t\tconst headingRows = parseInt( table.getAttribute( 'headingRows' ) || 0 );\n\n\t\treturn !!headingRows && tableCell.parent.index < headingRows;\n\t}\n}\n\n// Returns cells that span beyond the new heading section.\n//\n// @param {module:engine/model/element~Element} table The table to check.\n// @param {Number} headingRowsToSet New heading rows attribute.\n// @param {Number} currentHeadingRows Current heading rows attribute.\n// @returns {Array.<module:engine/model/element~Element>}\nfunction getOverlappingCells( table, headingRowsToSet, currentHeadingRows ) {\n\tconst cellsToSplit = [];\n\n\tconst startAnalysisRow = headingRowsToSet > currentHeadingRows ? currentHeadingRows : 0;\n\t// We're analyzing only when headingRowsToSet > 0.\n\tconst endAnalysisRow = headingRowsToSet - 1;\n\n\tconst tableWalker = new TableWalker( table, { startRow: startAnalysisRow, endRow: endAnalysisRow } );\n\n\tfor ( const { row, rowspan, cell } of tableWalker ) {\n\t\tif ( rowspan > 1 && row + rowspan > headingRowsToSet ) {\n\t\t\tcellsToSplit.push( cell );\n\t\t}\n\t}\n\n\treturn cellsToSplit;\n}\n\n// Splits the table cell horizontally.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @param {Number} headingRows\n// @param {module:engine/model/writer~Writer} writer\nfunction splitHorizontally( tableCell, headingRows, writer ) {\n\tconst tableRow = tableCell.parent;\n\tconst table = tableRow.parent;\n\tconst rowIndex = tableRow.index;\n\n\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) );\n\tconst newRowspan = headingRows - rowIndex;\n\n\tconst attributes = {};\n\n\tconst spanToSet = rowspan - newRowspan;\n\n\tif ( spanToSet > 1 ) {\n\t\tattributes.rowspan = spanToSet;\n\t}\n\n\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\n\tif ( colspan > 1 ) {\n\t\tattributes.colspan = colspan;\n\t}\n\n\tconst startRow = table.getChildIndex( tableRow );\n\tconst endRow = startRow + newRowspan;\n\tconst tableMap = [ ...new TableWalker( table, { startRow, endRow, includeSpanned: true } ) ];\n\n\tlet columnIndex;\n\n\tfor ( const { row, column, cell, cellIndex } of tableMap ) {\n\t\tif ( cell === tableCell && columnIndex === undefined ) {\n\t\t\tcolumnIndex = column;\n\t\t}\n\n\t\tif ( columnIndex !== undefined && columnIndex === column && row === endRow ) {\n\t\t\tconst tableRow = table.getChild( row );\n\t\t\tconst tableCellPosition = writer.createPositionAt( tableRow, cellIndex );\n\n\t\t\tcreateEmptyTableCell( writer, tableCellPosition, attributes );\n\t\t}\n\t}\n\n\t// Update the rowspan attribute after updating table.\n\tupdateNumericAttribute( 'rowspan', newRowspan, tableCell, writer );\n}\n"]}]}